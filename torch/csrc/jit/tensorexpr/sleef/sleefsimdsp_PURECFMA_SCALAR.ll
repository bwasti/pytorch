; ModuleID = '/home/bwasti/pytorch/sleef/src/libm/sleefsimdsp.c'
source_filename = "/home/bwasti/pytorch/sleef/src/libm/sleefsimdsp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [23 x i8] c"Pure C scalar with FMA\00", align 1
@rempitabsp = external local_unnamed_addr constant [0 x float], align 4

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @Sleef_ilogbf1_purecfma(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = zext i32 %10 to i64
  %12 = select i1 %5, i64 127, i64 191
  %13 = sub nsw i64 %11, %12
  %14 = and i64 %13, 4294967295
  %15 = fcmp une float %0, 0.000000e+00
  %16 = select i1 %15, i64 %14, i64 -2147483648
  %17 = fcmp ord float %0, 0.000000e+00
  %18 = fcmp une float %0, 0x7FF0000000000000
  %19 = fcmp une float %0, 0xFFF0000000000000
  %20 = and i1 %19, %18
  %21 = and i1 %17, %20
  %22 = select i1 %21, i64 %16, i64 2147483647
  ret i64 %22
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_ldexpf1_purecfma(float, i64) local_unnamed_addr #0 {
  %3 = trunc i64 %1 to i32
  %4 = ashr i32 %3, 31
  %5 = zext i32 %4 to i64
  %6 = add i32 %4, %3
  %7 = ashr i32 %6, 6
  %8 = zext i32 %7 to i64
  %9 = sub nsw i64 %8, %5
  %10 = shl nsw i64 %9, 4
  %11 = shl nsw i64 %9, 6
  %12 = sub i64 %1, %11
  %13 = add nsw i64 %10, 127
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %15, i64 4294967295, i64 0
  %17 = and i64 %16, %13
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, 255
  %20 = select i1 %19, i64 4294967295, i64 0
  %21 = xor i64 %20, 511
  %22 = and i64 %21, %17
  %23 = and i64 %20, 255
  %24 = or i64 %22, %23
  %25 = trunc i64 %24 to i32
  %26 = shl i32 %25, 23
  %27 = bitcast i32 %26 to float
  %28 = fmul float %27, %0
  %29 = fmul float %28, %27
  %30 = fmul float %29, %27
  %31 = fmul float %30, %27
  %32 = trunc i64 %12 to i32
  %33 = shl i32 %32, 23
  %34 = add i32 %33, 1065353216
  %35 = bitcast i32 %34 to float
  %36 = fmul float %31, %35
  ret float %36
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_sinf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %14, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = fptosi float %8 to i32
  %10 = sitofp i32 %9 to float
  %11 = tail call float @llvm.fma.f32(float %10, float 0xC00921C000000000, float %0) #5
  %12 = tail call float @llvm.fma.f32(float %10, float 0xBF1DAA0000000000, float %11) #5
  %13 = tail call float @llvm.fma.f32(float %10, float 0xBE210B4620000000, float %12) #5
  br label %146

; <label>:14:                                     ; preds = %1
  %15 = fcmp uge float %4, 3.900000e+04
  br i1 %15, label %25, label %16, !prof !2

; <label>:16:                                     ; preds = %14
  %17 = fmul float %0, 0x3FD45F3060000000
  %18 = tail call float @llvm.rint.f32(float %17) #5
  %19 = fptosi float %18 to i32
  %20 = sitofp i32 %19 to float
  %21 = tail call float @llvm.fma.f32(float %20, float 0xC009200000000000, float %0) #5
  %22 = tail call float @llvm.fma.f32(float %20, float 0xBF4FB00000000000, float %21) #5
  %23 = tail call float @llvm.fma.f32(float %20, float 0xBEA5100000000000, float %22) #5
  %24 = tail call float @llvm.fma.f32(float %20, float 0xBDE0B46120000000, float %23) #5
  br label %146

; <label>:25:                                     ; preds = %14
  %26 = lshr i32 %2, 23
  %27 = and i32 %26, 255
  %28 = add nsw i32 %27, -152
  %29 = icmp ugt i32 %27, 217
  %30 = select i1 %29, i32 -536870912, i32 0
  %31 = add i32 %30, %2
  %32 = bitcast i32 %31 to float
  %33 = ashr i32 %28, 31
  %34 = xor i32 %33, 1073741823
  %35 = and i32 %34, %28
  %36 = shl i32 %35, 2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !3
  %40 = fmul float %39, %32
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %32, float %39, float %41) #5
  %43 = fmul float %40, 4.000000e+00
  %44 = tail call float @llvm.rint.f32(float %43) #5
  %45 = tail call float @llvm.rint.f32(float %40) #5
  %46 = fmul float %45, 4.000000e+00
  %47 = fsub float %44, %46
  %48 = tail call float @llvm.trunc.f32(float %47) #5
  %49 = fptosi float %48 to i32
  %50 = sext i32 %49 to i64
  %51 = fmul float %44, 2.500000e-01
  %52 = fsub float %40, %51
  %53 = fadd float %42, %52
  %54 = fsub float %52, %53
  %55 = fadd float %42, %54
  %56 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %37
  %57 = load float, float* %56, align 4, !tbaa !3
  %58 = fmul float %57, %32
  %59 = fsub float -0.000000e+00, %58
  %60 = tail call float @llvm.fma.f32(float %32, float %57, float %59) #5
  %61 = fadd float %58, %53
  %62 = fsub float %61, %53
  %63 = fsub float %61, %62
  %64 = fsub float %53, %63
  %65 = fsub float %58, %62
  %66 = fadd float %65, %64
  %67 = fadd float %60, %55
  %68 = fadd float %67, %66
  %69 = fmul float %61, 4.000000e+00
  %70 = tail call float @llvm.rint.f32(float %69) #5
  %71 = tail call float @llvm.rint.f32(float %61) #5
  %72 = fmul float %71, 4.000000e+00
  %73 = fsub float %70, %72
  %74 = tail call float @llvm.trunc.f32(float %73) #5
  %75 = fptosi float %74 to i32
  %76 = sext i32 %75 to i64
  %77 = fmul float %70, 2.500000e-01
  %78 = fsub float %61, %77
  %79 = add nsw i64 %76, %50
  %80 = fadd float %78, %68
  %81 = fsub float %78, %80
  %82 = fadd float %68, %81
  %83 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %37
  %84 = load float, float* %83, align 4, !tbaa !3
  %85 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %37
  %86 = load float, float* %85, align 4, !tbaa !3
  %87 = fmul float %84, %32
  %88 = fsub float -0.000000e+00, %87
  %89 = tail call float @llvm.fma.f32(float %84, float %32, float %88) #5
  %90 = tail call float @llvm.fma.f32(float %86, float %32, float %89) #5
  %91 = fadd float %87, %80
  %92 = fsub float %91, %80
  %93 = fsub float %91, %92
  %94 = fsub float %80, %93
  %95 = fsub float %87, %92
  %96 = fadd float %95, %94
  %97 = fadd float %90, %82
  %98 = fadd float %97, %96
  %99 = fadd float %91, %98
  %100 = fsub float %91, %99
  %101 = fadd float %98, %100
  %102 = fmul float %99, 0x401921FB60000000
  %103 = fsub float -0.000000e+00, %102
  %104 = tail call float @llvm.fma.f32(float %99, float 0x401921FB60000000, float %103) #5
  %105 = tail call float @llvm.fma.f32(float %101, float 0x401921FB60000000, float %104) #5
  %106 = tail call float @llvm.fma.f32(float %99, float 0xBE8777A5C0000000, float %105) #5
  %107 = and i32 %31, 2147483647
  %108 = bitcast i32 %107 to float
  %109 = fcmp uge float %108, 0x3FE6666660000000
  %110 = select i1 %109, float %102, float %32
  %111 = select i1 %109, float %106, float 0.000000e+00
  %112 = shl nsw i64 %79, 1
  %113 = and i64 %112, 6
  %114 = fcmp ule float %110, 0.000000e+00
  %115 = select i1 %114, i64 1, i64 2
  %116 = add nuw nsw i64 %115, %113
  %117 = trunc i64 %116 to i32
  %118 = lshr i32 %117, 2
  %119 = shl i64 %79, 63
  %120 = ashr exact i64 %119, 63
  %121 = trunc i64 %120 to i32
  %122 = bitcast float %110 to i32
  %123 = and i32 %122, -2147483648
  %124 = xor i32 %123, -1077342245
  %125 = bitcast i32 %124 to float
  %126 = or i32 %123, 859553070
  %127 = bitcast i32 %126 to float
  %128 = fadd float %110, %125
  %129 = fsub float %128, %110
  %130 = fsub float %128, %129
  %131 = fsub float %110, %130
  %132 = fsub float %125, %129
  %133 = fadd float %132, %131
  %134 = fadd float %111, %127
  %135 = fadd float %134, %133
  %136 = icmp eq i32 %121, 0
  %137 = select i1 %136, float %110, float %128
  %138 = select i1 %136, float %111, float %135
  %139 = fadd float %137, %138
  %140 = fcmp oeq float %0, 0x7FF0000000000000
  %141 = fcmp oeq float %0, 0xFFF0000000000000
  %142 = or i1 %140, %141
  %143 = fcmp uno float %0, 0.000000e+00
  %144 = or i1 %143, %142
  %145 = select i1 %144, float 0xFFFFFFFFE0000000, float %139
  br label %146

; <label>:146:                                    ; preds = %16, %25, %6
  %147 = phi i32 [ %9, %6 ], [ %19, %16 ], [ %118, %25 ]
  %148 = phi float [ %13, %6 ], [ %24, %16 ], [ %145, %25 ]
  %149 = fmul float %148, %148
  %150 = shl i32 %147, 31
  %151 = bitcast float %148 to i32
  %152 = xor i32 %150, %151
  %153 = bitcast i32 %152 to float
  %154 = tail call float @llvm.fma.f32(float %149, float 0x3EC5E150E0000000, float 0xBF29F75D60000000) #5
  %155 = tail call float @llvm.fma.f32(float %154, float %149, float 0x3F8110EEE0000000) #5
  %156 = tail call float @llvm.fma.f32(float %155, float %149, float 0xBFC55554C0000000) #5
  %157 = fmul float %156, %153
  %158 = fmul float %149, %157
  %159 = fadd float %158, %153
  %160 = icmp eq i32 %2, -2147483648
  %161 = select i1 %160, float %0, float %159
  ret float %161
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_cosf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %21, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fadd float %7, -5.000000e-01
  %9 = tail call float @llvm.rint.f32(float %8) #5
  %10 = fptosi float %9 to i32
  %11 = sext i32 %10 to i64
  %12 = shl nsw i64 %11, 1
  %13 = and i64 %12, 4294967294
  %14 = or i64 %13, 1
  %15 = trunc i64 %12 to i32
  %16 = or i32 %15, 1
  %17 = sitofp i32 %16 to float
  %18 = tail call float @llvm.fma.f32(float %17, float 0xBFF921C000000000, float %0) #5
  %19 = tail call float @llvm.fma.f32(float %17, float 0xBF0DAA0000000000, float %18) #5
  %20 = tail call float @llvm.fma.f32(float %17, float 0xBE110B4620000000, float %19) #5
  br label %156

; <label>:21:                                     ; preds = %1
  %22 = fcmp uge float %4, 3.900000e+04
  br i1 %22, label %39, label %23, !prof !2

; <label>:23:                                     ; preds = %21
  %24 = fmul float %0, 0x3FD45F3060000000
  %25 = fadd float %24, -5.000000e-01
  %26 = tail call float @llvm.rint.f32(float %25) #5
  %27 = fptosi float %26 to i32
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 1
  %30 = and i64 %29, 4294967294
  %31 = or i64 %30, 1
  %32 = trunc i64 %29 to i32
  %33 = or i32 %32, 1
  %34 = sitofp i32 %33 to float
  %35 = tail call float @llvm.fma.f32(float %34, float 0xBFF9200000000000, float %0) #5
  %36 = tail call float @llvm.fma.f32(float %34, float 0xBF3FB00000000000, float %35) #5
  %37 = tail call float @llvm.fma.f32(float %34, float 0xBE95100000000000, float %36) #5
  %38 = tail call float @llvm.fma.f32(float %34, float 0xBDD0B46120000000, float %37) #5
  br label %156

; <label>:39:                                     ; preds = %21
  %40 = lshr i32 %2, 23
  %41 = and i32 %40, 255
  %42 = add nsw i32 %41, -152
  %43 = icmp ugt i32 %41, 217
  %44 = select i1 %43, i32 -536870912, i32 0
  %45 = add i32 %44, %2
  %46 = bitcast i32 %45 to float
  %47 = ashr i32 %42, 31
  %48 = xor i32 %47, 1073741823
  %49 = and i32 %48, %42
  %50 = shl i32 %49, 2
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !3
  %54 = fmul float %53, %46
  %55 = fsub float -0.000000e+00, %54
  %56 = tail call float @llvm.fma.f32(float %46, float %53, float %55) #5
  %57 = fmul float %54, 4.000000e+00
  %58 = tail call float @llvm.rint.f32(float %57) #5
  %59 = tail call float @llvm.rint.f32(float %54) #5
  %60 = fmul float %59, 4.000000e+00
  %61 = fsub float %58, %60
  %62 = tail call float @llvm.trunc.f32(float %61) #5
  %63 = fptosi float %62 to i32
  %64 = sext i32 %63 to i64
  %65 = fmul float %58, 2.500000e-01
  %66 = fsub float %54, %65
  %67 = fadd float %56, %66
  %68 = fsub float %66, %67
  %69 = fadd float %56, %68
  %70 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %51
  %71 = load float, float* %70, align 4, !tbaa !3
  %72 = fmul float %71, %46
  %73 = fsub float -0.000000e+00, %72
  %74 = tail call float @llvm.fma.f32(float %46, float %71, float %73) #5
  %75 = fadd float %72, %67
  %76 = fsub float %75, %67
  %77 = fsub float %75, %76
  %78 = fsub float %67, %77
  %79 = fsub float %72, %76
  %80 = fadd float %79, %78
  %81 = fadd float %74, %69
  %82 = fadd float %81, %80
  %83 = fmul float %75, 4.000000e+00
  %84 = tail call float @llvm.rint.f32(float %83) #5
  %85 = tail call float @llvm.rint.f32(float %75) #5
  %86 = fmul float %85, 4.000000e+00
  %87 = fsub float %84, %86
  %88 = tail call float @llvm.trunc.f32(float %87) #5
  %89 = fptosi float %88 to i32
  %90 = sext i32 %89 to i64
  %91 = fmul float %84, 2.500000e-01
  %92 = fsub float %75, %91
  %93 = add nsw i64 %90, %64
  %94 = fadd float %92, %82
  %95 = fsub float %92, %94
  %96 = fadd float %82, %95
  %97 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %51
  %98 = load float, float* %97, align 4, !tbaa !3
  %99 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %51
  %100 = load float, float* %99, align 4, !tbaa !3
  %101 = fmul float %98, %46
  %102 = fsub float -0.000000e+00, %101
  %103 = tail call float @llvm.fma.f32(float %98, float %46, float %102) #5
  %104 = tail call float @llvm.fma.f32(float %100, float %46, float %103) #5
  %105 = fadd float %101, %94
  %106 = fsub float %105, %94
  %107 = fsub float %105, %106
  %108 = fsub float %94, %107
  %109 = fsub float %101, %106
  %110 = fadd float %109, %108
  %111 = fadd float %104, %96
  %112 = fadd float %111, %110
  %113 = fadd float %105, %112
  %114 = fsub float %105, %113
  %115 = fadd float %112, %114
  %116 = fmul float %113, 0x401921FB60000000
  %117 = fsub float -0.000000e+00, %116
  %118 = tail call float @llvm.fma.f32(float %113, float 0x401921FB60000000, float %117) #5
  %119 = tail call float @llvm.fma.f32(float %115, float 0x401921FB60000000, float %118) #5
  %120 = tail call float @llvm.fma.f32(float %113, float 0xBE8777A5C0000000, float %119) #5
  %121 = and i32 %45, 2147483647
  %122 = bitcast i32 %121 to float
  %123 = fcmp uge float %122, 0x3FE6666660000000
  %124 = select i1 %123, float %116, float %46
  %125 = select i1 %123, float %120, float 0.000000e+00
  %126 = shl nsw i64 %93, 1
  %127 = and i64 %126, 6
  %128 = fcmp ule float %124, 0.000000e+00
  %129 = select i1 %128, i64 7, i64 8
  %130 = add nuw nsw i64 %129, %127
  %131 = lshr i64 %130, 1
  %132 = select i1 %128, i32 -2147483648, i32 0
  %133 = xor i32 %132, -1077342245
  %134 = bitcast i32 %133 to float
  %135 = or i32 %132, 859553070
  %136 = bitcast i32 %135 to float
  %137 = fadd float %124, %134
  %138 = fsub float %137, %124
  %139 = fsub float %137, %138
  %140 = fsub float %124, %139
  %141 = fsub float %134, %138
  %142 = fadd float %141, %140
  %143 = fadd float %125, %136
  %144 = fadd float %143, %142
  %145 = and i64 %93, 1
  %146 = icmp ne i64 %145, 0
  %147 = select i1 %146, float %124, float %137
  %148 = select i1 %146, float %125, float %144
  %149 = fadd float %147, %148
  %150 = fcmp oeq float %0, 0x7FF0000000000000
  %151 = fcmp oeq float %0, 0xFFF0000000000000
  %152 = or i1 %150, %151
  %153 = fcmp uno float %0, 0.000000e+00
  %154 = or i1 %153, %152
  %155 = select i1 %154, float 0xFFFFFFFFE0000000, float %149
  br label %156

; <label>:156:                                    ; preds = %23, %39, %6
  %157 = phi i64 [ %14, %6 ], [ %31, %23 ], [ %131, %39 ]
  %158 = phi float [ %20, %6 ], [ %38, %23 ], [ %155, %39 ]
  %159 = fmul float %158, %158
  %160 = lshr i64 %157, 1
  %161 = bitcast float %158 to i32
  %162 = trunc i64 %160 to i32
  %163 = and i32 %162, 1
  %164 = add nsw i32 %163, -1
  %165 = and i32 %164, -2147483648
  %166 = xor i32 %165, %161
  %167 = bitcast i32 %166 to float
  %168 = tail call float @llvm.fma.f32(float %159, float 0x3EC5E150E0000000, float 0xBF29F75D60000000) #5
  %169 = tail call float @llvm.fma.f32(float %168, float %159, float 0x3F8110EEE0000000) #5
  %170 = tail call float @llvm.fma.f32(float %169, float %159, float 0xBFC55554C0000000) #5
  %171 = fmul float %170, %167
  %172 = fmul float %159, %171
  %173 = fadd float %172, %167
  ret float %173
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_tanf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 6.250000e+01
  br i1 %5, label %14, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = fptosi float %8 to i32
  %10 = sitofp i32 %9 to float
  %11 = tail call float @llvm.fma.f32(float %10, float 0xBFF921C000000000, float %0) #5
  %12 = tail call float @llvm.fma.f32(float %10, float 0xBF0DAA0000000000, float %11) #5
  %13 = tail call float @llvm.fma.f32(float %10, float 0xBE110B4620000000, float %12) #5
  br label %119

; <label>:14:                                     ; preds = %1
  %15 = fcmp uge float %4, 3.900000e+04
  br i1 %15, label %25, label %16, !prof !2

; <label>:16:                                     ; preds = %14
  %17 = fmul float %0, 0x3FE45F3060000000
  %18 = tail call float @llvm.rint.f32(float %17) #5
  %19 = fptosi float %18 to i32
  %20 = sitofp i32 %19 to float
  %21 = tail call float @llvm.fma.f32(float %20, float 0xBFF9200000000000, float %0) #5
  %22 = tail call float @llvm.fma.f32(float %20, float 0xBF3FB00000000000, float %21) #5
  %23 = tail call float @llvm.fma.f32(float %20, float 0xBE95100000000000, float %22) #5
  %24 = tail call float @llvm.fma.f32(float %20, float 0xBDD0B46120000000, float %23) #5
  br label %119

; <label>:25:                                     ; preds = %14
  %26 = lshr i32 %2, 23
  %27 = and i32 %26, 255
  %28 = add nsw i32 %27, -152
  %29 = icmp ugt i32 %27, 217
  %30 = select i1 %29, i32 -536870912, i32 0
  %31 = add i32 %30, %2
  %32 = bitcast i32 %31 to float
  %33 = ashr i32 %28, 31
  %34 = xor i32 %33, 1073741823
  %35 = and i32 %34, %28
  %36 = shl i32 %35, 2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !3
  %40 = fmul float %39, %32
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %32, float %39, float %41) #5
  %43 = fmul float %40, 4.000000e+00
  %44 = tail call float @llvm.rint.f32(float %43) #5
  %45 = tail call float @llvm.rint.f32(float %40) #5
  %46 = fmul float %45, 4.000000e+00
  %47 = fsub float %44, %46
  %48 = tail call float @llvm.trunc.f32(float %47) #5
  %49 = fptosi float %48 to i32
  %50 = fmul float %44, 2.500000e-01
  %51 = fsub float %40, %50
  %52 = fadd float %42, %51
  %53 = fsub float %51, %52
  %54 = fadd float %42, %53
  %55 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %37
  %56 = load float, float* %55, align 4, !tbaa !3
  %57 = fmul float %56, %32
  %58 = fsub float -0.000000e+00, %57
  %59 = tail call float @llvm.fma.f32(float %32, float %56, float %58) #5
  %60 = fadd float %57, %52
  %61 = fsub float %60, %52
  %62 = fsub float %60, %61
  %63 = fsub float %52, %62
  %64 = fsub float %57, %61
  %65 = fadd float %64, %63
  %66 = fadd float %59, %54
  %67 = fadd float %66, %65
  %68 = fmul float %60, 4.000000e+00
  %69 = tail call float @llvm.rint.f32(float %68) #5
  %70 = tail call float @llvm.rint.f32(float %60) #5
  %71 = fmul float %70, 4.000000e+00
  %72 = fsub float %69, %71
  %73 = tail call float @llvm.trunc.f32(float %72) #5
  %74 = fptosi float %73 to i32
  %75 = fmul float %69, 2.500000e-01
  %76 = fsub float %60, %75
  %77 = add i32 %74, %49
  %78 = fadd float %76, %67
  %79 = fsub float %76, %78
  %80 = fadd float %67, %79
  %81 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %37
  %82 = load float, float* %81, align 4, !tbaa !3
  %83 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %37
  %84 = load float, float* %83, align 4, !tbaa !3
  %85 = fmul float %82, %32
  %86 = fsub float -0.000000e+00, %85
  %87 = tail call float @llvm.fma.f32(float %82, float %32, float %86) #5
  %88 = tail call float @llvm.fma.f32(float %84, float %32, float %87) #5
  %89 = fadd float %85, %78
  %90 = fsub float %89, %78
  %91 = fsub float %89, %90
  %92 = fsub float %78, %91
  %93 = fsub float %85, %90
  %94 = fadd float %93, %92
  %95 = fadd float %88, %80
  %96 = fadd float %95, %94
  %97 = fadd float %89, %96
  %98 = fsub float %89, %97
  %99 = fadd float %96, %98
  %100 = fmul float %97, 0x401921FB60000000
  %101 = fsub float -0.000000e+00, %100
  %102 = tail call float @llvm.fma.f32(float %97, float 0x401921FB60000000, float %101) #5
  %103 = tail call float @llvm.fma.f32(float %99, float 0x401921FB60000000, float %102) #5
  %104 = tail call float @llvm.fma.f32(float %97, float 0xBE8777A5C0000000, float %103) #5
  %105 = and i32 %31, 2147483647
  %106 = bitcast i32 %105 to float
  %107 = fcmp uge float %106, 0x3FE6666660000000
  %108 = select i1 %107, float %100, float %32
  %109 = select i1 %107, float %104, float 0.000000e+00
  %110 = fadd float %108, %109
  %111 = fcmp oeq float %0, 0x7FF0000000000000
  %112 = fcmp oeq float %0, 0xFFF0000000000000
  %113 = or i1 %111, %112
  %114 = fcmp uno float %0, 0.000000e+00
  %115 = or i1 %114, %113
  %116 = select i1 %115, float 0xFFFFFFFFE0000000, float %110
  %117 = icmp eq i32 %2, -2147483648
  %118 = select i1 %117, float %0, float %116
  br label %119

; <label>:119:                                    ; preds = %16, %25, %6
  %120 = phi float [ %13, %6 ], [ %24, %16 ], [ %118, %25 ]
  %121 = phi i32 [ %9, %6 ], [ %19, %16 ], [ %77, %25 ]
  %122 = fmul float %120, %120
  %123 = shl i32 %121, 31
  %124 = bitcast float %120 to i32
  %125 = xor i32 %123, %124
  %126 = bitcast i32 %125 to float
  %127 = fmul float %122, %122
  %128 = fmul float %127, %127
  %129 = tail call float @llvm.fma.f32(float %122, float 0x3F82FD7040000000, float 0x3F6B323AE0000000) #5
  %130 = tail call float @llvm.fma.f32(float %122, float 0x3F98E20C80000000, float 0x3FAB5DBCA0000000) #5
  %131 = tail call float @llvm.fma.f32(float %122, float 0x3FC112B1C0000000, float 0x3FD5554F20000000) #5
  %132 = tail call float @llvm.fma.f32(float %127, float %130, float %131) #5
  %133 = tail call float @llvm.fma.f32(float %128, float %129, float %132) #5
  %134 = fmul float %133, %126
  %135 = tail call float @llvm.fma.f32(float %122, float %134, float %126) #5
  %136 = fdiv float 1.000000e+00, %135
  %137 = icmp eq i32 %123, 0
  %138 = select i1 %137, float %135, float %136
  ret float %138
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_sinf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %25, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = fptosi float %8 to i32
  %10 = tail call float @llvm.fma.f32(float %8, float 0xC00921C000000000, float %0) #5
  %11 = fmul float %8, 0xBF1DAA0000000000
  %12 = fadd float %10, %11
  %13 = fsub float %12, %10
  %14 = fsub float %12, %13
  %15 = fsub float %10, %14
  %16 = fsub float %11, %13
  %17 = fadd float %16, %15
  %18 = fmul float %8, 0xBE210B4620000000
  %19 = fadd float %18, %12
  %20 = fsub float %12, %19
  %21 = fadd float %18, %20
  %22 = fadd float %21, %17
  %23 = insertelement <2 x float> undef, float %19, i32 0
  %24 = insertelement <2 x float> %23, float %22, i32 1
  br label %150

; <label>:25:                                     ; preds = %1
  %26 = lshr i32 %2, 23
  %27 = and i32 %26, 255
  %28 = add nsw i32 %27, -152
  %29 = icmp ugt i32 %27, 217
  %30 = select i1 %29, i32 -536870912, i32 0
  %31 = add i32 %30, %2
  %32 = bitcast i32 %31 to float
  %33 = ashr i32 %28, 31
  %34 = xor i32 %33, 1073741823
  %35 = and i32 %34, %28
  %36 = shl i32 %35, 2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !3
  %40 = fmul float %39, %32
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %32, float %39, float %41) #5
  %43 = fmul float %40, 4.000000e+00
  %44 = tail call float @llvm.rint.f32(float %43) #5
  %45 = tail call float @llvm.rint.f32(float %40) #5
  %46 = fmul float %45, 4.000000e+00
  %47 = fsub float %44, %46
  %48 = tail call float @llvm.trunc.f32(float %47) #5
  %49 = fptosi float %48 to i32
  %50 = sext i32 %49 to i64
  %51 = fmul float %44, 2.500000e-01
  %52 = fsub float %40, %51
  %53 = fadd float %42, %52
  %54 = fsub float %52, %53
  %55 = fadd float %42, %54
  %56 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %37
  %57 = load float, float* %56, align 4, !tbaa !3
  %58 = fmul float %57, %32
  %59 = fsub float -0.000000e+00, %58
  %60 = tail call float @llvm.fma.f32(float %32, float %57, float %59) #5
  %61 = fadd float %58, %53
  %62 = fsub float %61, %53
  %63 = fsub float %61, %62
  %64 = fsub float %53, %63
  %65 = fsub float %58, %62
  %66 = fadd float %65, %64
  %67 = fadd float %60, %55
  %68 = fadd float %67, %66
  %69 = fmul float %61, 4.000000e+00
  %70 = tail call float @llvm.rint.f32(float %69) #5
  %71 = tail call float @llvm.rint.f32(float %61) #5
  %72 = fmul float %71, 4.000000e+00
  %73 = fsub float %70, %72
  %74 = tail call float @llvm.trunc.f32(float %73) #5
  %75 = fptosi float %74 to i32
  %76 = sext i32 %75 to i64
  %77 = fmul float %70, 2.500000e-01
  %78 = fsub float %61, %77
  %79 = add nsw i64 %76, %50
  %80 = fadd float %78, %68
  %81 = fsub float %78, %80
  %82 = fadd float %68, %81
  %83 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %37
  %84 = load float, float* %83, align 4, !tbaa !3
  %85 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %37
  %86 = load float, float* %85, align 4, !tbaa !3
  %87 = fmul float %84, %32
  %88 = fsub float -0.000000e+00, %87
  %89 = tail call float @llvm.fma.f32(float %84, float %32, float %88) #5
  %90 = tail call float @llvm.fma.f32(float %86, float %32, float %89) #5
  %91 = fadd float %87, %80
  %92 = fsub float %91, %80
  %93 = fsub float %91, %92
  %94 = fsub float %80, %93
  %95 = fsub float %87, %92
  %96 = fadd float %95, %94
  %97 = fadd float %90, %82
  %98 = fadd float %97, %96
  %99 = fadd float %91, %98
  %100 = fsub float %91, %99
  %101 = fadd float %98, %100
  %102 = fmul float %99, 0x401921FB60000000
  %103 = fsub float -0.000000e+00, %102
  %104 = tail call float @llvm.fma.f32(float %99, float 0x401921FB60000000, float %103) #5
  %105 = tail call float @llvm.fma.f32(float %101, float 0x401921FB60000000, float %104) #5
  %106 = tail call float @llvm.fma.f32(float %99, float 0xBE8777A5C0000000, float %105) #5
  %107 = and i32 %31, 2147483647
  %108 = bitcast i32 %107 to float
  %109 = fcmp uge float %108, 0x3FE6666660000000
  %110 = select i1 %109, float %102, float %32
  %111 = select i1 %109, float %106, float 0.000000e+00
  %112 = shl nsw i64 %79, 1
  %113 = and i64 %112, 6
  %114 = fcmp ule float %110, 0.000000e+00
  %115 = select i1 %114, i64 1, i64 2
  %116 = add nuw nsw i64 %115, %113
  %117 = trunc i64 %116 to i32
  %118 = lshr i32 %117, 2
  %119 = shl i64 %79, 63
  %120 = ashr exact i64 %119, 63
  %121 = trunc i64 %120 to i32
  %122 = bitcast float %110 to i32
  %123 = and i32 %122, -2147483648
  %124 = xor i32 %123, -1077342245
  %125 = bitcast i32 %124 to float
  %126 = or i32 %123, 859553070
  %127 = bitcast i32 %126 to float
  %128 = fadd float %110, %125
  %129 = fsub float %128, %110
  %130 = fsub float %128, %129
  %131 = fsub float %110, %130
  %132 = fsub float %125, %129
  %133 = fadd float %132, %131
  %134 = fadd float %111, %127
  %135 = fadd float %134, %133
  %136 = icmp eq i32 %121, 0
  %137 = select i1 %136, float %110, float %128
  %138 = select i1 %136, float %111, float %135
  %139 = fadd float %137, %138
  %140 = fsub float %137, %139
  %141 = fadd float %138, %140
  %142 = insertelement <2 x float> undef, float %141, i32 1
  %143 = fcmp oeq float %0, 0x7FF0000000000000
  %144 = fcmp oeq float %0, 0xFFF0000000000000
  %145 = or i1 %143, %144
  %146 = fcmp uno float %0, 0.000000e+00
  %147 = or i1 %146, %145
  %148 = select i1 %147, float 0xFFFFFFFFE0000000, float %139
  %149 = insertelement <2 x float> %142, float %148, i32 0
  br label %150

; <label>:150:                                    ; preds = %25, %6
  %151 = phi <2 x float> [ %24, %6 ], [ %149, %25 ]
  %152 = phi i32 [ %9, %6 ], [ %118, %25 ]
  %153 = extractelement <2 x float> %151, i32 0
  %154 = fmul float %153, %153
  %155 = fadd float %153, %153
  %156 = extractelement <2 x float> %151, i32 1
  %157 = fsub float -0.000000e+00, %154
  %158 = tail call float @llvm.fma.f32(float %153, float %153, float %157) #5
  %159 = tail call float @llvm.fma.f32(float %155, float %156, float %158) #5
  %160 = tail call float @llvm.fma.f32(float %154, float 0x3EC5E150E0000000, float 0xBF29F75D60000000) #5
  %161 = tail call float @llvm.fma.f32(float %160, float %154, float 0x3F8110EEE0000000) #5
  %162 = fmul float %154, %161
  %163 = fadd float %162, 0xBFC55554C0000000
  %164 = fsub float 0xBFC55554C0000000, %163
  %165 = fadd float %162, %164
  %166 = fmul float %154, %163
  %167 = fsub float -0.000000e+00, %166
  %168 = tail call float @llvm.fma.f32(float %163, float %154, float %167) #5
  %169 = tail call float @llvm.fma.f32(float %165, float %154, float %168) #5
  %170 = tail call float @llvm.fma.f32(float %163, float %159, float %169) #5
  %171 = fadd float %166, 1.000000e+00
  %172 = fsub float 1.000000e+00, %171
  %173 = fadd float %166, %172
  %174 = fadd float %170, %173
  %175 = fmul float %153, %174
  %176 = tail call float @llvm.fma.f32(float %156, float %171, float %175) #5
  %177 = tail call float @llvm.fma.f32(float %153, float %171, float %176) #5
  %178 = shl i32 %152, 31
  %179 = bitcast float %177 to i32
  %180 = xor i32 %178, %179
  %181 = bitcast i32 %180 to float
  %182 = icmp eq i32 %2, -2147483648
  %183 = select i1 %182, float %0, float %181
  ret float %183
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_cosf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %37, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = tail call float @llvm.fma.f32(float %0, float 0x3FD45F3060000000, float -5.000000e-01) #5
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = tail call float @llvm.fma.f32(float %8, float 2.000000e+00, float 1.000000e+00) #5
  %10 = tail call float @llvm.rint.f32(float %9) #5
  %11 = fptosi float %10 to i32
  %12 = fmul float %9, 0xBFF921C000000000
  %13 = fadd float %12, %0
  %14 = fsub float %13, %0
  %15 = fsub float %13, %14
  %16 = fsub float %0, %15
  %17 = fsub float %12, %14
  %18 = fadd float %17, %16
  %19 = fmul float %9, 0xBF0DAA0000000000
  %20 = fadd float %19, %13
  %21 = fsub float %20, %13
  %22 = fsub float %20, %21
  %23 = fsub float %13, %22
  %24 = fsub float %19, %21
  %25 = fadd float %24, %23
  %26 = fadd float %18, %25
  %27 = fmul float %9, 0xBE110B4620000000
  %28 = fadd float %27, %20
  %29 = fsub float %28, %20
  %30 = fsub float %28, %29
  %31 = fsub float %20, %30
  %32 = fsub float %27, %29
  %33 = fadd float %32, %31
  %34 = fadd float %26, %33
  %35 = insertelement <2 x float> undef, float %28, i32 0
  %36 = insertelement <2 x float> %35, float %34, i32 1
  br label %159

; <label>:37:                                     ; preds = %1
  %38 = lshr i32 %2, 23
  %39 = and i32 %38, 255
  %40 = add nsw i32 %39, -152
  %41 = icmp ugt i32 %39, 217
  %42 = select i1 %41, i32 -536870912, i32 0
  %43 = add i32 %42, %2
  %44 = bitcast i32 %43 to float
  %45 = ashr i32 %40, 31
  %46 = xor i32 %45, 1073741823
  %47 = and i32 %46, %40
  %48 = shl i32 %47, 2
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !3
  %52 = fmul float %51, %44
  %53 = fsub float -0.000000e+00, %52
  %54 = tail call float @llvm.fma.f32(float %44, float %51, float %53) #5
  %55 = fmul float %52, 4.000000e+00
  %56 = tail call float @llvm.rint.f32(float %55) #5
  %57 = tail call float @llvm.rint.f32(float %52) #5
  %58 = fmul float %57, 4.000000e+00
  %59 = fsub float %56, %58
  %60 = tail call float @llvm.trunc.f32(float %59) #5
  %61 = fptosi float %60 to i32
  %62 = sext i32 %61 to i64
  %63 = fmul float %56, 2.500000e-01
  %64 = fsub float %52, %63
  %65 = fadd float %54, %64
  %66 = fsub float %64, %65
  %67 = fadd float %54, %66
  %68 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %49
  %69 = load float, float* %68, align 4, !tbaa !3
  %70 = fmul float %69, %44
  %71 = fsub float -0.000000e+00, %70
  %72 = tail call float @llvm.fma.f32(float %44, float %69, float %71) #5
  %73 = fadd float %70, %65
  %74 = fsub float %73, %65
  %75 = fsub float %73, %74
  %76 = fsub float %65, %75
  %77 = fsub float %70, %74
  %78 = fadd float %77, %76
  %79 = fadd float %72, %67
  %80 = fadd float %79, %78
  %81 = fmul float %73, 4.000000e+00
  %82 = tail call float @llvm.rint.f32(float %81) #5
  %83 = tail call float @llvm.rint.f32(float %73) #5
  %84 = fmul float %83, 4.000000e+00
  %85 = fsub float %82, %84
  %86 = tail call float @llvm.trunc.f32(float %85) #5
  %87 = fptosi float %86 to i32
  %88 = sext i32 %87 to i64
  %89 = fmul float %82, 2.500000e-01
  %90 = fsub float %73, %89
  %91 = add nsw i64 %88, %62
  %92 = fadd float %90, %80
  %93 = fsub float %90, %92
  %94 = fadd float %80, %93
  %95 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %49
  %96 = load float, float* %95, align 4, !tbaa !3
  %97 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %49
  %98 = load float, float* %97, align 4, !tbaa !3
  %99 = fmul float %96, %44
  %100 = fsub float -0.000000e+00, %99
  %101 = tail call float @llvm.fma.f32(float %96, float %44, float %100) #5
  %102 = tail call float @llvm.fma.f32(float %98, float %44, float %101) #5
  %103 = fadd float %99, %92
  %104 = fsub float %103, %92
  %105 = fsub float %103, %104
  %106 = fsub float %92, %105
  %107 = fsub float %99, %104
  %108 = fadd float %107, %106
  %109 = fadd float %102, %94
  %110 = fadd float %109, %108
  %111 = fadd float %103, %110
  %112 = fsub float %103, %111
  %113 = fadd float %110, %112
  %114 = fmul float %111, 0x401921FB60000000
  %115 = fsub float -0.000000e+00, %114
  %116 = tail call float @llvm.fma.f32(float %111, float 0x401921FB60000000, float %115) #5
  %117 = tail call float @llvm.fma.f32(float %113, float 0x401921FB60000000, float %116) #5
  %118 = tail call float @llvm.fma.f32(float %111, float 0xBE8777A5C0000000, float %117) #5
  %119 = and i32 %43, 2147483647
  %120 = bitcast i32 %119 to float
  %121 = fcmp uge float %120, 0x3FE6666660000000
  %122 = select i1 %121, float %114, float %44
  %123 = select i1 %121, float %118, float 0.000000e+00
  %124 = shl nsw i64 %91, 1
  %125 = and i64 %124, 6
  %126 = fcmp ule float %122, 0.000000e+00
  %127 = select i1 %126, i64 7, i64 8
  %128 = add nuw nsw i64 %127, %125
  %129 = trunc i64 %128 to i32
  %130 = lshr i32 %129, 1
  %131 = select i1 %126, i32 -2147483648, i32 0
  %132 = xor i32 %131, -1077342245
  %133 = bitcast i32 %132 to float
  %134 = or i32 %131, 859553070
  %135 = bitcast i32 %134 to float
  %136 = fadd float %122, %133
  %137 = fsub float %136, %122
  %138 = fsub float %136, %137
  %139 = fsub float %122, %138
  %140 = fsub float %133, %137
  %141 = fadd float %140, %139
  %142 = fadd float %123, %135
  %143 = fadd float %142, %141
  %144 = and i64 %91, 1
  %145 = icmp ne i64 %144, 0
  %146 = select i1 %145, float %122, float %136
  %147 = select i1 %145, float %123, float %143
  %148 = fadd float %146, %147
  %149 = fsub float %146, %148
  %150 = fadd float %147, %149
  %151 = insertelement <2 x float> undef, float %150, i32 1
  %152 = fcmp oeq float %0, 0x7FF0000000000000
  %153 = fcmp oeq float %0, 0xFFF0000000000000
  %154 = or i1 %152, %153
  %155 = fcmp uno float %0, 0.000000e+00
  %156 = or i1 %155, %154
  %157 = select i1 %156, float 0xFFFFFFFFE0000000, float %148
  %158 = insertelement <2 x float> %151, float %157, i32 0
  br label %159

; <label>:159:                                    ; preds = %37, %6
  %160 = phi <2 x float> [ %36, %6 ], [ %158, %37 ]
  %161 = phi i32 [ %11, %6 ], [ %130, %37 ]
  %162 = extractelement <2 x float> %160, i32 0
  %163 = fmul float %162, %162
  %164 = fadd float %162, %162
  %165 = extractelement <2 x float> %160, i32 1
  %166 = fsub float -0.000000e+00, %163
  %167 = tail call float @llvm.fma.f32(float %162, float %162, float %166) #5
  %168 = tail call float @llvm.fma.f32(float %164, float %165, float %167) #5
  %169 = tail call float @llvm.fma.f32(float %163, float 0x3EC5E150E0000000, float 0xBF29F75D60000000) #5
  %170 = tail call float @llvm.fma.f32(float %169, float %163, float 0x3F8110EEE0000000) #5
  %171 = fmul float %163, %170
  %172 = fadd float %171, 0xBFC55554C0000000
  %173 = fsub float 0xBFC55554C0000000, %172
  %174 = fadd float %171, %173
  %175 = fmul float %163, %172
  %176 = fsub float -0.000000e+00, %175
  %177 = tail call float @llvm.fma.f32(float %172, float %163, float %176) #5
  %178 = tail call float @llvm.fma.f32(float %174, float %163, float %177) #5
  %179 = tail call float @llvm.fma.f32(float %172, float %168, float %178) #5
  %180 = fadd float %175, 1.000000e+00
  %181 = fsub float 1.000000e+00, %180
  %182 = fadd float %175, %181
  %183 = fadd float %179, %182
  %184 = fmul float %162, %183
  %185 = tail call float @llvm.fma.f32(float %165, float %180, float %184) #5
  %186 = tail call float @llvm.fma.f32(float %162, float %180, float %185) #5
  %187 = lshr i32 %161, 1
  %188 = and i32 %187, 1
  %189 = add nsw i32 %188, -1
  %190 = and i32 %189, -2147483648
  %191 = bitcast float %186 to i32
  %192 = xor i32 %190, %191
  %193 = bitcast i32 %192 to float
  ret float %193
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_fastsinf1_u3500purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x3FD45F3060000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = tail call float @llvm.fma.f32(float %3, float 0xC00921FB60000000, float %0) #5
  %6 = fmul float %5, %5
  %7 = tail call float @llvm.fma.f32(float %6, float 0xBF28AA1960000000, float 0x3F810BE9A0000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %6, float 0xBFC5554880000000) #5
  %9 = fmul float %5, %6
  %10 = tail call float @llvm.fma.f32(float %9, float %8, float %5) #5
  %11 = shl i32 %4, 31
  %12 = bitcast float %10 to i32
  %13 = xor i32 %11, %12
  %14 = bitcast i32 %13 to float
  %15 = bitcast float %0 to i32
  %16 = and i32 %15, 2147483647
  %17 = bitcast i32 %16 to float
  %18 = fcmp uge float %17, 3.000000e+01
  br i1 %18, label %19, label %21, !prof !2

; <label>:19:                                     ; preds = %1
  %20 = tail call float @Sleef_sinf1_u35purecfma(float %0)
  br label %21

; <label>:21:                                     ; preds = %1, %19
  %22 = phi float [ %20, %19 ], [ %14, %1 ]
  ret float %22
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_fastcosf1_u3500purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.fma.f32(float %0, float 0x3FD45F3060000000, float -5.000000e-01) #5
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = fadd float %0, 0xBFF921FB60000000
  %6 = tail call float @llvm.fma.f32(float %3, float 0xC00921FB60000000, float %5) #5
  %7 = fmul float %6, %6
  %8 = tail call float @llvm.fma.f32(float %7, float 0xBF28AA1960000000, float 0x3F810BE9A0000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %7, float 0xBFC5554880000000) #5
  %10 = fmul float %6, %7
  %11 = tail call float @llvm.fma.f32(float %10, float %9, float %6) #5
  %12 = and i32 %4, 1
  %13 = add nsw i32 %12, -1
  %14 = and i32 %13, -2147483648
  %15 = bitcast float %11 to i32
  %16 = xor i32 %14, %15
  %17 = bitcast i32 %16 to float
  %18 = bitcast float %0 to i32
  %19 = and i32 %18, 2147483647
  %20 = bitcast i32 %19 to float
  %21 = fcmp uge float %20, 3.000000e+01
  br i1 %21, label %22, label %24, !prof !2

; <label>:22:                                     ; preds = %1
  %23 = tail call float @Sleef_cosf1_u35purecfma(float %0)
  br label %24

; <label>:24:                                     ; preds = %1, %22
  %25 = phi float [ %23, %22 ], [ %17, %1 ]
  ret float %25
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_sincosf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %15, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = fptosi float %8 to i32
  %10 = sext i32 %9 to i64
  %11 = sitofp i32 %9 to float
  %12 = tail call float @llvm.fma.f32(float %11, float 0xBFF921C000000000, float %0) #5
  %13 = tail call float @llvm.fma.f32(float %11, float 0xBF0DAA0000000000, float %12) #5
  %14 = tail call float @llvm.fma.f32(float %11, float 0xBE110B4620000000, float %13) #5
  br label %122

; <label>:15:                                     ; preds = %1
  %16 = fcmp uge float %4, 3.900000e+04
  br i1 %16, label %27, label %17, !prof !2

; <label>:17:                                     ; preds = %15
  %18 = fmul float %0, 0x3FE45F3060000000
  %19 = tail call float @llvm.rint.f32(float %18) #5
  %20 = fptosi float %19 to i32
  %21 = sext i32 %20 to i64
  %22 = sitofp i32 %20 to float
  %23 = tail call float @llvm.fma.f32(float %22, float 0xBFF9200000000000, float %0) #5
  %24 = tail call float @llvm.fma.f32(float %22, float 0xBF3FB00000000000, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %22, float 0xBE95100000000000, float %24) #5
  %26 = tail call float @llvm.fma.f32(float %22, float 0xBDD0B46120000000, float %25) #5
  br label %122

; <label>:27:                                     ; preds = %15
  %28 = lshr i32 %2, 23
  %29 = and i32 %28, 255
  %30 = add nsw i32 %29, -152
  %31 = icmp ugt i32 %29, 217
  %32 = select i1 %31, i32 -536870912, i32 0
  %33 = add i32 %32, %2
  %34 = bitcast i32 %33 to float
  %35 = ashr i32 %30, 31
  %36 = xor i32 %35, 1073741823
  %37 = and i32 %36, %30
  %38 = shl i32 %37, 2
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !3
  %42 = fmul float %41, %34
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %34, float %41, float %43) #5
  %45 = fmul float %42, 4.000000e+00
  %46 = tail call float @llvm.rint.f32(float %45) #5
  %47 = tail call float @llvm.rint.f32(float %42) #5
  %48 = fmul float %47, 4.000000e+00
  %49 = fsub float %46, %48
  %50 = tail call float @llvm.trunc.f32(float %49) #5
  %51 = fptosi float %50 to i32
  %52 = zext i32 %51 to i64
  %53 = fmul float %46, 2.500000e-01
  %54 = fsub float %42, %53
  %55 = fadd float %44, %54
  %56 = fsub float %54, %55
  %57 = fadd float %44, %56
  %58 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %39
  %59 = load float, float* %58, align 4, !tbaa !3
  %60 = fmul float %59, %34
  %61 = fsub float -0.000000e+00, %60
  %62 = tail call float @llvm.fma.f32(float %34, float %59, float %61) #5
  %63 = fadd float %60, %55
  %64 = fsub float %63, %55
  %65 = fsub float %63, %64
  %66 = fsub float %55, %65
  %67 = fsub float %60, %64
  %68 = fadd float %67, %66
  %69 = fadd float %62, %57
  %70 = fadd float %69, %68
  %71 = fmul float %63, 4.000000e+00
  %72 = tail call float @llvm.rint.f32(float %71) #5
  %73 = tail call float @llvm.rint.f32(float %63) #5
  %74 = fmul float %73, 4.000000e+00
  %75 = fsub float %72, %74
  %76 = tail call float @llvm.trunc.f32(float %75) #5
  %77 = fptosi float %76 to i32
  %78 = zext i32 %77 to i64
  %79 = fmul float %72, 2.500000e-01
  %80 = fsub float %63, %79
  %81 = add nuw nsw i64 %78, %52
  %82 = and i64 %81, 4294967295
  %83 = fadd float %80, %70
  %84 = fsub float %80, %83
  %85 = fadd float %70, %84
  %86 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %39
  %87 = load float, float* %86, align 4, !tbaa !3
  %88 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %39
  %89 = load float, float* %88, align 4, !tbaa !3
  %90 = fmul float %87, %34
  %91 = fsub float -0.000000e+00, %90
  %92 = tail call float @llvm.fma.f32(float %87, float %34, float %91) #5
  %93 = tail call float @llvm.fma.f32(float %89, float %34, float %92) #5
  %94 = fadd float %90, %83
  %95 = fsub float %94, %83
  %96 = fsub float %94, %95
  %97 = fsub float %83, %96
  %98 = fsub float %90, %95
  %99 = fadd float %98, %97
  %100 = fadd float %93, %85
  %101 = fadd float %100, %99
  %102 = fadd float %94, %101
  %103 = fsub float %94, %102
  %104 = fadd float %101, %103
  %105 = fmul float %102, 0x401921FB60000000
  %106 = fsub float -0.000000e+00, %105
  %107 = tail call float @llvm.fma.f32(float %102, float 0x401921FB60000000, float %106) #5
  %108 = tail call float @llvm.fma.f32(float %104, float 0x401921FB60000000, float %107) #5
  %109 = tail call float @llvm.fma.f32(float %102, float 0xBE8777A5C0000000, float %108) #5
  %110 = and i32 %33, 2147483647
  %111 = bitcast i32 %110 to float
  %112 = fcmp uge float %111, 0x3FE6666660000000
  %113 = select i1 %112, float %105, float %34
  %114 = select i1 %112, float %109, float 0.000000e+00
  %115 = fadd float %113, %114
  %116 = fcmp oeq float %0, 0x7FF0000000000000
  %117 = fcmp oeq float %0, 0xFFF0000000000000
  %118 = or i1 %116, %117
  %119 = fcmp uno float %0, 0.000000e+00
  %120 = or i1 %119, %118
  %121 = select i1 %120, float 0xFFFFFFFFE0000000, float %115
  br label %122

; <label>:122:                                    ; preds = %17, %27, %6
  %123 = phi float [ %14, %6 ], [ %26, %17 ], [ %121, %27 ]
  %124 = phi i64 [ %10, %6 ], [ %21, %17 ], [ %82, %27 ]
  %125 = fmul float %123, %123
  %126 = tail call float @llvm.fma.f32(float %125, float 0xBF2994CB60000000, float 0x3F81107340000000) #5
  %127 = tail call float @llvm.fma.f32(float %126, float %125, float 0xBFC5555440000000) #5
  %128 = fmul float %125, %127
  %129 = tail call float @llvm.fma.f32(float %128, float %123, float %123) #5
  %130 = icmp eq i32 %2, -2147483648
  %131 = select i1 %130, float -0.000000e+00, float %129
  %132 = tail call float @llvm.fma.f32(float %125, float 0xBE923DB120000000, float 0x3EFA00F160000000) #5
  %133 = tail call float @llvm.fma.f32(float %132, float %125, float 0xBF56C16B00000000) #5
  %134 = tail call float @llvm.fma.f32(float %133, float %125, float 0x3FA5555540000000) #5
  %135 = tail call float @llvm.fma.f32(float %134, float %125, float -5.000000e-01) #5
  %136 = tail call float @llvm.fma.f32(float %125, float %135, float 1.000000e+00) #5
  %137 = and i64 %124, 1
  %138 = icmp ne i64 %137, 0
  %139 = select i1 %138, float %136, float %131
  %140 = select i1 %138, float %131, float %136
  %141 = shl i64 %124, 62
  %142 = ashr i64 %141, 63
  %143 = bitcast float %139 to i32
  %144 = trunc i64 %142 to i32
  %145 = and i32 %144, -2147483648
  %146 = xor i32 %145, %143
  %147 = bitcast i32 %146 to float
  %148 = add i64 %141, 4611686018427387904
  %149 = ashr i64 %148, 63
  %150 = bitcast float %140 to i32
  %151 = trunc i64 %149 to i32
  %152 = and i32 %151, -2147483648
  %153 = xor i32 %152, %150
  %154 = bitcast i32 %153 to float
  %155 = insertelement <2 x float> undef, float %147, i32 0
  %156 = insertelement <2 x float> %155, float %154, i32 1
  ret <2 x float> %156
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_sincosf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %26, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = fptosi float %8 to i32
  %10 = sext i32 %9 to i64
  %11 = tail call float @llvm.fma.f32(float %8, float 0xBFF921C000000000, float %0) #5
  %12 = fmul float %8, 0xBF0DAA0000000000
  %13 = fadd float %11, %12
  %14 = fsub float %13, %11
  %15 = fsub float %13, %14
  %16 = fsub float %11, %15
  %17 = fsub float %12, %14
  %18 = fadd float %17, %16
  %19 = fmul float %8, 0xBE110B4620000000
  %20 = fadd float %19, %13
  %21 = fsub float %13, %20
  %22 = fadd float %19, %21
  %23 = fadd float %22, %18
  %24 = insertelement <2 x float> undef, float %20, i32 0
  %25 = insertelement <2 x float> %24, float %23, i32 1
  br label %122

; <label>:26:                                     ; preds = %1
  %27 = lshr i32 %2, 23
  %28 = and i32 %27, 255
  %29 = add nsw i32 %28, -152
  %30 = icmp ugt i32 %28, 217
  %31 = select i1 %30, i32 -536870912, i32 0
  %32 = add i32 %31, %2
  %33 = bitcast i32 %32 to float
  %34 = ashr i32 %29, 31
  %35 = xor i32 %34, 1073741823
  %36 = and i32 %35, %29
  %37 = shl i32 %36, 2
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %38
  %40 = load float, float* %39, align 4, !tbaa !3
  %41 = fmul float %40, %33
  %42 = fsub float -0.000000e+00, %41
  %43 = tail call float @llvm.fma.f32(float %33, float %40, float %42) #5
  %44 = fmul float %41, 4.000000e+00
  %45 = tail call float @llvm.rint.f32(float %44) #5
  %46 = tail call float @llvm.rint.f32(float %41) #5
  %47 = fmul float %46, 4.000000e+00
  %48 = fsub float %45, %47
  %49 = tail call float @llvm.trunc.f32(float %48) #5
  %50 = fptosi float %49 to i32
  %51 = zext i32 %50 to i64
  %52 = fmul float %45, 2.500000e-01
  %53 = fsub float %41, %52
  %54 = fadd float %43, %53
  %55 = fsub float %53, %54
  %56 = fadd float %43, %55
  %57 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %38
  %58 = load float, float* %57, align 4, !tbaa !3
  %59 = fmul float %58, %33
  %60 = fsub float -0.000000e+00, %59
  %61 = tail call float @llvm.fma.f32(float %33, float %58, float %60) #5
  %62 = fadd float %59, %54
  %63 = fsub float %62, %54
  %64 = fsub float %62, %63
  %65 = fsub float %54, %64
  %66 = fsub float %59, %63
  %67 = fadd float %66, %65
  %68 = fadd float %61, %56
  %69 = fadd float %68, %67
  %70 = fmul float %62, 4.000000e+00
  %71 = tail call float @llvm.rint.f32(float %70) #5
  %72 = tail call float @llvm.rint.f32(float %62) #5
  %73 = fmul float %72, 4.000000e+00
  %74 = fsub float %71, %73
  %75 = tail call float @llvm.trunc.f32(float %74) #5
  %76 = fptosi float %75 to i32
  %77 = zext i32 %76 to i64
  %78 = fmul float %71, 2.500000e-01
  %79 = fsub float %62, %78
  %80 = add nuw nsw i64 %77, %51
  %81 = and i64 %80, 4294967295
  %82 = fadd float %79, %69
  %83 = fsub float %79, %82
  %84 = fadd float %69, %83
  %85 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %38
  %86 = load float, float* %85, align 4, !tbaa !3
  %87 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %38
  %88 = load float, float* %87, align 4, !tbaa !3
  %89 = fmul float %86, %33
  %90 = fsub float -0.000000e+00, %89
  %91 = tail call float @llvm.fma.f32(float %86, float %33, float %90) #5
  %92 = tail call float @llvm.fma.f32(float %88, float %33, float %91) #5
  %93 = fadd float %89, %82
  %94 = fsub float %93, %82
  %95 = fsub float %93, %94
  %96 = fsub float %82, %95
  %97 = fsub float %89, %94
  %98 = fadd float %97, %96
  %99 = fadd float %92, %84
  %100 = fadd float %99, %98
  %101 = fadd float %93, %100
  %102 = fsub float %93, %101
  %103 = fadd float %100, %102
  %104 = fmul float %101, 0x401921FB60000000
  %105 = fsub float -0.000000e+00, %104
  %106 = tail call float @llvm.fma.f32(float %101, float 0x401921FB60000000, float %105) #5
  %107 = tail call float @llvm.fma.f32(float %103, float 0x401921FB60000000, float %106) #5
  %108 = tail call float @llvm.fma.f32(float %101, float 0xBE8777A5C0000000, float %107) #5
  %109 = and i32 %32, 2147483647
  %110 = bitcast i32 %109 to float
  %111 = fcmp uge float %110, 0x3FE6666660000000
  %112 = select i1 %111, float %104, float %33
  %113 = select i1 %111, float %108, float 0.000000e+00
  %114 = insertelement <2 x float> undef, float %113, i32 1
  %115 = fcmp oeq float %0, 0x7FF0000000000000
  %116 = fcmp oeq float %0, 0xFFF0000000000000
  %117 = or i1 %115, %116
  %118 = fcmp uno float %0, 0.000000e+00
  %119 = or i1 %118, %117
  %120 = select i1 %119, float 0xFFFFFFFFE0000000, float %112
  %121 = insertelement <2 x float> %114, float %120, i32 0
  br label %122

; <label>:122:                                    ; preds = %26, %6
  %123 = phi <2 x float> [ %25, %6 ], [ %121, %26 ]
  %124 = phi i64 [ %10, %6 ], [ %81, %26 ]
  %125 = extractelement <2 x float> %123, i32 0
  %126 = extractelement <2 x float> %123, i32 1
  %127 = fmul float %125, %126
  %128 = fadd float %127, %127
  %129 = tail call float @llvm.fma.f32(float %125, float %125, float %128) #5
  %130 = tail call float @llvm.fma.f32(float %129, float 0xBF2994CB60000000, float 0x3F81107340000000) #5
  %131 = tail call float @llvm.fma.f32(float %130, float %129, float 0xBFC5555440000000) #5
  %132 = fmul float %125, %129
  %133 = fmul float %132, %131
  %134 = fadd float %125, %133
  %135 = fsub float %125, %134
  %136 = fadd float %133, %135
  %137 = fadd float %126, %136
  %138 = fadd float %134, %137
  %139 = icmp eq i32 %2, -2147483648
  %140 = select i1 %139, float -0.000000e+00, float %138
  %141 = tail call float @llvm.fma.f32(float %129, float 0xBE923DB120000000, float 0x3EFA00F160000000) #5
  %142 = tail call float @llvm.fma.f32(float %141, float %129, float 0xBF56C16B00000000) #5
  %143 = tail call float @llvm.fma.f32(float %142, float %129, float 0x3FA5555540000000) #5
  %144 = tail call float @llvm.fma.f32(float %143, float %129, float -5.000000e-01) #5
  %145 = fmul float %129, %144
  %146 = fsub float -0.000000e+00, %145
  %147 = tail call float @llvm.fma.f32(float %129, float %144, float %146) #5
  %148 = fadd float %145, 1.000000e+00
  %149 = fsub float 1.000000e+00, %148
  %150 = fadd float %145, %149
  %151 = fadd float %147, %150
  %152 = fadd float %148, %151
  %153 = and i64 %124, 1
  %154 = icmp ne i64 %153, 0
  %155 = select i1 %154, float %152, float %140
  %156 = select i1 %154, float %140, float %152
  %157 = shl i64 %124, 62
  %158 = ashr i64 %157, 63
  %159 = bitcast float %155 to i32
  %160 = trunc i64 %158 to i32
  %161 = and i32 %160, -2147483648
  %162 = xor i32 %161, %159
  %163 = bitcast i32 %162 to float
  %164 = add i64 %157, 4611686018427387904
  %165 = ashr i64 %164, 63
  %166 = bitcast float %156 to i32
  %167 = trunc i64 %165 to i32
  %168 = and i32 %167, -2147483648
  %169 = xor i32 %168, %166
  %170 = bitcast i32 %169 to float
  %171 = insertelement <2 x float> undef, float %163, i32 0
  %172 = insertelement <2 x float> %171, float %170, i32 1
  ret <2 x float> %172
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_sincospif1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, -2
  %14 = sitofp i32 %13 to float
  %15 = fsub float %2, %14
  %16 = fmul float %15, %15
  %17 = fsub float -0.000000e+00, %16
  %18 = tail call float @llvm.fma.f32(float %15, float %15, float %17) #5
  %19 = tail call float @llvm.fma.f32(float %16, float 0x3E94C32E20000000, float 0xBF032CC140000000) #5
  %20 = tail call float @llvm.fma.f32(float %19, float %16, float 0x3F6466BBE0000000) #5
  %21 = fmul float %16, %20
  %22 = fadd float %21, 0xBFB4ABBCE0000000
  %23 = fsub float %22, %21
  %24 = fsub float %22, %23
  %25 = fsub float %21, %24
  %26 = fsub float 0xBFB4ABBCE0000000, %23
  %27 = fadd float %26, %25
  %28 = fadd float %27, 0xBE16F9CCE0000000
  %29 = fmul float %16, %22
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %16, float %22, float %30) #5
  %32 = tail call float @llvm.fma.f32(float %18, float %22, float %31) #5
  %33 = tail call float @llvm.fma.f32(float %16, float %28, float %32) #5
  %34 = fadd float %29, 0x3FE921FB60000000
  %35 = fsub float %34, %29
  %36 = fsub float %34, %35
  %37 = fsub float %29, %36
  %38 = fsub float 0x3FE921FB60000000, %35
  %39 = fadd float %38, %37
  %40 = fadd float %33, 0xBE57781980000000
  %41 = fadd float %39, %40
  %42 = fmul float %15, %34
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %34, float %15, float %43) #5
  %45 = tail call float @llvm.fma.f32(float %41, float %15, float %44) #5
  %46 = fadd float %42, %45
  %47 = bitcast float %0 to i32
  %48 = icmp eq i32 %47, -2147483648
  %49 = select i1 %48, float -0.000000e+00, float %46
  %50 = tail call float @llvm.fma.f32(float %16, float 0xBE5A193700000000, float 0x3ECE1EB4A0000000) #5
  %51 = tail call float @llvm.fma.f32(float %50, float %16, float 0xBF355D3C00000000) #5
  %52 = fmul float %16, %51
  %53 = fadd float %52, 0x3F903C1F00000000
  %54 = fsub float %53, %52
  %55 = fsub float %53, %54
  %56 = fsub float %52, %55
  %57 = fsub float 0x3F903C1F00000000, %54
  %58 = fadd float %57, %56
  %59 = fadd float %58, 0x3DFEE1F000000000
  %60 = fmul float %16, %53
  %61 = fsub float -0.000000e+00, %60
  %62 = tail call float @llvm.fma.f32(float %16, float %53, float %61) #5
  %63 = tail call float @llvm.fma.f32(float %18, float %53, float %62) #5
  %64 = tail call float @llvm.fma.f32(float %16, float %59, float %63) #5
  %65 = fadd float %60, 0xBFD3BD3CC0000000
  %66 = fsub float %65, %60
  %67 = fsub float %65, %66
  %68 = fsub float %60, %67
  %69 = fsub float 0xBFD3BD3CC0000000, %66
  %70 = fadd float %69, %68
  %71 = fadd float %64, 0xBE437BD7E0000000
  %72 = fadd float %70, %71
  %73 = fmul float %16, %65
  %74 = fsub float -0.000000e+00, %73
  %75 = tail call float @llvm.fma.f32(float %65, float %16, float %74) #5
  %76 = tail call float @llvm.fma.f32(float %72, float %16, float %75) #5
  %77 = tail call float @llvm.fma.f32(float %65, float %18, float %76) #5
  %78 = fadd float %73, 1.000000e+00
  %79 = fsub float %78, %73
  %80 = fsub float %78, %79
  %81 = fsub float %73, %80
  %82 = fsub float 1.000000e+00, %79
  %83 = fadd float %82, %81
  %84 = fadd float %83, %77
  %85 = fadd float %78, %84
  %86 = and i64 %11, 2
  %87 = icmp ne i64 %86, 0
  %88 = select i1 %87, float %85, float %49
  %89 = select i1 %87, float %49, float %85
  %90 = shl i64 %11, 61
  %91 = ashr i64 %90, 63
  %92 = bitcast float %88 to i32
  %93 = trunc i64 %91 to i32
  %94 = and i32 %93, -2147483648
  %95 = xor i32 %94, %92
  %96 = shl i32 %13, 29
  %97 = add i32 %96, 1073741824
  %98 = and i32 %97, -2147483648
  %99 = bitcast float %89 to i32
  %100 = xor i32 %98, %99
  %101 = and i32 %47, 2147483647
  %102 = bitcast i32 %101 to float
  %103 = fcmp ule float %102, 1.000000e+07
  %104 = sext i1 %103 to i32
  %105 = and i32 %95, %104
  %106 = and i32 %100, %104
  %107 = fcmp oeq float %0, 0x7FF0000000000000
  %108 = fcmp oeq float %0, 0xFFF0000000000000
  %109 = or i1 %107, %108
  %110 = sext i1 %109 to i32
  %111 = or i32 %105, %110
  %112 = bitcast i32 %111 to float
  %113 = or i32 %106, %110
  %114 = bitcast i32 %113 to float
  %115 = insertelement <2 x float> undef, float %112, i32 0
  %116 = insertelement <2 x float> %115, float %114, i32 1
  ret <2 x float> %116
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_sincospif1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, -2
  %14 = sitofp i32 %13 to float
  %15 = fsub float %2, %14
  %16 = fmul float %15, %15
  %17 = tail call float @llvm.fma.f32(float %16, float 0xBF02E11480000000, float 0x3F646617E0000000) #5
  %18 = tail call float @llvm.fma.f32(float %17, float %16, float 0xBFB4ABBCE0000000) #5
  %19 = tail call float @llvm.fma.f32(float %18, float %16, float 0x3FE921FB60000000) #5
  %20 = fmul float %15, %19
  %21 = tail call float @llvm.fma.f32(float %16, float 0x3ECDB1B200000000, float 0xBF355CA860000000) #5
  %22 = tail call float @llvm.fma.f32(float %21, float %16, float 0x3F903C1D20000000) #5
  %23 = tail call float @llvm.fma.f32(float %22, float %16, float 0xBFD3BD3CC0000000) #5
  %24 = tail call float @llvm.fma.f32(float %23, float %16, float 1.000000e+00) #5
  %25 = and i64 %11, 2
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, float %24, float %20
  %28 = select i1 %26, float %20, float %24
  %29 = shl i64 %11, 61
  %30 = ashr i64 %29, 63
  %31 = bitcast float %27 to i32
  %32 = trunc i64 %30 to i32
  %33 = and i32 %32, -2147483648
  %34 = xor i32 %33, %31
  %35 = shl i32 %13, 29
  %36 = add i32 %35, 1073741824
  %37 = and i32 %36, -2147483648
  %38 = bitcast float %28 to i32
  %39 = xor i32 %37, %38
  %40 = bitcast float %0 to i32
  %41 = and i32 %40, 2147483647
  %42 = bitcast i32 %41 to float
  %43 = fcmp ule float %42, 1.000000e+07
  %44 = sext i1 %43 to i32
  %45 = and i32 %34, %44
  %46 = and i32 %39, %44
  %47 = fcmp oeq float %0, 0x7FF0000000000000
  %48 = fcmp oeq float %0, 0xFFF0000000000000
  %49 = or i1 %47, %48
  %50 = sext i1 %49 to i32
  %51 = or i32 %45, %50
  %52 = bitcast i32 %51 to float
  %53 = or i32 %46, %50
  %54 = bitcast i32 %53 to float
  %55 = insertelement <2 x float> undef, float %52, i32 0
  %56 = insertelement <2 x float> %55, float %54, i32 1
  ret <2 x float> %56
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_modff1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = bitcast float %0 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp ule float %8, 0x4160000000000000
  %10 = select i1 %9, float %5, float 0.000000e+00
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = and i32 %6, -2147483648
  %14 = or i32 %12, %13
  %15 = bitcast i32 %14 to float
  %16 = fsub float %0, %10
  %17 = bitcast float %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = or i32 %18, %13
  %20 = bitcast i32 %19 to float
  %21 = insertelement <2 x float> undef, float %15, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  ret <2 x float> %22
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_tanf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %25, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = tail call float @llvm.rint.f32(float %7) #5
  %9 = fptosi float %8 to i32
  %10 = tail call float @llvm.fma.f32(float %8, float 0xBFF921C000000000, float %0) #5
  %11 = fmul float %8, 0xBF0DAA0000000000
  %12 = fadd float %10, %11
  %13 = fsub float %12, %10
  %14 = fsub float %12, %13
  %15 = fsub float %10, %14
  %16 = fsub float %11, %13
  %17 = fadd float %16, %15
  %18 = fmul float %8, 0xBE110B4620000000
  %19 = fadd float %18, %12
  %20 = fsub float %12, %19
  %21 = fadd float %18, %20
  %22 = fadd float %21, %17
  %23 = insertelement <2 x float> undef, float %19, i32 0
  %24 = insertelement <2 x float> %23, float %22, i32 1
  br label %127

; <label>:25:                                     ; preds = %1
  %26 = lshr i32 %2, 23
  %27 = and i32 %26, 255
  %28 = add nsw i32 %27, -152
  %29 = icmp ugt i32 %27, 217
  %30 = select i1 %29, i32 -536870912, i32 0
  %31 = add i32 %30, %2
  %32 = bitcast i32 %31 to float
  %33 = ashr i32 %28, 31
  %34 = xor i32 %33, 1073741823
  %35 = and i32 %34, %28
  %36 = shl i32 %35, 2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !3
  %40 = fmul float %39, %32
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %32, float %39, float %41) #5
  %43 = fmul float %40, 4.000000e+00
  %44 = tail call float @llvm.rint.f32(float %43) #5
  %45 = tail call float @llvm.rint.f32(float %40) #5
  %46 = fmul float %45, 4.000000e+00
  %47 = fsub float %44, %46
  %48 = tail call float @llvm.trunc.f32(float %47) #5
  %49 = fptosi float %48 to i32
  %50 = fmul float %44, 2.500000e-01
  %51 = fsub float %40, %50
  %52 = fadd float %42, %51
  %53 = fsub float %51, %52
  %54 = fadd float %42, %53
  %55 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %37
  %56 = load float, float* %55, align 4, !tbaa !3
  %57 = fmul float %56, %32
  %58 = fsub float -0.000000e+00, %57
  %59 = tail call float @llvm.fma.f32(float %32, float %56, float %58) #5
  %60 = fadd float %57, %52
  %61 = fsub float %60, %52
  %62 = fsub float %60, %61
  %63 = fsub float %52, %62
  %64 = fsub float %57, %61
  %65 = fadd float %64, %63
  %66 = fadd float %59, %54
  %67 = fadd float %66, %65
  %68 = fmul float %60, 4.000000e+00
  %69 = tail call float @llvm.rint.f32(float %68) #5
  %70 = tail call float @llvm.rint.f32(float %60) #5
  %71 = fmul float %70, 4.000000e+00
  %72 = fsub float %69, %71
  %73 = tail call float @llvm.trunc.f32(float %72) #5
  %74 = fptosi float %73 to i32
  %75 = fmul float %69, 2.500000e-01
  %76 = fsub float %60, %75
  %77 = add i32 %74, %49
  %78 = fadd float %76, %67
  %79 = fsub float %76, %78
  %80 = fadd float %67, %79
  %81 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %37
  %82 = load float, float* %81, align 4, !tbaa !3
  %83 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %37
  %84 = load float, float* %83, align 4, !tbaa !3
  %85 = fmul float %82, %32
  %86 = fsub float -0.000000e+00, %85
  %87 = tail call float @llvm.fma.f32(float %82, float %32, float %86) #5
  %88 = tail call float @llvm.fma.f32(float %84, float %32, float %87) #5
  %89 = fadd float %85, %78
  %90 = fsub float %89, %78
  %91 = fsub float %89, %90
  %92 = fsub float %78, %91
  %93 = fsub float %85, %90
  %94 = fadd float %93, %92
  %95 = fadd float %88, %80
  %96 = fadd float %95, %94
  %97 = fadd float %89, %96
  %98 = fsub float %89, %97
  %99 = fadd float %96, %98
  %100 = fmul float %97, 0x401921FB60000000
  %101 = fsub float -0.000000e+00, %100
  %102 = tail call float @llvm.fma.f32(float %97, float 0x401921FB60000000, float %101) #5
  %103 = tail call float @llvm.fma.f32(float %99, float 0x401921FB60000000, float %102) #5
  %104 = tail call float @llvm.fma.f32(float %97, float 0xBE8777A5C0000000, float %103) #5
  %105 = and i32 %31, 2147483647
  %106 = bitcast i32 %105 to float
  %107 = fcmp uge float %106, 0x3FE6666660000000
  %108 = select i1 %107, float %100, float %32
  %109 = fcmp oeq float %0, 0x7FF0000000000000
  %110 = fcmp oeq float %0, 0xFFF0000000000000
  %111 = or i1 %109, %110
  %112 = fcmp uno float %0, 0.000000e+00
  %113 = or i1 %112, %111
  %114 = bitcast float %108 to i32
  %115 = select i1 %113, i64 4294967295, i64 0
  %116 = trunc i64 %115 to i32
  %117 = or i32 %114, %116
  %118 = bitcast i32 %117 to float
  %119 = insertelement <2 x float> undef, float %118, i32 0
  %120 = bitcast float %104 to i32
  %121 = zext i32 %120 to i64
  %122 = select i1 %107, i64 %121, i64 0
  %123 = or i64 %122, %115
  %124 = trunc i64 %123 to i32
  %125 = bitcast i32 %124 to float
  %126 = insertelement <2 x float> %119, float %125, i32 1
  br label %127

; <label>:127:                                    ; preds = %25, %6
  %128 = phi <2 x float> [ %24, %6 ], [ %126, %25 ]
  %129 = phi i32 [ %9, %6 ], [ %77, %25 ]
  %130 = shl i32 %129, 31
  %131 = bitcast <2 x float> %128 to <2 x i32>
  %132 = extractelement <2 x i32> %131, i32 0
  %133 = xor i32 %132, %130
  %134 = bitcast i32 %133 to float
  %135 = extractelement <2 x i32> %131, i32 1
  %136 = xor i32 %135, %130
  %137 = bitcast i32 %136 to float
  %138 = fmul float %134, %134
  %139 = fadd float %134, %134
  %140 = fsub float -0.000000e+00, %138
  %141 = tail call float @llvm.fma.f32(float %134, float %134, float %140) #5
  %142 = tail call float @llvm.fma.f32(float %139, float %137, float %141) #5
  %143 = fadd float %138, %142
  %144 = fsub float %138, %143
  %145 = fadd float %142, %144
  %146 = tail call float @llvm.fma.f32(float %143, float 0x3F724B52A0000000, float 0xBF15FFC9C0000000) #5
  %147 = tail call float @llvm.fma.f32(float %146, float %143, float 0x3F86744100000000) #5
  %148 = tail call float @llvm.fma.f32(float %147, float %143, float 0x3F95BEE5E0000000) #5
  %149 = tail call float @llvm.fma.f32(float %148, float %143, float 0x3FABAEE500000000) #5
  %150 = fmul float %143, %149
  %151 = fadd float %150, 0x3FC110D0C0000000
  %152 = fsub float 0x3FC110D0C0000000, %151
  %153 = fadd float %150, %152
  %154 = fmul float %143, %151
  %155 = fsub float -0.000000e+00, %154
  %156 = tail call float @llvm.fma.f32(float %143, float %151, float %155) #5
  %157 = tail call float @llvm.fma.f32(float %145, float %151, float %156) #5
  %158 = tail call float @llvm.fma.f32(float %143, float %153, float %157) #5
  %159 = fadd float %154, 0x3FD5555680000000
  %160 = fsub float 0x3FD5555680000000, %159
  %161 = fadd float %154, %160
  %162 = fadd float %158, %161
  %163 = fmul float %143, %159
  %164 = fsub float -0.000000e+00, %163
  %165 = tail call float @llvm.fma.f32(float %159, float %143, float %164) #5
  %166 = tail call float @llvm.fma.f32(float %162, float %143, float %165) #5
  %167 = tail call float @llvm.fma.f32(float %159, float %145, float %166) #5
  %168 = fadd float %163, 1.000000e+00
  %169 = fsub float 1.000000e+00, %168
  %170 = fadd float %163, %169
  %171 = fadd float %170, %167
  %172 = fmul float %168, %134
  %173 = fsub float -0.000000e+00, %172
  %174 = tail call float @llvm.fma.f32(float %134, float %168, float %173) #5
  %175 = tail call float @llvm.fma.f32(float %137, float %168, float %174) #5
  %176 = tail call float @llvm.fma.f32(float %134, float %171, float %175) #5
  %177 = fdiv float 1.000000e+00, %172
  %178 = tail call float @llvm.fma.f32(float %173, float %177, float 1.000000e+00) #5
  %179 = fsub float -0.000000e+00, %176
  %180 = tail call float @llvm.fma.f32(float %179, float %177, float %178) #5
  %181 = fmul float %177, %180
  %182 = icmp eq i32 %130, 0
  %183 = select i1 %182, float %172, float %177
  %184 = select i1 %182, float %176, float %181
  %185 = fadd float %183, %184
  %186 = icmp eq i32 %2, -2147483648
  %187 = select i1 %186, float %0, float %185
  ret float %187
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_atanf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = fdiv float 1.000000e+00, %4
  %8 = select i1 %6, float %4, float %7
  %9 = fmul float %8, %8
  %10 = fmul float %9, %9
  %11 = fmul float %10, %10
  %12 = tail call float @llvm.fma.f32(float %9, float 0x3F672199A0000000, float 0xBF905701A0000000) #5
  %13 = tail call float @llvm.fma.f32(float %9, float 0x3FA5C336C0000000, float 0xBFB32BFF40000000) #5
  %14 = tail call float @llvm.fma.f32(float %10, float %12, float %13) #5
  %15 = tail call float @llvm.fma.f32(float %9, float 0x3FBB399E40000000, float 0xBFC22DF3E0000000) #5
  %16 = tail call float @llvm.fma.f32(float %9, float 0x3FC99734E0000000, float 0xBFD5554BA0000000) #5
  %17 = tail call float @llvm.fma.f32(float %10, float %15, float %16) #5
  %18 = tail call float @llvm.fma.f32(float %11, float %14, float %17) #5
  %19 = fmul float %9, %18
  %20 = tail call float @llvm.fma.f32(float %8, float %19, float %8) #5
  %21 = fsub float 0x3FF921FB60000000, %20
  %22 = select i1 %5, float %21, float %20
  %23 = and i32 %2, -2147483648
  %24 = bitcast float %22 to i32
  %25 = xor i32 %23, %24
  %26 = bitcast i32 %25 to float
  ret float %26
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_atan2f1_u35purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = ashr i32 %6, 31
  %8 = and i32 %7, -2
  %9 = and i32 %6, 2147483647
  %10 = bitcast i32 %9 to float
  %11 = or i32 %7, 1
  %12 = fcmp uge float %10, %5
  %13 = select i1 %12, i32 %8, i32 %11
  %14 = fsub float -0.000000e+00, %10
  %15 = select i1 %12, float %5, float %14
  %16 = fcmp ogt float %10, %5
  %17 = select i1 %16, float %10, float %5
  %18 = fdiv float %15, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, %19
  %21 = fmul float %20, %20
  %22 = tail call float @llvm.fma.f32(float %19, float 0x3F672199A0000000, float 0xBF905701A0000000) #5
  %23 = tail call float @llvm.fma.f32(float %19, float 0x3FA5C336C0000000, float 0xBFB32BFF40000000) #5
  %24 = tail call float @llvm.fma.f32(float %20, float %22, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %19, float 0x3FBB399E40000000, float 0xBFC22DF3E0000000) #5
  %26 = tail call float @llvm.fma.f32(float %19, float 0x3FC99734E0000000, float 0xBFD5554BA0000000) #5
  %27 = tail call float @llvm.fma.f32(float %20, float %25, float %26) #5
  %28 = tail call float @llvm.fma.f32(float %21, float %24, float %27) #5
  %29 = fmul float %19, %28
  %30 = tail call float @llvm.fma.f32(float %18, float %29, float %18) #5
  %31 = sitofp i32 %13 to float
  %32 = tail call float @llvm.fma.f32(float %31, float 0x3FF921FB60000000, float %30) #5
  %33 = bitcast float %32 to i32
  %34 = and i32 %6, -2147483648
  %35 = xor i32 %34, %33
  %36 = bitcast i32 %35 to float
  %37 = fcmp oeq float %1, 0x7FF0000000000000
  %38 = fcmp oeq float %1, 0xFFF0000000000000
  %39 = or i1 %37, %38
  %40 = fcmp oeq float %1, 0.000000e+00
  %41 = or i1 %40, %39
  %42 = or i32 %34, 1070141403
  %43 = bitcast i32 %42 to float
  %44 = fsub float 0x3FF921FB60000000, %43
  %45 = select i1 %39, float %44, float 0x3FF921FB60000000
  %46 = select i1 %41, float %45, float %36
  %47 = fcmp une float %0, 0x7FF0000000000000
  %48 = fcmp une float %0, 0xFFF0000000000000
  %49 = or i32 %34, 1061752795
  %50 = bitcast i32 %49 to float
  %51 = fsub float 0x3FF921FB60000000, %50
  %52 = select i1 %39, float %51, float 0x3FF921FB60000000
  %53 = and i1 %48, %47
  %54 = select i1 %53, float %46, float %52
  %55 = fcmp une float %0, 0.000000e+00
  %56 = and i32 %7, 1078530011
  %57 = fcmp uno float %0, %1
  %58 = bitcast float %54 to i32
  %59 = select i1 %55, i32 %58, i32 %56
  %60 = and i32 %3, -2147483648
  %61 = xor i32 %59, %60
  %62 = bitcast i32 %61 to float
  %63 = select i1 %57, float 0xFFFFFFFFE0000000, float %62
  ret float %63
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinf1_u35purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #5
  %11 = select i1 %5, float %10, float %4
  %12 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %13 = tail call float @llvm.fma.f32(float %12, float %9, float 0x3FA7486640000000) #5
  %14 = tail call float @llvm.fma.f32(float %13, float %9, float 0x3FB32FF140000000) #5
  %15 = tail call float @llvm.fma.f32(float %14, float %9, float 0x3FC5555E40000000) #5
  %16 = fmul float %9, %11
  %17 = tail call float @llvm.fma.f32(float %15, float %16, float %11) #5
  %18 = tail call float @llvm.fma.f32(float %17, float -2.000000e+00, float 0x3FF921FB60000000) #5
  %19 = select i1 %5, float %18, float %17
  %20 = bitcast float %19 to i32
  %21 = and i32 %2, -2147483648
  %22 = xor i32 %21, %20
  %23 = bitcast i32 %22 to float
  ret float %23
}

; Function Attrs: nounwind uwtable
define float @Sleef_acosf1_u35purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #5
  %11 = select i1 %5, float %4, float %10
  %12 = fcmp une float %4, 1.000000e+00
  %13 = select i1 %12, float %11, float 0.000000e+00
  %14 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %15 = tail call float @llvm.fma.f32(float %14, float %9, float 0x3FA7486640000000) #5
  %16 = tail call float @llvm.fma.f32(float %15, float %9, float 0x3FB32FF140000000) #5
  %17 = tail call float @llvm.fma.f32(float %16, float %9, float 0x3FC5555E40000000) #5
  %18 = fmul float %9, %13
  %19 = fmul float %17, %18
  %20 = bitcast float %13 to i32
  %21 = and i32 %2, -2147483648
  %22 = xor i32 %21, %20
  %23 = bitcast i32 %22 to float
  %24 = bitcast float %19 to i32
  %25 = xor i32 %21, %24
  %26 = bitcast i32 %25 to float
  %27 = fadd float %23, %26
  %28 = fsub float 0x3FF921FB60000000, %27
  %29 = fadd float %13, %19
  %30 = fmul float %29, 2.000000e+00
  %31 = select i1 %5, float %28, float %30
  %32 = fcmp uge float %0, 0.000000e+00
  %33 = fsub float 0x400921FB60000000, %31
  %34 = or i1 %32, %5
  %35 = select i1 %34, float %31, float %33
  ret float %35
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_atan2f1_u10purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %1 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp uge float %5, 0x37F0000080000000
  %7 = fmul float %1, 0x4170000000000000
  %8 = select i1 %6, float %1, float %7
  %9 = fmul float %0, 0x4170000000000000
  %10 = select i1 %6, float %0, float %9
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = bitcast i32 %12 to float
  %14 = fcmp uge float %8, 0.000000e+00
  %15 = select i1 %14, i32 0, i32 -2
  %16 = fcmp olt float %8, 0.000000e+00
  %17 = bitcast float %8 to i32
  %18 = select i1 %16, i32 -2147483648, i32 0
  %19 = xor i32 %18, %17
  %20 = bitcast i32 %19 to float
  %21 = bitcast i32 %18 to float
  %22 = fcmp ogt float %13, %20
  %23 = zext i1 %22 to i32
  %24 = or i32 %15, %23
  %25 = fcmp ule float %13, %20
  %26 = fsub float -0.000000e+00, %20
  %27 = fsub float -0.000000e+00, %21
  %28 = select i1 %25, float %13, float %26
  %29 = select i1 %25, float 0.000000e+00, float %27
  %30 = select i1 %25, float %20, float %13
  %31 = fdiv float 1.000000e+00, %30
  %32 = fmul float %28, %31
  %33 = fsub float -0.000000e+00, %32
  %34 = tail call float @llvm.fma.f32(float %31, float %28, float %33) #5
  %35 = fsub float -0.000000e+00, %30
  %36 = tail call float @llvm.fma.f32(float %35, float %31, float 1.000000e+00) #5
  %37 = select i1 %25, float %27, float -0.000000e+00
  %38 = tail call float @llvm.fma.f32(float %37, float %31, float %36) #5
  %39 = tail call float @llvm.fma.f32(float %29, float %31, float %34) #5
  %40 = tail call float @llvm.fma.f32(float %32, float %38, float %39) #5
  %41 = fmul float %32, %32
  %42 = fadd float %32, %32
  %43 = fsub float -0.000000e+00, %41
  %44 = tail call float @llvm.fma.f32(float %32, float %32, float %43) #5
  %45 = tail call float @llvm.fma.f32(float %42, float %40, float %44) #5
  %46 = fadd float %41, %45
  %47 = fsub float %41, %46
  %48 = fadd float %45, %47
  %49 = tail call float @llvm.fma.f32(float %46, float 0xBF5CE6AA20000000, float 0x3F86191D60000000) #5
  %50 = tail call float @llvm.fma.f32(float %49, float %46, float 0xBF9FB30CE0000000) #5
  %51 = tail call float @llvm.fma.f32(float %50, float %46, float 0x3FAD8FA3C0000000) #5
  %52 = tail call float @llvm.fma.f32(float %51, float %46, float 0xBFB57A25C0000000) #5
  %53 = tail call float @llvm.fma.f32(float %52, float %46, float 0x3FBC05CDC0000000) #5
  %54 = tail call float @llvm.fma.f32(float %53, float %46, float 0xBFC2419880000000) #5
  %55 = tail call float @llvm.fma.f32(float %54, float %46, float 0x3FC9990CA0000000) #5
  %56 = fmul float %46, %55
  %57 = fadd float %56, 0xBFD5555360000000
  %58 = fsub float 0xBFD5555360000000, %57
  %59 = fadd float %56, %58
  %60 = fmul float %46, %57
  %61 = fsub float -0.000000e+00, %60
  %62 = tail call float @llvm.fma.f32(float %46, float %57, float %61) #5
  %63 = tail call float @llvm.fma.f32(float %48, float %57, float %62) #5
  %64 = tail call float @llvm.fma.f32(float %46, float %59, float %63) #5
  %65 = fadd float %60, 1.000000e+00
  %66 = fsub float 1.000000e+00, %65
  %67 = fadd float %60, %66
  %68 = fadd float %64, %67
  %69 = fmul float %32, %65
  %70 = fsub float -0.000000e+00, %69
  %71 = tail call float @llvm.fma.f32(float %32, float %65, float %70) #5
  %72 = tail call float @llvm.fma.f32(float %40, float %65, float %71) #5
  %73 = tail call float @llvm.fma.f32(float %32, float %68, float %72) #5
  %74 = sitofp i32 %24 to float
  %75 = fmul float %74, 0x3FF921FB60000000
  %76 = fsub float -0.000000e+00, %75
  %77 = tail call float @llvm.fma.f32(float %74, float 0x3FF921FB60000000, float %76) #5
  %78 = tail call float @llvm.fma.f32(float %74, float 0xBE6777A5C0000000, float %77) #5
  %79 = fadd float %75, %69
  %80 = fsub float %75, %79
  %81 = fadd float %69, %80
  %82 = fadd float %78, %81
  %83 = fadd float %73, %82
  %84 = fadd float %79, %83
  %85 = bitcast float %84 to i32
  %86 = and i32 %17, -2147483648
  %87 = xor i32 %86, %85
  %88 = bitcast i32 %87 to float
  %89 = fcmp oeq float %8, 0x7FF0000000000000
  %90 = fcmp oeq float %8, 0xFFF0000000000000
  %91 = or i1 %89, %90
  %92 = fcmp oeq float %8, 0.000000e+00
  %93 = or i1 %92, %91
  %94 = or i32 %86, 1070141403
  %95 = bitcast i32 %94 to float
  %96 = fsub float 0x3FF921FB60000000, %95
  %97 = select i1 %91, float %96, float 0x3FF921FB60000000
  %98 = select i1 %93, float %97, float %88
  %99 = fcmp une float %10, 0x7FF0000000000000
  %100 = fcmp une float %10, 0xFFF0000000000000
  %101 = or i32 %86, 1061752795
  %102 = bitcast i32 %101 to float
  %103 = fsub float 0x3FF921FB60000000, %102
  %104 = select i1 %91, float %103, float 0x3FF921FB60000000
  %105 = and i1 %100, %99
  %106 = select i1 %105, float %98, float %104
  %107 = fcmp une float %10, 0.000000e+00
  %108 = ashr i32 %17, 31
  %109 = and i32 %108, 1078530011
  %110 = fcmp uno float %10, %8
  %111 = bitcast float %106 to i32
  %112 = select i1 %107, i32 %111, i32 %109
  %113 = and i32 %11, -2147483648
  %114 = xor i32 %112, %113
  %115 = bitcast i32 %114 to float
  %116 = select i1 %110, float 0xFFFFFFFFE0000000, float %115
  ret float %116
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #5
  %11 = fmul float %10, %10
  %12 = fsub float -0.000000e+00, %11
  %13 = tail call float @llvm.fma.f32(float %10, float %10, float %12) #5
  %14 = fadd float %9, %11
  %15 = fsub float %14, %9
  %16 = fsub float %14, %15
  %17 = fsub float %9, %16
  %18 = fsub float %11, %15
  %19 = fadd float %18, %17
  %20 = fadd float %13, %19
  %21 = fdiv float 1.000000e+00, %10
  %22 = fsub float -0.000000e+00, %10
  %23 = tail call float @llvm.fma.f32(float %22, float %21, float 1.000000e+00) #5
  %24 = fmul float %21, %23
  %25 = fmul float %21, %14
  %26 = fsub float -0.000000e+00, %25
  %27 = tail call float @llvm.fma.f32(float %14, float %21, float %26) #5
  %28 = tail call float @llvm.fma.f32(float %20, float %21, float %27) #5
  %29 = tail call float @llvm.fma.f32(float %14, float %24, float %28) #5
  %30 = fmul float %25, 5.000000e-01
  %31 = fmul float %29, 5.000000e-01
  %32 = select i1 %5, float %30, float %4
  %33 = fcmp une float %4, 1.000000e+00
  %34 = select i1 %33, float %32, float 0.000000e+00
  %35 = and i1 %33, %5
  %36 = select i1 %35, float %31, float 0.000000e+00
  %37 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %38 = tail call float @llvm.fma.f32(float %37, float %9, float 0x3FA7486640000000) #5
  %39 = tail call float @llvm.fma.f32(float %38, float %9, float 0x3FB32FF140000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %9, float 0x3FC5555E40000000) #5
  %41 = fmul float %9, %34
  %42 = fmul float %40, %41
  %43 = fsub float 0x3FE921FB60000000, %34
  %44 = fsub float 0x3FE921FB60000000, %43
  %45 = fsub float %44, %34
  %46 = fadd float %45, 0xBE5777A5C0000000
  %47 = fsub float %46, %36
  %48 = fsub float %43, %42
  %49 = fsub float %43, %48
  %50 = fsub float %49, %42
  %51 = fadd float %50, %47
  %52 = fadd float %34, %42
  %53 = fadd float %48, %51
  %54 = fmul float %53, 2.000000e+00
  %55 = select i1 %5, float %54, float %52
  %56 = bitcast float %55 to i32
  %57 = and i32 %2, -2147483648
  %58 = xor i32 %57, %56
  %59 = bitcast i32 %58 to float
  ret float %59
}

; Function Attrs: nounwind uwtable
define float @Sleef_acosf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #5
  %11 = fmul float %10, %10
  %12 = fsub float -0.000000e+00, %11
  %13 = tail call float @llvm.fma.f32(float %10, float %10, float %12) #5
  %14 = fadd float %9, %11
  %15 = fsub float %14, %9
  %16 = fsub float %14, %15
  %17 = fsub float %9, %16
  %18 = fsub float %11, %15
  %19 = fadd float %18, %17
  %20 = fadd float %13, %19
  %21 = fdiv float 1.000000e+00, %10
  %22 = fsub float -0.000000e+00, %10
  %23 = tail call float @llvm.fma.f32(float %22, float %21, float 1.000000e+00) #5
  %24 = fmul float %21, %23
  %25 = fmul float %21, %14
  %26 = fsub float -0.000000e+00, %25
  %27 = tail call float @llvm.fma.f32(float %14, float %21, float %26) #5
  %28 = tail call float @llvm.fma.f32(float %20, float %21, float %27) #5
  %29 = tail call float @llvm.fma.f32(float %14, float %24, float %28) #5
  %30 = fmul float %25, 5.000000e-01
  %31 = fmul float %29, 5.000000e-01
  %32 = select i1 %5, float %4, float %30
  %33 = select i1 %5, float 0.000000e+00, float %31
  %34 = fcmp une float %4, 1.000000e+00
  %35 = select i1 %34, float %32, float 0.000000e+00
  %36 = select i1 %34, float %33, float 0.000000e+00
  %37 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %38 = tail call float @llvm.fma.f32(float %37, float %9, float 0x3FA7486640000000) #5
  %39 = tail call float @llvm.fma.f32(float %38, float %9, float 0x3FB32FF140000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %9, float 0x3FC5555E40000000) #5
  %41 = fmul float %9, %35
  %42 = fmul float %40, %41
  %43 = bitcast float %35 to i32
  %44 = and i32 %2, -2147483648
  %45 = xor i32 %44, %43
  %46 = bitcast i32 %45 to float
  %47 = bitcast float %42 to i32
  %48 = xor i32 %44, %47
  %49 = bitcast i32 %48 to float
  %50 = fadd float %46, %49
  %51 = fsub float %46, %50
  %52 = fadd float %51, %49
  %53 = fsub float 0x3FF921FB60000000, %50
  %54 = fsub float 0x3FF921FB60000000, %53
  %55 = fsub float %54, %50
  %56 = fadd float %55, 0xBE6777A5C0000000
  %57 = fsub float %56, %52
  %58 = fadd float %35, %42
  %59 = fsub float %35, %58
  %60 = fadd float %42, %59
  %61 = fadd float %60, %36
  %62 = fmul float %58, 2.000000e+00
  %63 = fmul float %61, 2.000000e+00
  %64 = select i1 %5, float %53, float %62
  %65 = select i1 %5, float %57, float %63
  %66 = fcmp uge float %0, 0.000000e+00
  %67 = fsub float 0x400921FB60000000, %64
  %68 = fsub float 0x400921FB60000000, %67
  %69 = fsub float %68, %64
  %70 = fadd float %69, 0xBE7777A5C0000000
  %71 = fsub float %70, %65
  %72 = or i1 %66, %5
  %73 = select i1 %72, float %64, float %67
  %74 = select i1 %72, float %65, float %71
  %75 = fadd float %73, %74
  ret float %75
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_atanf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = select i1 %6, float %4, float -1.000000e+00
  %8 = select i1 %6, float 0.000000e+00, float -0.000000e+00
  %9 = select i1 %6, float 1.000000e+00, float %4
  %10 = fdiv float 1.000000e+00, %9
  %11 = fmul float %7, %10
  %12 = fsub float -0.000000e+00, %11
  %13 = tail call float @llvm.fma.f32(float %10, float %7, float %12) #5
  %14 = fsub float -0.000000e+00, %9
  %15 = tail call float @llvm.fma.f32(float %14, float %10, float 1.000000e+00) #5
  %16 = tail call float @llvm.fma.f32(float %10, float -0.000000e+00, float %15) #5
  %17 = tail call float @llvm.fma.f32(float %8, float %10, float %13) #5
  %18 = tail call float @llvm.fma.f32(float %11, float %16, float %17) #5
  %19 = fmul float %11, %11
  %20 = fadd float %11, %11
  %21 = fsub float -0.000000e+00, %19
  %22 = tail call float @llvm.fma.f32(float %11, float %11, float %21) #5
  %23 = tail call float @llvm.fma.f32(float %20, float %18, float %22) #5
  %24 = fadd float %19, %23
  %25 = fsub float %19, %24
  %26 = fadd float %23, %25
  %27 = tail call float @llvm.fma.f32(float %24, float 0xBF5CE6AA20000000, float 0x3F86191D60000000) #5
  %28 = tail call float @llvm.fma.f32(float %27, float %24, float 0xBF9FB30CE0000000) #5
  %29 = tail call float @llvm.fma.f32(float %28, float %24, float 0x3FAD8FA3C0000000) #5
  %30 = tail call float @llvm.fma.f32(float %29, float %24, float 0xBFB57A25C0000000) #5
  %31 = tail call float @llvm.fma.f32(float %30, float %24, float 0x3FBC05CDC0000000) #5
  %32 = tail call float @llvm.fma.f32(float %31, float %24, float 0xBFC2419880000000) #5
  %33 = tail call float @llvm.fma.f32(float %32, float %24, float 0x3FC9990CA0000000) #5
  %34 = fmul float %24, %33
  %35 = fadd float %34, 0xBFD5555360000000
  %36 = fsub float 0xBFD5555360000000, %35
  %37 = fadd float %34, %36
  %38 = fmul float %24, %35
  %39 = fsub float -0.000000e+00, %38
  %40 = tail call float @llvm.fma.f32(float %24, float %35, float %39) #5
  %41 = tail call float @llvm.fma.f32(float %26, float %35, float %40) #5
  %42 = tail call float @llvm.fma.f32(float %24, float %37, float %41) #5
  %43 = fadd float %38, 1.000000e+00
  %44 = fsub float 1.000000e+00, %43
  %45 = fadd float %38, %44
  %46 = fadd float %42, %45
  %47 = fmul float %11, %43
  %48 = fsub float -0.000000e+00, %47
  %49 = tail call float @llvm.fma.f32(float %11, float %43, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %18, float %43, float %49) #5
  %51 = tail call float @llvm.fma.f32(float %11, float %46, float %50) #5
  %52 = uitofp i1 %5 to float
  %53 = fmul float %52, 0x3FF921FB60000000
  %54 = fsub float -0.000000e+00, %53
  %55 = tail call float @llvm.fma.f32(float %52, float 0x3FF921FB60000000, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %52, float 0xBE6777A5C0000000, float %55) #5
  %57 = fadd float %53, %47
  %58 = fsub float %53, %57
  %59 = fadd float %47, %58
  %60 = fadd float %56, %59
  %61 = fadd float %51, %60
  %62 = fadd float %57, %61
  %63 = fcmp une float %0, 0x7FF0000000000000
  %64 = fcmp une float %0, 0xFFF0000000000000
  %65 = and i1 %64, %63
  %66 = bitcast float %62 to i32
  %67 = select i1 %65, i32 %66, i32 1070141403
  %68 = and i32 %2, -2147483648
  %69 = xor i32 %67, %68
  %70 = bitcast i32 %69 to float
  ret float %70
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_logf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = tail call float @llvm.fma.f32(float %19, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %21 = tail call float @llvm.fma.f32(float %20, float %19, float 0x3FD999B240000000) #5
  %22 = tail call float @llvm.fma.f32(float %21, float %19, float 0x3FE5555560000000) #5
  %23 = tail call float @llvm.fma.f32(float %22, float %19, float 2.000000e+00) #5
  %24 = sitofp i32 %15 to float
  %25 = fmul float %24, 0x3FE62E4300000000
  %26 = tail call float @llvm.fma.f32(float %18, float %23, float %25) #5
  %27 = fcmp une float %4, 0x7FF0000000000000
  %28 = select i1 %27, float %26, float 0x7FF0000000000000
  %29 = fcmp oge float %4, 0.000000e+00
  %30 = select i1 %29, float %28, float 0x7FF8000000000000
  %31 = fcmp une float %4, 0.000000e+00
  %32 = select i1 %31, float %30, float 0xFFF0000000000000
  ret float %32
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_expf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x3FF7154760000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = tail call float @llvm.fma.f32(float %5, float 0xBFE62E4000000000, float %0) #5
  %7 = tail call float @llvm.fma.f32(float %5, float 0xBEB7F7D1C0000000, float %6) #5
  %8 = tail call float @llvm.fma.f32(float %7, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %7, float 0x3F811114C0000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %7, float 0x3FA5554F40000000) #5
  %11 = tail call float @llvm.fma.f32(float %10, float %7, float 0x3FC5555560000000) #5
  %12 = tail call float @llvm.fma.f32(float %11, float %7, float 5.000000e-01) #5
  %13 = fmul float %7, %7
  %14 = tail call float @llvm.fma.f32(float %13, float %12, float %7) #5
  %15 = fadd float %14, 1.000000e+00
  %16 = ashr i32 %4, 1
  %17 = shl i32 %16, 23
  %18 = add i32 %17, 1065353216
  %19 = bitcast i32 %18 to float
  %20 = fmul float %15, %19
  %21 = sub i32 %4, %16
  %22 = shl i32 %21, 23
  %23 = add i32 %22, 1065353216
  %24 = bitcast i32 %23 to float
  %25 = fmul float %20, %24
  %26 = fcmp uge float %0, -1.040000e+02
  %27 = select i1 %26, float %25, float 0.000000e+00
  %28 = fcmp ule float %0, 1.000000e+02
  %29 = select i1 %28, float %27, float 0x7FF0000000000000
  ret float %29
}

; Function Attrs: nounwind uwtable
define float @Sleef_sqrtf1_u35purecfma(float) local_unnamed_addr #2 {
  %2 = tail call float @sqrtf(float %0) #5
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_cbrtf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 127, i32 191
  %12 = sub nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 1
  %25 = sitofp i32 %24 to float
  %26 = fadd float %25, 6.144000e+03
  %27 = fmul float %26, 0x3FD5555560000000
  %28 = tail call float @llvm.trunc.f32(float %27) #5
  %29 = fptosi float %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 3.000000e+00
  %32 = fsub float %26, %31
  %33 = tail call float @llvm.trunc.f32(float %32) #5
  %34 = fptosi float %33 to i32
  %35 = icmp eq i32 %34, 1
  %36 = select i1 %35, float 0x3FF428A300000000, float 1.000000e+00
  %37 = icmp eq i32 %34, 2
  %38 = select i1 %37, float 0x3FF965FEA0000000, float %36
  %39 = add i32 %29, -2048
  %40 = ashr i32 %39, 1
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %38, %43
  %45 = sub i32 %39, %40
  %46 = shl i32 %45, 23
  %47 = add i32 %46, 1065353216
  %48 = bitcast i32 %47 to float
  %49 = fmul float %44, %48
  %50 = bitcast float %49 to i32
  %51 = bitcast float %23 to i32
  %52 = and i32 %51, -2147483648
  %53 = xor i32 %52, %50
  %54 = bitcast i32 %53 to float
  %55 = and i32 %51, 2147483647
  %56 = bitcast i32 %55 to float
  %57 = tail call float @llvm.fma.f32(float %56, float 0xBFE3400420000000, float 0x4006912E60000000) #5
  %58 = tail call float @llvm.fma.f32(float %57, float %56, float 0xC01620F460000000) #5
  %59 = tail call float @llvm.fma.f32(float %58, float %56, float 0x401797D220000000) #5
  %60 = tail call float @llvm.fma.f32(float %59, float %56, float 0xC00E79F100000000) #5
  %61 = tail call float @llvm.fma.f32(float %60, float %56, float 0x4001CB0260000000) #5
  %62 = fmul float %61, %56
  %63 = fmul float %61, %62
  %64 = fmul float %63, 0x3FE5555560000000
  %65 = tail call float @llvm.fma.f32(float %63, float %61, float -1.000000e+00) #5
  %66 = fmul float %64, %65
  %67 = fsub float %63, %66
  %68 = fmul float %67, %54
  ret float %68
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_cbrtf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 127, i32 191
  %12 = sub nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 1
  %25 = sitofp i32 %24 to float
  %26 = fadd float %25, 6.144000e+03
  %27 = fmul float %26, 0x3FD5555560000000
  %28 = tail call float @llvm.trunc.f32(float %27) #5
  %29 = fptosi float %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 3.000000e+00
  %32 = fsub float %26, %31
  %33 = tail call float @llvm.trunc.f32(float %32) #5
  %34 = fptosi float %33 to i32
  %35 = icmp ne i32 %34, 1
  %36 = icmp ne i32 %34, 2
  %37 = select i1 %35, i32 1065353216, i32 1067533592
  %38 = select i1 %36, i32 %37, i32 1070280693
  %39 = bitcast float %23 to i32
  %40 = and i32 %39, -2147483648
  %41 = or i32 %38, %40
  %42 = bitcast i32 %41 to float
  %43 = select i1 %35, i32 0, i32 -1295101521
  %44 = select i1 %36, i32 %43, i32 849849800
  %45 = xor i32 %44, %40
  %46 = bitcast i32 %45 to float
  %47 = and i32 %39, 2147483647
  %48 = bitcast i32 %47 to float
  %49 = tail call float @llvm.fma.f32(float %48, float 0xBFE3400420000000, float 0x4006912E60000000) #5
  %50 = tail call float @llvm.fma.f32(float %49, float %48, float 0xC01620F460000000) #5
  %51 = tail call float @llvm.fma.f32(float %50, float %48, float 0x401797D220000000) #5
  %52 = tail call float @llvm.fma.f32(float %51, float %48, float 0xC00E79F100000000) #5
  %53 = tail call float @llvm.fma.f32(float %52, float %48, float 0x4001CB0260000000) #5
  %54 = fmul float %53, %53
  %55 = fmul float %54, %54
  %56 = fsub float -0.000000e+00, %48
  %57 = tail call float @llvm.fma.f32(float %56, float %55, float %53) #5
  %58 = fmul float %57, 0x3FD5555560000000
  %59 = fadd float %53, %58
  %60 = fmul float %59, %59
  %61 = fsub float -0.000000e+00, %60
  %62 = tail call float @llvm.fma.f32(float %59, float %59, float %61) #5
  %63 = fmul float %60, %60
  %64 = fsub float -0.000000e+00, %63
  %65 = tail call float @llvm.fma.f32(float %60, float %60, float %64) #5
  %66 = tail call float @llvm.fma.f32(float %62, float %60, float %65) #5
  %67 = tail call float @llvm.fma.f32(float %60, float %62, float %66) #5
  %68 = fmul float %63, %48
  %69 = fsub float -0.000000e+00, %68
  %70 = tail call float @llvm.fma.f32(float %63, float %48, float %69) #5
  %71 = tail call float @llvm.fma.f32(float %67, float %48, float %70) #5
  %72 = fsub float -0.000000e+00, %59
  %73 = fsub float %68, %59
  %74 = fsub float %73, %68
  %75 = fsub float %73, %74
  %76 = fsub float %68, %75
  %77 = fsub float %72, %74
  %78 = fadd float %77, %76
  %79 = fadd float %71, %78
  %80 = fadd float %73, %79
  %81 = fmul float %80, 0xBFE5555560000000
  %82 = fmul float %59, %81
  %83 = fadd float %60, %82
  %84 = fsub float %83, %60
  %85 = fsub float %83, %84
  %86 = fsub float %60, %85
  %87 = fsub float %82, %84
  %88 = fadd float %87, %86
  %89 = fadd float %62, %88
  %90 = fmul float %83, %48
  %91 = fsub float -0.000000e+00, %90
  %92 = tail call float @llvm.fma.f32(float %83, float %48, float %91) #5
  %93 = tail call float @llvm.fma.f32(float %89, float %48, float %92) #5
  %94 = fmul float %90, %42
  %95 = fsub float -0.000000e+00, %94
  %96 = tail call float @llvm.fma.f32(float %90, float %42, float %95) #5
  %97 = tail call float @llvm.fma.f32(float %93, float %42, float %96) #5
  %98 = tail call float @llvm.fma.f32(float %90, float %46, float %97) #5
  %99 = fadd float %94, %98
  %100 = add i32 %29, -2048
  %101 = ashr i32 %100, 1
  %102 = shl i32 %101, 23
  %103 = add i32 %102, 1065353216
  %104 = bitcast i32 %103 to float
  %105 = fmul float %99, %104
  %106 = sub i32 %100, %101
  %107 = shl i32 %106, 23
  %108 = add i32 %107, 1065353216
  %109 = bitcast i32 %108 to float
  %110 = fmul float %105, %109
  %111 = fcmp une float %48, 0x7FF0000000000000
  %112 = fcmp une float %48, 0xFFF0000000000000
  %113 = or i32 %40, 2139095040
  %114 = bitcast i32 %113 to float
  %115 = and i1 %112, %111
  %116 = select i1 %115, float %110, float %114
  %117 = fcmp une float %48, 0.000000e+00
  %118 = bitcast i32 %40 to float
  %119 = select i1 %117, float %116, float %118
  ret float %119
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_logf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0x3FE62E4300000000
  %18 = fsub float -0.000000e+00, %17
  %19 = tail call float @llvm.fma.f32(float %16, float 0x3FE62E4300000000, float %18) #5
  %20 = tail call float @llvm.fma.f32(float %16, float 0xBE205C6100000000, float %19) #5
  %21 = fadd float %13, -1.000000e+00
  %22 = fadd float %21, 1.000000e+00
  %23 = fsub float %21, %22
  %24 = fsub float -1.000000e+00, %23
  %25 = fsub float %13, %22
  %26 = fadd float %25, %24
  %27 = fadd float %13, 1.000000e+00
  %28 = fadd float %27, -1.000000e+00
  %29 = fsub float %27, %28
  %30 = fsub float 1.000000e+00, %29
  %31 = fsub float %13, %28
  %32 = fadd float %31, %30
  %33 = fdiv float 1.000000e+00, %27
  %34 = fmul float %21, %33
  %35 = fsub float -0.000000e+00, %34
  %36 = tail call float @llvm.fma.f32(float %33, float %21, float %35) #5
  %37 = fsub float -0.000000e+00, %27
  %38 = tail call float @llvm.fma.f32(float %37, float %33, float 1.000000e+00) #5
  %39 = fsub float -0.000000e+00, %32
  %40 = tail call float @llvm.fma.f32(float %39, float %33, float %38) #5
  %41 = tail call float @llvm.fma.f32(float %26, float %33, float %36) #5
  %42 = tail call float @llvm.fma.f32(float %34, float %40, float %41) #5
  %43 = fmul float %34, %34
  %44 = tail call float @llvm.fma.f32(float %43, float 0x3FD35FEB80000000, float 0x3FD9933940000000) #5
  %45 = tail call float @llvm.fma.f32(float %44, float %43, float 0x3FE5555B40000000) #5
  %46 = fmul float %34, 2.000000e+00
  %47 = fmul float %42, 2.000000e+00
  %48 = fadd float %17, %46
  %49 = fsub float %17, %48
  %50 = fadd float %46, %49
  %51 = fadd float %20, %50
  %52 = fadd float %47, %51
  %53 = fmul float %34, %43
  %54 = fmul float %53, %45
  %55 = fadd float %48, %54
  %56 = fsub float %48, %55
  %57 = fadd float %54, %56
  %58 = fadd float %52, %57
  %59 = fadd float %55, %58
  %60 = fcmp une float %4, 0x7FF0000000000000
  %61 = select i1 %60, float %59, float 0x7FF0000000000000
  %62 = fcmp oge float %4, 0.000000e+00
  %63 = select i1 %62, float %61, float 0x7FF8000000000000
  %64 = fcmp une float %4, 0.000000e+00
  %65 = select i1 %64, float %63, float 0xFFF0000000000000
  ret float %65
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_powf1_u10purecfma(float, float) local_unnamed_addr #1 {
  %3 = tail call float @llvm.trunc.f32(float %1) #5
  %4 = fcmp oeq float %3, %1
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, 2147483647
  %7 = bitcast i32 %6 to float
  %8 = fcmp ogt float %7, 0x4170000000000000
  %9 = or i1 %4, %8
  %10 = fptosi float %3 to i32
  %11 = fcmp uge float %7, 0x4170000000000000
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp uge float %14, 0x3810000000000000
  %16 = fmul float %14, 0x43F0000000000000
  %17 = select i1 %15, float %14, float %16
  %18 = fmul float %17, 0x3FF5555560000000
  %19 = bitcast float %18 to i32
  %20 = lshr i32 %19, 23
  %21 = and i32 %20, 255
  %22 = bitcast float %17 to i32
  %23 = shl nuw nsw i32 %21, 23
  %24 = add i32 %22, 1065353216
  %25 = sub i32 %24, %23
  %26 = bitcast i32 %25 to float
  %27 = select i1 %15, i32 -127, i32 -191
  %28 = add nsw i32 %21, %27
  %29 = fadd float %26, -1.000000e+00
  %30 = fadd float %29, 1.000000e+00
  %31 = fsub float %29, %30
  %32 = fsub float -1.000000e+00, %31
  %33 = fsub float %26, %30
  %34 = fadd float %33, %32
  %35 = fadd float %26, 1.000000e+00
  %36 = fadd float %35, -1.000000e+00
  %37 = fsub float %35, %36
  %38 = fsub float 1.000000e+00, %37
  %39 = fsub float %26, %36
  %40 = fadd float %39, %38
  %41 = fdiv float 1.000000e+00, %35
  %42 = fmul float %29, %41
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %41, float %29, float %43) #5
  %45 = fsub float -0.000000e+00, %35
  %46 = tail call float @llvm.fma.f32(float %45, float %41, float 1.000000e+00) #5
  %47 = fsub float -0.000000e+00, %40
  %48 = tail call float @llvm.fma.f32(float %47, float %41, float %46) #5
  %49 = tail call float @llvm.fma.f32(float %34, float %41, float %44) #5
  %50 = tail call float @llvm.fma.f32(float %42, float %48, float %49) #5
  %51 = fmul float %42, %42
  %52 = fadd float %42, %42
  %53 = fsub float -0.000000e+00, %51
  %54 = tail call float @llvm.fma.f32(float %42, float %42, float %53) #5
  %55 = tail call float @llvm.fma.f32(float %52, float %50, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %51, float 0x3FCEC2D140000000, float 0x3FD23F4940000000) #5
  %57 = tail call float @llvm.fma.f32(float %56, float %51, float 0x3FD999BB20000000) #5
  %58 = sitofp i32 %28 to float
  %59 = fmul float %58, 0x3FE62E4300000000
  %60 = fsub float -0.000000e+00, %59
  %61 = tail call float @llvm.fma.f32(float %58, float 0x3FE62E4300000000, float %60) #5
  %62 = tail call float @llvm.fma.f32(float %58, float 0xBE205C6100000000, float %61) #5
  %63 = fmul float %42, 2.000000e+00
  %64 = fmul float %50, 2.000000e+00
  %65 = fadd float %59, %63
  %66 = fsub float %59, %65
  %67 = fadd float %63, %66
  %68 = fadd float %62, %67
  %69 = fadd float %64, %68
  %70 = fmul float %42, %51
  %71 = fsub float -0.000000e+00, %70
  %72 = tail call float @llvm.fma.f32(float %51, float %42, float %71) #5
  %73 = tail call float @llvm.fma.f32(float %55, float %42, float %72) #5
  %74 = tail call float @llvm.fma.f32(float %51, float %50, float %73) #5
  %75 = fmul float %51, %57
  %76 = fsub float -0.000000e+00, %75
  %77 = tail call float @llvm.fma.f32(float %51, float %57, float %76) #5
  %78 = tail call float @llvm.fma.f32(float %55, float %57, float %77) #5
  %79 = fadd float %75, 0x3FE5555540000000
  %80 = fsub float %79, %75
  %81 = fsub float %79, %80
  %82 = fsub float %75, %81
  %83 = fsub float 0x3FE5555540000000, %80
  %84 = fadd float %83, %82
  %85 = fadd float %78, 0x3E2FB67060000000
  %86 = fadd float %85, %84
  %87 = fmul float %70, %79
  %88 = fsub float -0.000000e+00, %87
  %89 = tail call float @llvm.fma.f32(float %70, float %79, float %88) #5
  %90 = tail call float @llvm.fma.f32(float %74, float %79, float %89) #5
  %91 = tail call float @llvm.fma.f32(float %70, float %86, float %90) #5
  %92 = fadd float %65, %87
  %93 = fsub float %65, %92
  %94 = fadd float %87, %93
  %95 = fadd float %69, %94
  %96 = fadd float %95, %91
  %97 = fmul float %92, %1
  %98 = fsub float -0.000000e+00, %97
  %99 = tail call float @llvm.fma.f32(float %92, float %1, float %98) #5
  %100 = tail call float @llvm.fma.f32(float %96, float %1, float %99) #5
  %101 = fadd float %97, %100
  %102 = fmul float %101, 0x3FF7154760000000
  %103 = tail call float @llvm.rint.f32(float %102) #5
  %104 = fptosi float %103 to i32
  %105 = sitofp i32 %104 to float
  %106 = insertelement <2 x float> undef, float %105, i32 0
  %107 = shufflevector <2 x float> %106, <2 x float> undef, <2 x i32> zeroinitializer
  %108 = fmul <2 x float> %107, <float 0xBFE62E4000000000, float 0xBEB7F7D1C0000000>
  %109 = extractelement <2 x float> %108, i32 0
  %110 = fadd float %97, %109
  %111 = extractelement <2 x float> %108, i32 1
  %112 = fadd float %111, %110
  %113 = insertelement <2 x float> undef, float %110, i32 0
  %114 = insertelement <2 x float> %113, float %112, i32 1
  %115 = insertelement <2 x float> undef, float %97, i32 0
  %116 = insertelement <2 x float> %115, float %110, i32 1
  %117 = fsub <2 x float> %114, %116
  %118 = fsub <2 x float> %114, %117
  %119 = fsub <2 x float> %116, %118
  %120 = fsub <2 x float> %108, %117
  %121 = fadd <2 x float> %120, %119
  %122 = extractelement <2 x float> %121, i32 0
  %123 = fadd float %100, %122
  %124 = extractelement <2 x float> %121, i32 1
  %125 = fadd float %123, %124
  %126 = fadd float %112, %125
  %127 = fsub float %112, %126
  %128 = fadd float %125, %127
  %129 = tail call float @llvm.fma.f32(float %126, float 0x3F5655DEC0000000, float 0x3F81222D60000000) #5
  %130 = tail call float @llvm.fma.f32(float %129, float %126, float 0x3FA555E980000000) #5
  %131 = tail call float @llvm.fma.f32(float %130, float %126, float 0x3FC5554BC0000000) #5
  %132 = tail call float @llvm.fma.f32(float %131, float %126, float 0x3FDFFFFF60000000) #5
  %133 = fmul float %126, %126
  %134 = fadd float %126, %126
  %135 = fsub float -0.000000e+00, %133
  %136 = tail call float @llvm.fma.f32(float %126, float %126, float %135) #5
  %137 = tail call float @llvm.fma.f32(float %134, float %128, float %136) #5
  %138 = fmul float %133, %132
  %139 = fsub float -0.000000e+00, %138
  %140 = tail call float @llvm.fma.f32(float %133, float %132, float %139) #5
  %141 = tail call float @llvm.fma.f32(float %137, float %132, float %140) #5
  %142 = fadd float %126, %138
  %143 = fsub float %126, %142
  %144 = fadd float %138, %143
  %145 = fadd float %128, %144
  %146 = fadd float %141, %145
  %147 = fadd float %142, 1.000000e+00
  %148 = fsub float 1.000000e+00, %147
  %149 = fadd float %142, %148
  %150 = fadd float %149, %146
  %151 = fadd float %147, %150
  %152 = ashr i32 %104, 31
  %153 = zext i32 %152 to i64
  %154 = add i32 %152, %104
  %155 = ashr i32 %154, 6
  %156 = zext i32 %155 to i64
  %157 = sub nsw i64 %156, %153
  %158 = shl nsw i64 %157, 4
  %159 = add nsw i64 %158, 127
  %160 = trunc i64 %159 to i32
  %161 = icmp sgt i32 %160, 0
  %162 = select i1 %161, i64 4294967295, i64 0
  %163 = and i64 %162, %159
  %164 = trunc i64 %163 to i32
  %165 = icmp sgt i32 %164, 255
  %166 = select i1 %165, i64 4294967295, i64 0
  %167 = xor i64 %166, 511
  %168 = and i64 %167, %163
  %169 = and i64 %166, 255
  %170 = or i64 %168, %169
  %171 = trunc i64 %170 to i32
  %172 = shl i32 %171, 23
  %173 = bitcast i32 %172 to float
  %174 = fmul float %151, %173
  %175 = fmul float %174, %173
  %176 = fmul float %175, %173
  %177 = fmul float %176, %173
  %178 = trunc i64 %157 to i32
  %179 = shl i32 %178, 6
  %180 = sub i32 %104, %179
  %181 = shl i32 %180, 23
  %182 = add i32 %181, 1065353216
  %183 = bitcast i32 %182 to float
  %184 = fmul float %177, %183
  %185 = fcmp uge float %97, -1.040000e+02
  %186 = select i1 %185, float %184, float 0.000000e+00
  %187 = fcmp ord float %186, 0.000000e+00
  %188 = select i1 %187, float %186, float 0x7FF0000000000000
  %189 = fcmp ule float %0, 0.000000e+00
  %190 = and i32 %10, 1
  %191 = icmp eq i32 %190, 0
  %192 = or i1 %4, %8
  %193 = xor i1 %192, true
  %194 = or i1 %191, %193
  %195 = or i1 %11, %194
  %196 = select i1 %195, float 1.000000e+00, float -1.000000e+00
  %197 = select i1 %9, float %196, float 0x7FF8000000000000
  %198 = select i1 %189, float %197, float 1.000000e+00
  %199 = fmul float %198, %188
  %200 = fadd float %14, -1.000000e+00
  %201 = bitcast float %200 to i32
  %202 = and i32 %5, -2147483648
  %203 = xor i32 %202, %201
  %204 = bitcast i32 %203 to float
  %205 = fcmp une float %1, 0x7FF0000000000000
  %206 = fcmp une float %1, 0xFFF0000000000000
  %207 = fcmp olt float %204, 0.000000e+00
  %208 = fcmp une float %204, 0.000000e+00
  %209 = select i1 %208, float 0x7FF0000000000000, float 1.000000e+00
  %210 = select i1 %207, float 0.000000e+00, float %209
  %211 = and i1 %206, %205
  %212 = select i1 %211, float %199, float %210
  %213 = fcmp oeq float %0, 0x7FF0000000000000
  %214 = fcmp oeq float %0, 0xFFF0000000000000
  %215 = or i1 %213, %214
  %216 = fcmp oeq float %0, 0.000000e+00
  %217 = or i1 %216, %215
  %218 = and i32 %12, -2147483648
  %219 = or i32 %218, 1065353216
  %220 = bitcast i32 %219 to float
  %221 = select i1 %195, float 1.000000e+00, float %220
  %222 = fsub float -0.000000e+00, %1
  %223 = select i1 %216, float %222, float %1
  %224 = fcmp olt float %223, 0.000000e+00
  %225 = select i1 %224, float 0.000000e+00, float 0x7FF0000000000000
  %226 = fmul float %225, %221
  %227 = select i1 %217, float %226, float %212
  %228 = fcmp uno float %1, %0
  %229 = select i1 %228, float 0xFFFFFFFFE0000000, float %227
  %230 = fcmp une float %1, 0.000000e+00
  %231 = fcmp une float %0, 1.000000e+00
  %232 = and i1 %231, %230
  %233 = select i1 %232, float %229, float 1.000000e+00
  ret float %233
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_fastpowf1_u3500purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp uge float %5, 0x3810000000000000
  %7 = fmul float %5, 0x43F0000000000000
  %8 = select i1 %6, float %5, float %7
  %9 = fmul float %8, 0x3FF5555560000000
  %10 = bitcast float %9 to i32
  %11 = lshr i32 %10, 23
  %12 = and i32 %11, 255
  %13 = bitcast float %8 to i32
  %14 = shl nuw nsw i32 %12, 23
  %15 = add i32 %13, 1065353216
  %16 = sub i32 %15, %14
  %17 = bitcast i32 %16 to float
  %18 = select i1 %6, i32 -127, i32 -191
  %19 = add nsw i32 %12, %18
  %20 = fadd float %17, -1.000000e+00
  %21 = fadd float %17, 1.000000e+00
  %22 = fdiv float %20, %21
  %23 = fmul float %22, %22
  %24 = tail call float @llvm.fma.f32(float %23, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %25 = tail call float @llvm.fma.f32(float %24, float %23, float 0x3FD999B240000000) #5
  %26 = tail call float @llvm.fma.f32(float %25, float %23, float 0x3FE5555560000000) #5
  %27 = tail call float @llvm.fma.f32(float %26, float %23, float 2.000000e+00) #5
  %28 = sitofp i32 %19 to float
  %29 = fmul float %28, 0x3FE62E4300000000
  %30 = tail call float @llvm.fma.f32(float %22, float %27, float %29) #5
  %31 = fmul float %30, %1
  %32 = fmul float %31, 0x3FF7154760000000
  %33 = tail call float @llvm.rint.f32(float %32) #5
  %34 = fptosi float %33 to i32
  %35 = sitofp i32 %34 to float
  %36 = tail call float @llvm.fma.f32(float %35, float 0xBFE62E4000000000, float %31) #5
  %37 = tail call float @llvm.fma.f32(float %35, float 0xBEB7F7D1C0000000, float %36) #5
  %38 = tail call float @llvm.fma.f32(float %37, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %39 = tail call float @llvm.fma.f32(float %38, float %37, float 0x3F811114C0000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %37, float 0x3FA5554F40000000) #5
  %41 = tail call float @llvm.fma.f32(float %40, float %37, float 0x3FC5555560000000) #5
  %42 = tail call float @llvm.fma.f32(float %41, float %37, float 5.000000e-01) #5
  %43 = fmul float %37, %37
  %44 = fadd float %37, 1.000000e+00
  %45 = tail call float @llvm.fma.f32(float %43, float %42, float %44) #5
  %46 = ashr i32 %34, 1
  %47 = shl i32 %46, 23
  %48 = add i32 %47, 1065353216
  %49 = bitcast i32 %48 to float
  %50 = fmul float %45, %49
  %51 = sub i32 %34, %46
  %52 = shl i32 %51, 23
  %53 = add i32 %52, 1065353216
  %54 = bitcast i32 %53 to float
  %55 = fmul float %50, %54
  %56 = fcmp uge float %31, -1.040000e+02
  %57 = select i1 %56, float %55, float 0.000000e+00
  %58 = tail call float @llvm.trunc.f32(float %1) #5
  %59 = fcmp oeq float %58, %1
  %60 = bitcast float %1 to i32
  %61 = and i32 %60, 2147483647
  %62 = bitcast i32 %61 to float
  %63 = fcmp ogt float %62, 0x4170000000000000
  %64 = or i1 %59, %63
  %65 = fptosi float %58 to i32
  %66 = shl i32 %65, 31
  %67 = ashr exact i32 %66, 31
  %68 = fcmp olt float %62, 0x4170000000000000
  %69 = and i1 %68, %64
  %70 = select i1 %69, i32 %67, i32 0
  %71 = ashr i32 %3, 31
  %72 = and i32 %70, %71
  %73 = fsub float -0.000000e+00, %57
  %74 = icmp eq i32 %72, 0
  %75 = select i1 %74, float %57, float %73
  %76 = fcmp une float %0, 0.000000e+00
  %77 = select i1 %76, float %75, float 0.000000e+00
  %78 = fcmp une float %1, 0.000000e+00
  %79 = select i1 %78, float %77, float 1.000000e+00
  ret float %79
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_sinhf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = tail call float @llvm.rint.f32(float %6) #5
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0xBFE62E4000000000
  %11 = fadd float %10, %4
  %12 = fsub float %11, %4
  %13 = fsub float %11, %12
  %14 = fsub float %4, %13
  %15 = fsub float %10, %12
  %16 = fadd float %15, %14
  %17 = fadd float %16, 0.000000e+00
  %18 = fmul float %9, 0xBEB7F7D1C0000000
  %19 = fadd float %18, %11
  %20 = fsub float %19, %11
  %21 = fsub float %19, %20
  %22 = fsub float %11, %21
  %23 = fsub float %18, %20
  %24 = fadd float %23, %22
  %25 = fadd float %17, %24
  %26 = tail call float @llvm.fma.f32(float %19, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %27 = tail call float @llvm.fma.f32(float %26, float %19, float 0x3F811121A0000000) #5
  %28 = tail call float @llvm.fma.f32(float %27, float %19, float 0x3FA5554B80000000) #5
  %29 = fmul float %19, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %19, float %28, float %30) #5
  %32 = tail call float @llvm.fma.f32(float %25, float %28, float %31) #5
  %33 = fadd float %29, 0x3FC5555540000000
  %34 = fsub float %33, %29
  %35 = fsub float %33, %34
  %36 = fsub float %29, %35
  %37 = fsub float 0x3FC5555540000000, %34
  %38 = fadd float %37, %36
  %39 = fadd float %32, %38
  %40 = fmul float %19, %33
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %19, float %33, float %41) #5
  %43 = tail call float @llvm.fma.f32(float %25, float %33, float %42) #5
  %44 = tail call float @llvm.fma.f32(float %19, float %39, float %43) #5
  %45 = fadd float %40, 5.000000e-01
  %46 = fsub float %45, %40
  %47 = fsub float %45, %46
  %48 = fsub float %40, %47
  %49 = fsub float 5.000000e-01, %46
  %50 = fadd float %49, %48
  %51 = fadd float %44, %50
  %52 = fmul float %19, %19
  %53 = fadd float %19, %19
  %54 = fsub float -0.000000e+00, %52
  %55 = tail call float @llvm.fma.f32(float %19, float %19, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %53, float %25, float %55) #5
  %57 = fmul float %52, %45
  %58 = fsub float -0.000000e+00, %57
  %59 = tail call float @llvm.fma.f32(float %52, float %45, float %58) #5
  %60 = tail call float @llvm.fma.f32(float %56, float %45, float %59) #5
  %61 = tail call float @llvm.fma.f32(float %52, float %51, float %60) #5
  %62 = fadd float %19, %57
  %63 = fsub float %62, %19
  %64 = fsub float %62, %63
  %65 = fsub float %19, %64
  %66 = fsub float %57, %63
  %67 = fadd float %66, %65
  %68 = fadd float %25, %61
  %69 = fadd float %67, %68
  %70 = fadd float %62, 1.000000e+00
  %71 = fsub float 1.000000e+00, %70
  %72 = fadd float %62, %71
  %73 = fadd float %72, %69
  %74 = ashr i32 %8, 1
  %75 = shl i32 %74, 23
  %76 = add i32 %75, 1065353216
  %77 = bitcast i32 %76 to float
  %78 = fmul float %70, %77
  %79 = sub i32 %8, %74
  %80 = shl i32 %79, 23
  %81 = add i32 %80, 1065353216
  %82 = bitcast i32 %81 to float
  %83 = fmul float %78, %82
  %84 = fmul float %73, %77
  %85 = fmul float %84, %82
  %86 = fcmp uge float %4, -1.040000e+02
  %87 = bitcast float %83 to i32
  %88 = sext i1 %86 to i32
  %89 = and i32 %87, %88
  %90 = bitcast i32 %89 to float
  %91 = bitcast float %85 to i32
  %92 = and i32 %91, %88
  %93 = bitcast i32 %92 to float
  %94 = fdiv float 1.000000e+00, %90
  %95 = fsub float -0.000000e+00, %90
  %96 = tail call float @llvm.fma.f32(float %95, float %94, float 1.000000e+00) #5
  %97 = fsub float -0.000000e+00, %93
  %98 = tail call float @llvm.fma.f32(float %97, float %94, float %96) #5
  %99 = fmul float %94, %98
  %100 = fsub float %90, %94
  %101 = fsub float %90, %100
  %102 = fsub float %101, %94
  %103 = fadd float %102, %93
  %104 = fsub float %103, %99
  %105 = fadd float %100, %104
  %106 = fmul float %105, 5.000000e-01
  %107 = fcmp ule float %4, 8.900000e+01
  %108 = fcmp ord float %106, 0.000000e+00
  %109 = and i1 %107, %108
  %110 = bitcast float %106 to i32
  %111 = select i1 %109, i32 %110, i32 2139095040
  %112 = and i32 %2, -2147483648
  %113 = xor i32 %111, %112
  %114 = fcmp uno float %0, 0.000000e+00
  %115 = bitcast i32 %113 to float
  %116 = select i1 %114, float 0xFFFFFFFFE0000000, float %115
  ret float %116
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_coshf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = tail call float @llvm.rint.f32(float %6) #5
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0xBFE62E4000000000
  %11 = fadd float %10, %4
  %12 = fsub float %11, %4
  %13 = fsub float %11, %12
  %14 = fsub float %4, %13
  %15 = fsub float %10, %12
  %16 = fadd float %15, %14
  %17 = fadd float %16, 0.000000e+00
  %18 = fmul float %9, 0xBEB7F7D1C0000000
  %19 = fadd float %18, %11
  %20 = fsub float %19, %11
  %21 = fsub float %19, %20
  %22 = fsub float %11, %21
  %23 = fsub float %18, %20
  %24 = fadd float %23, %22
  %25 = fadd float %17, %24
  %26 = tail call float @llvm.fma.f32(float %19, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %27 = tail call float @llvm.fma.f32(float %26, float %19, float 0x3F811121A0000000) #5
  %28 = tail call float @llvm.fma.f32(float %27, float %19, float 0x3FA5554B80000000) #5
  %29 = fmul float %19, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %19, float %28, float %30) #5
  %32 = tail call float @llvm.fma.f32(float %25, float %28, float %31) #5
  %33 = fadd float %29, 0x3FC5555540000000
  %34 = fsub float %33, %29
  %35 = fsub float %33, %34
  %36 = fsub float %29, %35
  %37 = fsub float 0x3FC5555540000000, %34
  %38 = fadd float %37, %36
  %39 = fadd float %32, %38
  %40 = fmul float %19, %33
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %19, float %33, float %41) #5
  %43 = tail call float @llvm.fma.f32(float %25, float %33, float %42) #5
  %44 = tail call float @llvm.fma.f32(float %19, float %39, float %43) #5
  %45 = fadd float %40, 5.000000e-01
  %46 = fsub float %45, %40
  %47 = fsub float %45, %46
  %48 = fsub float %40, %47
  %49 = fsub float 5.000000e-01, %46
  %50 = fadd float %49, %48
  %51 = fadd float %44, %50
  %52 = fmul float %19, %19
  %53 = fadd float %19, %19
  %54 = fsub float -0.000000e+00, %52
  %55 = tail call float @llvm.fma.f32(float %19, float %19, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %53, float %25, float %55) #5
  %57 = fmul float %52, %45
  %58 = fsub float -0.000000e+00, %57
  %59 = tail call float @llvm.fma.f32(float %52, float %45, float %58) #5
  %60 = tail call float @llvm.fma.f32(float %56, float %45, float %59) #5
  %61 = tail call float @llvm.fma.f32(float %52, float %51, float %60) #5
  %62 = fadd float %19, %57
  %63 = fsub float %62, %19
  %64 = fsub float %62, %63
  %65 = fsub float %19, %64
  %66 = fsub float %57, %63
  %67 = fadd float %66, %65
  %68 = fadd float %25, %61
  %69 = fadd float %67, %68
  %70 = fadd float %62, 1.000000e+00
  %71 = fsub float 1.000000e+00, %70
  %72 = fadd float %62, %71
  %73 = fadd float %72, %69
  %74 = ashr i32 %8, 1
  %75 = shl i32 %74, 23
  %76 = add i32 %75, 1065353216
  %77 = bitcast i32 %76 to float
  %78 = fmul float %70, %77
  %79 = sub i32 %8, %74
  %80 = shl i32 %79, 23
  %81 = add i32 %80, 1065353216
  %82 = bitcast i32 %81 to float
  %83 = fmul float %78, %82
  %84 = fmul float %73, %77
  %85 = fmul float %84, %82
  %86 = fcmp uge float %4, -1.040000e+02
  %87 = bitcast float %83 to i32
  %88 = sext i1 %86 to i32
  %89 = and i32 %87, %88
  %90 = bitcast i32 %89 to float
  %91 = bitcast float %85 to i32
  %92 = and i32 %91, %88
  %93 = bitcast i32 %92 to float
  %94 = fdiv float 1.000000e+00, %90
  %95 = fsub float -0.000000e+00, %90
  %96 = tail call float @llvm.fma.f32(float %95, float %94, float 1.000000e+00) #5
  %97 = fsub float -0.000000e+00, %93
  %98 = tail call float @llvm.fma.f32(float %97, float %94, float %96) #5
  %99 = fmul float %94, %98
  %100 = fadd float %94, %90
  %101 = fsub float %90, %100
  %102 = fadd float %94, %101
  %103 = fadd float %102, %93
  %104 = fadd float %103, %99
  %105 = fadd float %100, %104
  %106 = fmul float %105, 5.000000e-01
  %107 = fcmp ule float %4, 8.900000e+01
  %108 = fcmp ord float %106, 0.000000e+00
  %109 = and i1 %107, %108
  %110 = fcmp uno float %0, 0.000000e+00
  %111 = select i1 %109, float %106, float 0x7FF0000000000000
  %112 = select i1 %110, float 0xFFFFFFFFE0000000, float %111
  ret float %112
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_tanhf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = tail call float @llvm.rint.f32(float %6) #5
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0xBFE62E4000000000
  %11 = fadd float %10, %4
  %12 = fsub float %11, %4
  %13 = fsub float %11, %12
  %14 = fsub float %4, %13
  %15 = fsub float %10, %12
  %16 = fadd float %15, %14
  %17 = fadd float %16, 0.000000e+00
  %18 = fmul float %9, 0xBEB7F7D1C0000000
  %19 = fadd float %18, %11
  %20 = fsub float %19, %11
  %21 = fsub float %19, %20
  %22 = fsub float %11, %21
  %23 = fsub float %18, %20
  %24 = fadd float %23, %22
  %25 = fadd float %17, %24
  %26 = tail call float @llvm.fma.f32(float %19, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %27 = tail call float @llvm.fma.f32(float %26, float %19, float 0x3F811121A0000000) #5
  %28 = tail call float @llvm.fma.f32(float %27, float %19, float 0x3FA5554B80000000) #5
  %29 = fmul float %19, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %19, float %28, float %30) #5
  %32 = tail call float @llvm.fma.f32(float %25, float %28, float %31) #5
  %33 = fadd float %29, 0x3FC5555540000000
  %34 = fsub float %33, %29
  %35 = fsub float %33, %34
  %36 = fsub float %29, %35
  %37 = fsub float 0x3FC5555540000000, %34
  %38 = fadd float %37, %36
  %39 = fadd float %32, %38
  %40 = fmul float %19, %33
  %41 = fsub float -0.000000e+00, %40
  %42 = tail call float @llvm.fma.f32(float %19, float %33, float %41) #5
  %43 = tail call float @llvm.fma.f32(float %25, float %33, float %42) #5
  %44 = tail call float @llvm.fma.f32(float %19, float %39, float %43) #5
  %45 = fadd float %40, 5.000000e-01
  %46 = fsub float %45, %40
  %47 = fsub float %45, %46
  %48 = fsub float %40, %47
  %49 = fsub float 5.000000e-01, %46
  %50 = fadd float %49, %48
  %51 = fadd float %44, %50
  %52 = fmul float %19, %19
  %53 = fadd float %19, %19
  %54 = fsub float -0.000000e+00, %52
  %55 = tail call float @llvm.fma.f32(float %19, float %19, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %53, float %25, float %55) #5
  %57 = fmul float %52, %45
  %58 = fsub float -0.000000e+00, %57
  %59 = tail call float @llvm.fma.f32(float %52, float %45, float %58) #5
  %60 = tail call float @llvm.fma.f32(float %56, float %45, float %59) #5
  %61 = tail call float @llvm.fma.f32(float %52, float %51, float %60) #5
  %62 = fadd float %19, %57
  %63 = fsub float %62, %19
  %64 = fsub float %62, %63
  %65 = fsub float %19, %64
  %66 = fsub float %57, %63
  %67 = fadd float %66, %65
  %68 = fadd float %25, %61
  %69 = fadd float %67, %68
  %70 = fadd float %62, 1.000000e+00
  %71 = fsub float 1.000000e+00, %70
  %72 = fadd float %62, %71
  %73 = fadd float %72, %69
  %74 = ashr i32 %8, 1
  %75 = shl i32 %74, 23
  %76 = add i32 %75, 1065353216
  %77 = bitcast i32 %76 to float
  %78 = fmul float %70, %77
  %79 = sub i32 %8, %74
  %80 = shl i32 %79, 23
  %81 = add i32 %80, 1065353216
  %82 = bitcast i32 %81 to float
  %83 = fmul float %78, %82
  %84 = fmul float %73, %77
  %85 = fmul float %84, %82
  %86 = fcmp uge float %4, -1.040000e+02
  %87 = bitcast float %83 to i32
  %88 = sext i1 %86 to i32
  %89 = and i32 %87, %88
  %90 = bitcast i32 %89 to float
  %91 = bitcast float %85 to i32
  %92 = and i32 %91, %88
  %93 = bitcast i32 %92 to float
  %94 = fdiv float 1.000000e+00, %90
  %95 = fsub float -0.000000e+00, %90
  %96 = tail call float @llvm.fma.f32(float %95, float %94, float 1.000000e+00) #5
  %97 = fsub float -0.000000e+00, %93
  %98 = tail call float @llvm.fma.f32(float %97, float %94, float %96) #5
  %99 = fmul float %94, %98
  %100 = fsub float %90, %94
  %101 = fsub float %90, %100
  %102 = fsub float %101, %94
  %103 = fadd float %102, %93
  %104 = fsub float %103, %99
  %105 = fadd float %94, %90
  %106 = fsub float %90, %105
  %107 = fadd float %94, %106
  %108 = fadd float %107, %93
  %109 = fadd float %108, %99
  %110 = fdiv float 1.000000e+00, %105
  %111 = fmul float %100, %110
  %112 = fsub float -0.000000e+00, %111
  %113 = tail call float @llvm.fma.f32(float %110, float %100, float %112) #5
  %114 = fsub float -0.000000e+00, %105
  %115 = tail call float @llvm.fma.f32(float %114, float %110, float 1.000000e+00) #5
  %116 = fsub float -0.000000e+00, %109
  %117 = tail call float @llvm.fma.f32(float %116, float %110, float %115) #5
  %118 = tail call float @llvm.fma.f32(float %104, float %110, float %113) #5
  %119 = tail call float @llvm.fma.f32(float %111, float %117, float %118) #5
  %120 = fadd float %111, %119
  %121 = fcmp ule float %4, 0x4021542460000000
  %122 = fcmp ord float %120, 0.000000e+00
  %123 = and i1 %121, %122
  %124 = bitcast float %120 to i32
  %125 = select i1 %123, i32 %124, i32 1065353216
  %126 = and i32 %2, -2147483648
  %127 = xor i32 %125, %126
  %128 = fcmp uno float %0, 0.000000e+00
  %129 = bitcast i32 %127 to float
  %130 = select i1 %128, float 0xFFFFFFFFE0000000, float %129
  ret float %130
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_sinhf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = tail call float @llvm.rint.f32(float %5) #5
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = tail call float @llvm.fma.f32(float %8, float 0xBFE62E4000000000, float %4) #5
  %10 = tail call float @llvm.fma.f32(float %8, float 0xBEB7F7D1C0000000, float %9) #5
  %11 = fmul float %10, %10
  %12 = fmul float %11, %11
  %13 = tail call float @llvm.fma.f32(float %10, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %14 = tail call float @llvm.fma.f32(float %10, float 0x3F811114C0000000, float 0x3FA5554F40000000) #5
  %15 = tail call float @llvm.fma.f32(float %10, float 0x3FC5555560000000, float 5.000000e-01) #5
  %16 = tail call float @llvm.fma.f32(float %11, float %14, float %15) #5
  %17 = tail call float @llvm.fma.f32(float %12, float %13, float %16) #5
  %18 = tail call float @llvm.fma.f32(float %11, float %17, float %10) #5
  %19 = icmp eq i32 %7, 0
  %20 = fadd float %18, 1.000000e+00
  %21 = ashr i32 %7, 1
  %22 = shl i32 %21, 23
  %23 = add i32 %22, 1065353216
  %24 = bitcast i32 %23 to float
  %25 = fmul float %20, %24
  %26 = sub i32 %7, %21
  %27 = shl i32 %26, 23
  %28 = add i32 %27, 1065353216
  %29 = bitcast i32 %28 to float
  %30 = fmul float %25, %29
  %31 = fadd float %30, -1.000000e+00
  %32 = select i1 %19, float %18, float %31
  %33 = fadd float %32, 2.000000e+00
  %34 = fadd float %32, 1.000000e+00
  %35 = fdiv float %33, %34
  %36 = fmul float %32, 5.000000e-01
  %37 = fmul float %36, %35
  %38 = fcmp ule float %4, 8.800000e+01
  %39 = fcmp ord float %37, 0.000000e+00
  %40 = and i1 %38, %39
  %41 = bitcast float %37 to i32
  %42 = select i1 %40, i32 %41, i32 2139095040
  %43 = and i32 %2, -2147483648
  %44 = xor i32 %42, %43
  %45 = fcmp uno float %0, 0.000000e+00
  %46 = bitcast i32 %44 to float
  %47 = select i1 %45, float 0xFFFFFFFFE0000000, float %46
  ret float %47
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_coshf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = tail call float @llvm.rint.f32(float %5) #5
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = tail call float @llvm.fma.f32(float %8, float 0xBFE62E4000000000, float %4) #5
  %10 = tail call float @llvm.fma.f32(float %8, float 0xBEB7F7D1C0000000, float %9) #5
  %11 = tail call float @llvm.fma.f32(float %10, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %12 = tail call float @llvm.fma.f32(float %11, float %10, float 0x3F811114C0000000) #5
  %13 = tail call float @llvm.fma.f32(float %12, float %10, float 0x3FA5554F40000000) #5
  %14 = tail call float @llvm.fma.f32(float %13, float %10, float 0x3FC5555560000000) #5
  %15 = tail call float @llvm.fma.f32(float %14, float %10, float 5.000000e-01) #5
  %16 = fmul float %10, %10
  %17 = tail call float @llvm.fma.f32(float %16, float %15, float %10) #5
  %18 = fadd float %17, 1.000000e+00
  %19 = ashr i32 %7, 1
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = sub i32 %7, %19
  %25 = shl i32 %24, 23
  %26 = add i32 %25, 1065353216
  %27 = bitcast i32 %26 to float
  %28 = fmul float %23, %27
  %29 = fcmp uge float %4, -1.040000e+02
  %30 = select i1 %29, float %28, float 0.000000e+00
  %31 = fcmp ule float %4, 1.000000e+02
  %32 = select i1 %31, float %30, float 0x7FF0000000000000
  %33 = fdiv float 5.000000e-01, %32
  %34 = tail call float @llvm.fma.f32(float %32, float 5.000000e-01, float %33) #5
  %35 = fcmp ule float %4, 8.800000e+01
  %36 = fcmp ord float %34, 0.000000e+00
  %37 = and i1 %35, %36
  %38 = fcmp uno float %0, 0.000000e+00
  %39 = select i1 %37, float %34, float 0x7FF0000000000000
  %40 = select i1 %38, float 0xFFFFFFFFE0000000, float %39
  ret float %40
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_tanhf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 2.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = tail call float @llvm.rint.f32(float %6) #5
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = tail call float @llvm.fma.f32(float %9, float 0xBFE62E4000000000, float %5) #5
  %11 = tail call float @llvm.fma.f32(float %9, float 0xBEB7F7D1C0000000, float %10) #5
  %12 = fmul float %11, %11
  %13 = fmul float %12, %12
  %14 = tail call float @llvm.fma.f32(float %11, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %15 = tail call float @llvm.fma.f32(float %11, float 0x3F811114C0000000, float 0x3FA5554F40000000) #5
  %16 = tail call float @llvm.fma.f32(float %11, float 0x3FC5555560000000, float 5.000000e-01) #5
  %17 = tail call float @llvm.fma.f32(float %12, float %15, float %16) #5
  %18 = tail call float @llvm.fma.f32(float %13, float %14, float %17) #5
  %19 = tail call float @llvm.fma.f32(float %12, float %18, float %11) #5
  %20 = icmp eq i32 %8, 0
  %21 = fadd float %19, 1.000000e+00
  %22 = ashr i32 %8, 1
  %23 = shl i32 %22, 23
  %24 = add i32 %23, 1065353216
  %25 = bitcast i32 %24 to float
  %26 = fmul float %21, %25
  %27 = sub i32 %8, %22
  %28 = shl i32 %27, 23
  %29 = add i32 %28, 1065353216
  %30 = bitcast i32 %29 to float
  %31 = fmul float %26, %30
  %32 = fadd float %31, -1.000000e+00
  %33 = select i1 %20, float %19, float %32
  %34 = fadd float %33, 2.000000e+00
  %35 = fdiv float %33, %34
  %36 = fcmp ule float %4, 0x4021542460000000
  %37 = fcmp ord float %35, 0.000000e+00
  %38 = and i1 %36, %37
  %39 = bitcast float %35 to i32
  %40 = select i1 %38, i32 %39, i32 1065353216
  %41 = and i32 %2, -2147483648
  %42 = xor i32 %40, %41
  %43 = fcmp uno float %0, 0.000000e+00
  %44 = bitcast i32 %42 to float
  %45 = select i1 %43, float 0xFFFFFFFFE0000000, float %44
  ret float %45
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinhf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ule float %4, 1.000000e+00
  %6 = fdiv float 1.000000e+00, %0
  %7 = fsub float -0.000000e+00, %0
  %8 = tail call float @llvm.fma.f32(float %7, float %6, float 1.000000e+00) #5
  %9 = fmul float %6, %8
  %10 = select i1 %5, float %4, float %6
  %11 = select i1 %5, float 0.000000e+00, float %9
  %12 = fmul float %10, %10
  %13 = fadd float %10, %10
  %14 = fsub float -0.000000e+00, %12
  %15 = tail call float @llvm.fma.f32(float %10, float %10, float %14) #5
  %16 = tail call float @llvm.fma.f32(float %13, float %11, float %15) #5
  %17 = fadd float %12, 1.000000e+00
  %18 = fsub float %17, %12
  %19 = fsub float %17, %18
  %20 = fsub float %12, %19
  %21 = fsub float 1.000000e+00, %18
  %22 = fadd float %21, %20
  %23 = fadd float %16, %22
  %24 = fadd float %17, %23
  %25 = tail call float @sqrtf(float %24) #5
  %26 = fmul float %25, %25
  %27 = fsub float -0.000000e+00, %26
  %28 = tail call float @llvm.fma.f32(float %25, float %25, float %27) #5
  %29 = fadd float %17, %26
  %30 = fsub float %29, %17
  %31 = fsub float %29, %30
  %32 = fsub float %17, %31
  %33 = fsub float %26, %30
  %34 = fadd float %33, %32
  %35 = fadd float %23, %28
  %36 = fadd float %35, %34
  %37 = fdiv float 1.000000e+00, %25
  %38 = fsub float -0.000000e+00, %25
  %39 = tail call float @llvm.fma.f32(float %38, float %37, float 1.000000e+00) #5
  %40 = fmul float %37, %39
  %41 = fmul float %37, %29
  %42 = fsub float -0.000000e+00, %41
  %43 = tail call float @llvm.fma.f32(float %29, float %37, float %42) #5
  %44 = tail call float @llvm.fma.f32(float %36, float %37, float %43) #5
  %45 = tail call float @llvm.fma.f32(float %29, float %40, float %44) #5
  %46 = fmul float %41, 5.000000e-01
  %47 = fmul float %45, 5.000000e-01
  %48 = fmul float %46, %4
  %49 = fsub float -0.000000e+00, %48
  %50 = tail call float @llvm.fma.f32(float %46, float %4, float %49) #5
  %51 = tail call float @llvm.fma.f32(float %47, float %4, float %50) #5
  %52 = select i1 %5, float %46, float %48
  %53 = select i1 %5, float %47, float %51
  %54 = fadd float %52, %0
  %55 = fsub float %54, %52
  %56 = fsub float %54, %55
  %57 = fsub float %52, %56
  %58 = fsub float %0, %55
  %59 = fadd float %58, %57
  %60 = fadd float %59, %53
  %61 = fadd float %54, %60
  %62 = fsub float %54, %61
  %63 = fadd float %60, %62
  %64 = fmul float %61, 0x3FF5555560000000
  %65 = fcmp uge float %64, 0x3BF0000000000000
  %66 = fmul float %64, 0x43F0000000000000
  %67 = select i1 %65, float %64, float %66
  %68 = bitcast float %67 to i32
  %69 = lshr i32 %68, 23
  %70 = and i32 %69, 255
  %71 = select i1 %65, i32 127, i32 191
  %72 = sub nsw i32 %70, %71
  %73 = shl i32 %72, 23
  %74 = sub i32 1065353216, %73
  %75 = bitcast i32 %74 to float
  %76 = fmul float %61, %75
  %77 = fmul float %63, %75
  %78 = fadd float %76, -1.000000e+00
  %79 = fsub float %78, %76
  %80 = fsub float %78, %79
  %81 = fsub float %76, %80
  %82 = fsub float -1.000000e+00, %79
  %83 = fadd float %82, %81
  %84 = fadd float %77, %83
  %85 = fadd float %76, 1.000000e+00
  %86 = fsub float %85, %76
  %87 = fsub float %85, %86
  %88 = fsub float %76, %87
  %89 = fsub float 1.000000e+00, %86
  %90 = fadd float %89, %88
  %91 = fadd float %77, %90
  %92 = fdiv float 1.000000e+00, %85
  %93 = fmul float %78, %92
  %94 = fsub float -0.000000e+00, %93
  %95 = tail call float @llvm.fma.f32(float %92, float %78, float %94) #5
  %96 = fsub float -0.000000e+00, %85
  %97 = tail call float @llvm.fma.f32(float %96, float %92, float 1.000000e+00) #5
  %98 = fsub float -0.000000e+00, %91
  %99 = tail call float @llvm.fma.f32(float %98, float %92, float %97) #5
  %100 = tail call float @llvm.fma.f32(float %84, float %92, float %95) #5
  %101 = tail call float @llvm.fma.f32(float %93, float %99, float %100) #5
  %102 = fmul float %93, %93
  %103 = fadd float %93, %93
  %104 = fsub float -0.000000e+00, %102
  %105 = tail call float @llvm.fma.f32(float %93, float %93, float %104) #5
  %106 = tail call float @llvm.fma.f32(float %103, float %101, float %105) #5
  %107 = tail call float @llvm.fma.f32(float %102, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %108 = tail call float @llvm.fma.f32(float %107, float %102, float 0x3FD999B240000000) #5
  %109 = tail call float @llvm.fma.f32(float %108, float %102, float 0x3FE5555560000000) #5
  %110 = sitofp i32 %72 to float
  %111 = fmul float %110, 0x3FE62E4300000000
  %112 = fsub float -0.000000e+00, %111
  %113 = tail call float @llvm.fma.f32(float %110, float 0x3FE62E4300000000, float %112) #5
  %114 = tail call float @llvm.fma.f32(float %110, float 0xBE205C6100000000, float %113) #5
  %115 = fmul float %93, 2.000000e+00
  %116 = fmul float %101, 2.000000e+00
  %117 = fadd float %111, %115
  %118 = fsub float %111, %117
  %119 = fadd float %115, %118
  %120 = fadd float %114, %119
  %121 = fadd float %120, %116
  %122 = fmul float %93, %102
  %123 = fsub float -0.000000e+00, %122
  %124 = tail call float @llvm.fma.f32(float %102, float %93, float %123) #5
  %125 = tail call float @llvm.fma.f32(float %106, float %93, float %124) #5
  %126 = tail call float @llvm.fma.f32(float %102, float %101, float %125) #5
  %127 = fmul float %122, %109
  %128 = fsub float -0.000000e+00, %127
  %129 = tail call float @llvm.fma.f32(float %122, float %109, float %128) #5
  %130 = tail call float @llvm.fma.f32(float %126, float %109, float %129) #5
  %131 = fadd float %117, %127
  %132 = fsub float %117, %131
  %133 = fadd float %127, %132
  %134 = fadd float %121, %133
  %135 = fadd float %130, %134
  %136 = fadd float %131, %135
  %137 = fcmp ule float %4, 0x43EFFFFFE0000000
  %138 = fcmp ord float %136, 0.000000e+00
  %139 = and i32 %2, -2147483648
  %140 = or i32 %139, 2139095040
  %141 = and i1 %137, %138
  %142 = fcmp uno float %0, 0.000000e+00
  %143 = bitcast i32 %140 to float
  %144 = select i1 %141, float %136, float %143
  %145 = select i1 %142, float 0xFFFFFFFFE0000000, float %144
  %146 = icmp eq i32 %2, -2147483648
  %147 = select i1 %146, float -0.000000e+00, float %145
  ret float %147
}

; Function Attrs: nounwind uwtable
define float @Sleef_acoshf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = insertelement <2 x float> undef, float %0, i32 0
  %3 = shufflevector <2 x float> %2, <2 x float> undef, <2 x i32> zeroinitializer
  %4 = fadd <2 x float> %3, <float 1.000000e+00, float -1.000000e+00>
  %5 = extractelement <2 x float> %4, i32 0
  %6 = fsub float %5, %0
  %7 = fsub float %5, %6
  %8 = fsub float %0, %7
  %9 = fsub float 1.000000e+00, %6
  %10 = fadd float %9, %8
  %11 = fadd float %5, %10
  %12 = tail call float @sqrtf(float %11) #5
  %13 = extractelement <2 x float> %4, i32 1
  %14 = fsub float %13, %0
  %15 = fsub float %13, %14
  %16 = fsub float %0, %15
  %17 = fsub float -1.000000e+00, %14
  %18 = fadd float %17, %16
  %19 = fadd float %13, %18
  %20 = tail call float @sqrtf(float %19) #5
  %21 = insertelement <2 x float> undef, float %12, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  %23 = fmul <2 x float> %22, %22
  %24 = extractelement <2 x float> %23, i32 0
  %25 = fsub float -0.000000e+00, %24
  %26 = tail call float @llvm.fma.f32(float %12, float %12, float %25) #5
  %27 = fadd <2 x float> %4, %23
  %28 = extractelement <2 x float> %27, i32 0
  %29 = fsub float %28, %5
  %30 = fsub float %28, %29
  %31 = fsub float %5, %30
  %32 = fsub float %24, %29
  %33 = fadd float %32, %31
  %34 = fadd float %10, %26
  %35 = fadd float %34, %33
  %36 = fsub float -0.000000e+00, %12
  %37 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %22
  %38 = extractelement <2 x float> %37, i32 0
  %39 = tail call float @llvm.fma.f32(float %36, float %38, float 1.000000e+00) #5
  %40 = fmul float %38, %39
  %41 = fmul <2 x float> %37, %27
  %42 = extractelement <2 x float> %41, i32 0
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %28, float %38, float %43) #5
  %45 = tail call float @llvm.fma.f32(float %35, float %38, float %44) #5
  %46 = tail call float @llvm.fma.f32(float %28, float %40, float %45) #5
  %47 = fmul float %46, 5.000000e-01
  %48 = extractelement <2 x float> %23, i32 1
  %49 = fsub float -0.000000e+00, %48
  %50 = tail call float @llvm.fma.f32(float %20, float %20, float %49) #5
  %51 = extractelement <2 x float> %27, i32 1
  %52 = fsub float %51, %13
  %53 = fsub float %51, %52
  %54 = fsub float %13, %53
  %55 = fsub float %48, %52
  %56 = fadd float %55, %54
  %57 = fadd float %18, %50
  %58 = fadd float %57, %56
  %59 = fsub float -0.000000e+00, %20
  %60 = extractelement <2 x float> %37, i32 1
  %61 = tail call float @llvm.fma.f32(float %59, float %60, float 1.000000e+00) #5
  %62 = fmul float %60, %61
  %63 = extractelement <2 x float> %41, i32 1
  %64 = fsub float -0.000000e+00, %63
  %65 = tail call float @llvm.fma.f32(float %51, float %60, float %64) #5
  %66 = tail call float @llvm.fma.f32(float %58, float %60, float %65) #5
  %67 = tail call float @llvm.fma.f32(float %51, float %62, float %66) #5
  %68 = fmul <2 x float> %41, <float 5.000000e-01, float 5.000000e-01>
  %69 = fmul float %67, 5.000000e-01
  %70 = extractelement <2 x float> %68, i32 0
  %71 = extractelement <2 x float> %68, i32 1
  %72 = fmul float %70, %71
  %73 = fsub float -0.000000e+00, %72
  %74 = tail call float @llvm.fma.f32(float %70, float %71, float %73) #5
  %75 = tail call float @llvm.fma.f32(float %47, float %71, float %74) #5
  %76 = tail call float @llvm.fma.f32(float %70, float %69, float %75) #5
  %77 = fadd float %72, %0
  %78 = fsub float %77, %72
  %79 = fsub float %77, %78
  %80 = fsub float %72, %79
  %81 = fsub float %0, %78
  %82 = fadd float %81, %80
  %83 = fadd float %82, %76
  %84 = fmul float %77, 0x3FF5555560000000
  %85 = fcmp uge float %84, 0x3BF0000000000000
  %86 = fmul float %84, 0x43F0000000000000
  %87 = select i1 %85, float %84, float %86
  %88 = bitcast float %87 to i32
  %89 = lshr i32 %88, 23
  %90 = and i32 %89, 255
  %91 = select i1 %85, i32 127, i32 191
  %92 = sub nsw i32 %90, %91
  %93 = shl i32 %92, 23
  %94 = sub i32 1065353216, %93
  %95 = bitcast i32 %94 to float
  %96 = fmul float %77, %95
  %97 = fmul float %83, %95
  %98 = fadd float %96, -1.000000e+00
  %99 = fsub float %98, %96
  %100 = fsub float %98, %99
  %101 = fsub float %96, %100
  %102 = fsub float -1.000000e+00, %99
  %103 = fadd float %102, %101
  %104 = fadd float %97, %103
  %105 = fadd float %96, 1.000000e+00
  %106 = fsub float %105, %96
  %107 = fsub float %105, %106
  %108 = fsub float %96, %107
  %109 = fsub float 1.000000e+00, %106
  %110 = fadd float %109, %108
  %111 = fadd float %97, %110
  %112 = fdiv float 1.000000e+00, %105
  %113 = fmul float %98, %112
  %114 = fsub float -0.000000e+00, %113
  %115 = tail call float @llvm.fma.f32(float %112, float %98, float %114) #5
  %116 = fsub float -0.000000e+00, %105
  %117 = tail call float @llvm.fma.f32(float %116, float %112, float 1.000000e+00) #5
  %118 = fsub float -0.000000e+00, %111
  %119 = tail call float @llvm.fma.f32(float %118, float %112, float %117) #5
  %120 = tail call float @llvm.fma.f32(float %104, float %112, float %115) #5
  %121 = tail call float @llvm.fma.f32(float %113, float %119, float %120) #5
  %122 = fmul float %113, %113
  %123 = fadd float %113, %113
  %124 = fsub float -0.000000e+00, %122
  %125 = tail call float @llvm.fma.f32(float %113, float %113, float %124) #5
  %126 = tail call float @llvm.fma.f32(float %123, float %121, float %125) #5
  %127 = tail call float @llvm.fma.f32(float %122, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %128 = tail call float @llvm.fma.f32(float %127, float %122, float 0x3FD999B240000000) #5
  %129 = tail call float @llvm.fma.f32(float %128, float %122, float 0x3FE5555560000000) #5
  %130 = sitofp i32 %92 to float
  %131 = fmul float %130, 0x3FE62E4300000000
  %132 = fsub float -0.000000e+00, %131
  %133 = tail call float @llvm.fma.f32(float %130, float 0x3FE62E4300000000, float %132) #5
  %134 = tail call float @llvm.fma.f32(float %130, float 0xBE205C6100000000, float %133) #5
  %135 = fmul float %113, 2.000000e+00
  %136 = fmul float %121, 2.000000e+00
  %137 = fadd float %131, %135
  %138 = fsub float %131, %137
  %139 = fadd float %135, %138
  %140 = fadd float %134, %139
  %141 = fadd float %140, %136
  %142 = fmul float %113, %122
  %143 = fsub float -0.000000e+00, %142
  %144 = tail call float @llvm.fma.f32(float %122, float %113, float %143) #5
  %145 = tail call float @llvm.fma.f32(float %126, float %113, float %144) #5
  %146 = tail call float @llvm.fma.f32(float %122, float %121, float %145) #5
  %147 = fmul float %142, %129
  %148 = fsub float -0.000000e+00, %147
  %149 = tail call float @llvm.fma.f32(float %142, float %129, float %148) #5
  %150 = tail call float @llvm.fma.f32(float %146, float %129, float %149) #5
  %151 = fadd float %137, %147
  %152 = fsub float %137, %151
  %153 = fadd float %147, %152
  %154 = fadd float %141, %153
  %155 = fadd float %150, %154
  %156 = fadd float %151, %155
  %157 = bitcast float %0 to i32
  %158 = and i32 %157, 2147483647
  %159 = bitcast i32 %158 to float
  %160 = fcmp ule float %159, 0x43EFFFFFE0000000
  %161 = fcmp ord float %156, 0.000000e+00
  %162 = and i1 %160, %161
  %163 = fcmp oeq float %0, 1.000000e+00
  %164 = fcmp olt float %0, 1.000000e+00
  %165 = fcmp uno float %0, 0.000000e+00
  %166 = or i1 %165, %164
  %167 = select i1 %162, float %156, float 0x7FF0000000000000
  %168 = select i1 %163, float 0.000000e+00, float %167
  %169 = select i1 %166, float 0xFFFFFFFFE0000000, float %168
  ret float %169
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_atanhf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 1.000000e+00
  %6 = fadd float %5, -1.000000e+00
  %7 = fsub float %5, %6
  %8 = fsub float 1.000000e+00, %7
  %9 = fsub float %4, %6
  %10 = fadd float %9, %8
  %11 = fsub float -0.000000e+00, %4
  %12 = fsub float 1.000000e+00, %4
  %13 = fadd float %12, -1.000000e+00
  %14 = fsub float %12, %13
  %15 = fsub float 1.000000e+00, %14
  %16 = fsub float %11, %13
  %17 = fadd float %16, %15
  %18 = fdiv float 1.000000e+00, %12
  %19 = fmul float %5, %18
  %20 = fsub float -0.000000e+00, %19
  %21 = tail call float @llvm.fma.f32(float %18, float %5, float %20) #5
  %22 = fsub float -0.000000e+00, %12
  %23 = tail call float @llvm.fma.f32(float %22, float %18, float 1.000000e+00) #5
  %24 = fsub float -0.000000e+00, %17
  %25 = tail call float @llvm.fma.f32(float %24, float %18, float %23) #5
  %26 = tail call float @llvm.fma.f32(float %10, float %18, float %21) #5
  %27 = tail call float @llvm.fma.f32(float %19, float %25, float %26) #5
  %28 = fmul float %19, 0x3FF5555560000000
  %29 = fcmp uge float %28, 0x3BF0000000000000
  %30 = fmul float %28, 0x43F0000000000000
  %31 = select i1 %29, float %28, float %30
  %32 = bitcast float %31 to i32
  %33 = lshr i32 %32, 23
  %34 = and i32 %33, 255
  %35 = select i1 %29, i32 127, i32 191
  %36 = sub nsw i32 %34, %35
  %37 = shl i32 %36, 23
  %38 = sub i32 1065353216, %37
  %39 = bitcast i32 %38 to float
  %40 = fmul float %19, %39
  %41 = fmul float %27, %39
  %42 = fadd float %40, -1.000000e+00
  %43 = fsub float %42, %40
  %44 = fsub float %42, %43
  %45 = fsub float %40, %44
  %46 = fsub float -1.000000e+00, %43
  %47 = fadd float %46, %45
  %48 = fadd float %41, %47
  %49 = fadd float %40, 1.000000e+00
  %50 = fsub float %49, %40
  %51 = fsub float %49, %50
  %52 = fsub float %40, %51
  %53 = fsub float 1.000000e+00, %50
  %54 = fadd float %53, %52
  %55 = fadd float %41, %54
  %56 = fdiv float 1.000000e+00, %49
  %57 = fmul float %42, %56
  %58 = fsub float -0.000000e+00, %57
  %59 = tail call float @llvm.fma.f32(float %56, float %42, float %58) #5
  %60 = fsub float -0.000000e+00, %49
  %61 = tail call float @llvm.fma.f32(float %60, float %56, float 1.000000e+00) #5
  %62 = fsub float -0.000000e+00, %55
  %63 = tail call float @llvm.fma.f32(float %62, float %56, float %61) #5
  %64 = tail call float @llvm.fma.f32(float %48, float %56, float %59) #5
  %65 = tail call float @llvm.fma.f32(float %57, float %63, float %64) #5
  %66 = fmul float %57, %57
  %67 = fadd float %57, %57
  %68 = fsub float -0.000000e+00, %66
  %69 = tail call float @llvm.fma.f32(float %57, float %57, float %68) #5
  %70 = tail call float @llvm.fma.f32(float %67, float %65, float %69) #5
  %71 = tail call float @llvm.fma.f32(float %66, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %72 = tail call float @llvm.fma.f32(float %71, float %66, float 0x3FD999B240000000) #5
  %73 = tail call float @llvm.fma.f32(float %72, float %66, float 0x3FE5555560000000) #5
  %74 = sitofp i32 %36 to float
  %75 = fmul float %74, 0x3FE62E4300000000
  %76 = fsub float -0.000000e+00, %75
  %77 = tail call float @llvm.fma.f32(float %74, float 0x3FE62E4300000000, float %76) #5
  %78 = tail call float @llvm.fma.f32(float %74, float 0xBE205C6100000000, float %77) #5
  %79 = fmul float %57, 2.000000e+00
  %80 = fmul float %65, 2.000000e+00
  %81 = fadd float %75, %79
  %82 = fsub float %75, %81
  %83 = fadd float %79, %82
  %84 = fadd float %78, %83
  %85 = fadd float %84, %80
  %86 = fmul float %57, %66
  %87 = fsub float -0.000000e+00, %86
  %88 = tail call float @llvm.fma.f32(float %66, float %57, float %87) #5
  %89 = tail call float @llvm.fma.f32(float %70, float %57, float %88) #5
  %90 = tail call float @llvm.fma.f32(float %66, float %65, float %89) #5
  %91 = fmul float %86, %73
  %92 = fsub float -0.000000e+00, %91
  %93 = tail call float @llvm.fma.f32(float %86, float %73, float %92) #5
  %94 = tail call float @llvm.fma.f32(float %90, float %73, float %93) #5
  %95 = fadd float %81, %91
  %96 = fsub float %81, %95
  %97 = fadd float %91, %96
  %98 = fadd float %85, %97
  %99 = fadd float %94, %98
  %100 = fcmp ogt float %4, 1.000000e+00
  %101 = fcmp une float %4, 1.000000e+00
  %102 = fadd float %95, %99
  %103 = fmul float %102, 5.000000e-01
  %104 = bitcast float %103 to i32
  %105 = zext i32 %104 to i64
  %106 = select i1 %101, i64 %105, i64 2139095040
  %107 = select i1 %100, i64 4294967295, i64 0
  %108 = or i64 %106, %107
  %109 = trunc i64 %108 to i32
  %110 = bitcast i32 %109 to float
  %111 = fcmp oeq float %0, 0x7FF0000000000000
  %112 = fcmp oeq float %0, 0xFFF0000000000000
  %113 = or i1 %111, %112
  %114 = fcmp uno float %110, 0.000000e+00
  %115 = or i1 %113, %114
  %116 = select i1 %115, i64 4294967295, i64 0
  %117 = or i64 %116, %108
  %118 = trunc i64 %117 to i32
  %119 = and i32 %2, -2147483648
  %120 = xor i32 %119, %118
  %121 = fcmp uno float %0, 0.000000e+00
  %122 = bitcast i32 %120 to float
  %123 = select i1 %121, float 0xFFFFFFFFE0000000, float %122
  ret float %123
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_exp2f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.rint.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = fsub float %0, %2
  %5 = tail call float @llvm.fma.f32(float %4, float 0x3F2421B200000000, float 0x3F55F14660000000) #5
  %6 = tail call float @llvm.fma.f32(float %5, float %4, float 0x3F83B2CDC0000000) #5
  %7 = tail call float @llvm.fma.f32(float %6, float %4, float 0x3FAC6AF380000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %4, float 0x3FCEBFBD80000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %4, float 0x3FE62E4300000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %4, float 1.000000e+00) #5
  %11 = ashr i32 %3, 1
  %12 = shl i32 %11, 23
  %13 = add i32 %12, 1065353216
  %14 = bitcast i32 %13 to float
  %15 = fmul float %10, %14
  %16 = sub i32 %3, %11
  %17 = shl i32 %16, 23
  %18 = add i32 %17, 1065353216
  %19 = bitcast i32 %18 to float
  %20 = fmul float %15, %19
  %21 = fcmp ult float %0, 1.280000e+02
  %22 = fcmp olt float %0, -1.500000e+02
  %23 = select i1 %21, float %20, float 0x7FF0000000000000
  %24 = select i1 %22, float 0.000000e+00, float %23
  ret float %24
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_exp2f1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.rint.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = fsub float %0, %2
  %5 = tail call float @llvm.fma.f32(float %4, float 0x3F2421B200000000, float 0x3F55F14660000000) #5
  %6 = tail call float @llvm.fma.f32(float %5, float %4, float 0x3F83B2CDC0000000) #5
  %7 = tail call float @llvm.fma.f32(float %6, float %4, float 0x3FAC6AF380000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %4, float 0x3FCEBFBD80000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %4, float 0x3FE62E4300000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %4, float 1.000000e+00) #5
  %11 = ashr i32 %3, 1
  %12 = shl i32 %11, 23
  %13 = add i32 %12, 1065353216
  %14 = bitcast i32 %13 to float
  %15 = fmul float %10, %14
  %16 = sub i32 %3, %11
  %17 = shl i32 %16, 23
  %18 = add i32 %17, 1065353216
  %19 = bitcast i32 %18 to float
  %20 = fmul float %15, %19
  %21 = fcmp ult float %0, 1.280000e+02
  %22 = fcmp olt float %0, -1.500000e+02
  %23 = select i1 %21, float %20, float 0x7FF0000000000000
  %24 = select i1 %22, float 0.000000e+00, float %23
  ret float %24
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_exp10f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = tail call float @llvm.fma.f32(float %3, float 0xBFD3440000000000, float %0) #5
  %6 = tail call float @llvm.fma.f32(float %3, float 0xBED3509F80000000, float %5) #5
  %7 = tail call float @llvm.fma.f32(float %6, float 0x3FB16A1F80000000, float 0x3FCA997420000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %6, float 0x3FE142AFA0000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %6, float 0x3FF2BD6BC0000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %6, float 0x40004705A0000000) #5
  %11 = tail call float @llvm.fma.f32(float %10, float %6, float 0x40053524C0000000) #5
  %12 = fmul float %6, %11
  %13 = fadd float %12, 0x40026BB1C0000000
  %14 = fsub float 0x40026BB1C0000000, %13
  %15 = fadd float %12, %14
  %16 = fadd float %15, 0xBE610586A0000000
  %17 = fmul float %6, %13
  %18 = fsub float -0.000000e+00, %17
  %19 = tail call float @llvm.fma.f32(float %13, float %6, float %18) #5
  %20 = tail call float @llvm.fma.f32(float %16, float %6, float %19) #5
  %21 = fadd float %17, 1.000000e+00
  %22 = fsub float 1.000000e+00, %21
  %23 = fadd float %17, %22
  %24 = fadd float %20, %23
  %25 = fadd float %21, %24
  %26 = ashr i32 %4, 1
  %27 = shl i32 %26, 23
  %28 = add i32 %27, 1065353216
  %29 = bitcast i32 %28 to float
  %30 = fmul float %25, %29
  %31 = sub i32 %4, %26
  %32 = shl i32 %31, 23
  %33 = add i32 %32, 1065353216
  %34 = bitcast i32 %33 to float
  %35 = fmul float %30, %34
  %36 = fcmp ule float %0, 0x4043441360000000
  %37 = fcmp olt float %0, -5.000000e+01
  %38 = select i1 %36, float %35, float 0x7FF0000000000000
  %39 = select i1 %37, float 0.000000e+00, float %38
  ret float %39
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_exp10f1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = tail call float @llvm.fma.f32(float %3, float 0xBFD3440000000000, float %0) #5
  %6 = tail call float @llvm.fma.f32(float %3, float 0xBED3509F80000000, float %5) #5
  %7 = tail call float @llvm.fma.f32(float %6, float 0x3FCA6B54E0000000, float 0x3FE1565340000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %6, float 0x3FF2BD9740000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %6, float 0x400046F9C0000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %6, float 0x40053524A0000000) #5
  %11 = tail call float @llvm.fma.f32(float %10, float %6, float 0x40026BB1C0000000) #5
  %12 = tail call float @llvm.fma.f32(float %11, float %6, float 1.000000e+00) #5
  %13 = ashr i32 %4, 1
  %14 = shl i32 %13, 23
  %15 = add i32 %14, 1065353216
  %16 = bitcast i32 %15 to float
  %17 = fmul float %12, %16
  %18 = sub i32 %4, %13
  %19 = shl i32 %18, 23
  %20 = add i32 %19, 1065353216
  %21 = bitcast i32 %20 to float
  %22 = fmul float %17, %21
  %23 = fcmp ule float %0, 0x4043441360000000
  %24 = fcmp olt float %0, -5.000000e+01
  %25 = select i1 %23, float %22, float 0x7FF0000000000000
  %26 = select i1 %24, float 0.000000e+00, float %25
  ret float %26
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_expm1f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fadd float %0, 0.000000e+00
  %3 = fmul float %2, 0x3FF7154760000000
  %4 = tail call float @llvm.rint.f32(float %3) #5
  %5 = fptosi float %4 to i32
  %6 = sitofp i32 %5 to float
  %7 = fmul float %6, 0xBFE62E4000000000
  %8 = fadd float %7, %0
  %9 = fsub float %8, %0
  %10 = fsub float %8, %9
  %11 = fsub float %0, %10
  %12 = fsub float %7, %9
  %13 = fadd float %12, %11
  %14 = fadd float %13, 0.000000e+00
  %15 = fmul float %6, 0xBEB7F7D1C0000000
  %16 = fadd float %15, %8
  %17 = fsub float %16, %8
  %18 = fsub float %16, %17
  %19 = fsub float %8, %18
  %20 = fsub float %15, %17
  %21 = fadd float %20, %19
  %22 = fadd float %14, %21
  %23 = tail call float @llvm.fma.f32(float %16, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %24 = tail call float @llvm.fma.f32(float %23, float %16, float 0x3F811121A0000000) #5
  %25 = tail call float @llvm.fma.f32(float %24, float %16, float 0x3FA5554B80000000) #5
  %26 = fmul float %16, %25
  %27 = fsub float -0.000000e+00, %26
  %28 = tail call float @llvm.fma.f32(float %16, float %25, float %27) #5
  %29 = tail call float @llvm.fma.f32(float %22, float %25, float %28) #5
  %30 = fadd float %26, 0x3FC5555540000000
  %31 = fsub float %30, %26
  %32 = fsub float %30, %31
  %33 = fsub float %26, %32
  %34 = fsub float 0x3FC5555540000000, %31
  %35 = fadd float %34, %33
  %36 = fadd float %29, %35
  %37 = fmul float %16, %30
  %38 = fsub float -0.000000e+00, %37
  %39 = tail call float @llvm.fma.f32(float %16, float %30, float %38) #5
  %40 = tail call float @llvm.fma.f32(float %22, float %30, float %39) #5
  %41 = tail call float @llvm.fma.f32(float %16, float %36, float %40) #5
  %42 = fadd float %37, 5.000000e-01
  %43 = fsub float %42, %37
  %44 = fsub float %42, %43
  %45 = fsub float %37, %44
  %46 = fsub float 5.000000e-01, %43
  %47 = fadd float %46, %45
  %48 = fadd float %41, %47
  %49 = fmul float %16, %16
  %50 = fadd float %16, %16
  %51 = fsub float -0.000000e+00, %49
  %52 = tail call float @llvm.fma.f32(float %16, float %16, float %51) #5
  %53 = tail call float @llvm.fma.f32(float %50, float %22, float %52) #5
  %54 = fmul float %49, %42
  %55 = fsub float -0.000000e+00, %54
  %56 = tail call float @llvm.fma.f32(float %49, float %42, float %55) #5
  %57 = tail call float @llvm.fma.f32(float %53, float %42, float %56) #5
  %58 = tail call float @llvm.fma.f32(float %49, float %48, float %57) #5
  %59 = fadd float %16, %54
  %60 = fsub float %59, %16
  %61 = fsub float %59, %60
  %62 = fsub float %16, %61
  %63 = fsub float %54, %60
  %64 = fadd float %63, %62
  %65 = fadd float %22, %58
  %66 = fadd float %64, %65
  %67 = fadd float %59, 1.000000e+00
  %68 = fsub float 1.000000e+00, %67
  %69 = fadd float %59, %68
  %70 = fadd float %69, %66
  %71 = ashr i32 %5, 1
  %72 = shl i32 %71, 23
  %73 = add i32 %72, 1065353216
  %74 = bitcast i32 %73 to float
  %75 = fmul float %67, %74
  %76 = sub i32 %5, %71
  %77 = shl i32 %76, 23
  %78 = add i32 %77, 1065353216
  %79 = bitcast i32 %78 to float
  %80 = fmul float %75, %79
  %81 = fmul float %70, %74
  %82 = fmul float %81, %79
  %83 = fcmp uge float %0, -1.040000e+02
  %84 = bitcast float %80 to i32
  %85 = sext i1 %83 to i32
  %86 = and i32 %84, %85
  %87 = bitcast i32 %86 to float
  %88 = bitcast float %82 to i32
  %89 = and i32 %88, %85
  %90 = bitcast i32 %89 to float
  %91 = fadd float %87, -1.000000e+00
  %92 = fsub float %91, %87
  %93 = fsub float %91, %92
  %94 = fsub float %87, %93
  %95 = fsub float -1.000000e+00, %92
  %96 = fadd float %95, %94
  %97 = fadd float %96, %90
  %98 = fadd float %91, %97
  %99 = fcmp ule float %0, 0x40562E42E0000000
  %100 = select i1 %99, float %98, float 0x7FF0000000000000
  %101 = fcmp uge float %0, 0xC030A2B240000000
  %102 = select i1 %101, float %100, float -1.000000e+00
  %103 = bitcast float %0 to i32
  %104 = icmp eq i32 %103, -2147483648
  %105 = select i1 %104, float -0.000000e+00, float %102
  ret float %105
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_log10f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fsub float %16, %17
  %19 = fsub float -1.000000e+00, %18
  %20 = fsub float %13, %17
  %21 = fadd float %20, %19
  %22 = fadd float %13, 1.000000e+00
  %23 = fadd float %22, -1.000000e+00
  %24 = fsub float %22, %23
  %25 = fsub float 1.000000e+00, %24
  %26 = fsub float %13, %23
  %27 = fadd float %26, %25
  %28 = fdiv float 1.000000e+00, %22
  %29 = fmul float %16, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %28, float %16, float %30) #5
  %32 = fsub float -0.000000e+00, %22
  %33 = tail call float @llvm.fma.f32(float %32, float %28, float 1.000000e+00) #5
  %34 = fsub float -0.000000e+00, %27
  %35 = tail call float @llvm.fma.f32(float %34, float %28, float %33) #5
  %36 = tail call float @llvm.fma.f32(float %21, float %28, float %31) #5
  %37 = tail call float @llvm.fma.f32(float %29, float %35, float %36) #5
  %38 = fmul float %29, %29
  %39 = tail call float @llvm.fma.f32(float %38, float 0x3FC0D2AA40000000, float 0x3FC636DD80000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %38, float 0x3FD287ACE0000000) #5
  %41 = sitofp i32 %15 to float
  %42 = fmul float %41, 0x3FD3441360000000
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %41, float 0x3FD3441360000000, float %43) #5
  %45 = tail call float @llvm.fma.f32(float %41, float 0xBE4EC10C00000000, float %44) #5
  %46 = fmul float %29, 0x3FEBCB7B20000000
  %47 = fsub float -0.000000e+00, %46
  %48 = tail call float @llvm.fma.f32(float %29, float 0x3FEBCB7B20000000, float %47) #5
  %49 = tail call float @llvm.fma.f32(float %37, float 0x3FEBCB7B20000000, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %29, float 0xBE574EEEA0000000, float %49) #5
  %51 = fadd float %42, %46
  %52 = fsub float %42, %51
  %53 = fadd float %46, %52
  %54 = fadd float %45, %53
  %55 = fadd float %54, %50
  %56 = fmul float %29, %38
  %57 = fmul float %56, %40
  %58 = fadd float %51, %57
  %59 = fsub float %51, %58
  %60 = fadd float %57, %59
  %61 = fadd float %55, %60
  %62 = fadd float %58, %61
  %63 = fcmp une float %4, 0x7FF0000000000000
  %64 = select i1 %63, float %62, float 0x7FF0000000000000
  %65 = fcmp oge float %4, 0.000000e+00
  %66 = select i1 %65, float %64, float 0x7FF8000000000000
  %67 = fcmp une float %4, 0.000000e+00
  %68 = select i1 %67, float %66, float 0xFFF0000000000000
  ret float %68
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_log2f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fsub float %16, %17
  %19 = fsub float -1.000000e+00, %18
  %20 = fsub float %13, %17
  %21 = fadd float %20, %19
  %22 = fadd float %13, 1.000000e+00
  %23 = fadd float %22, -1.000000e+00
  %24 = fsub float %22, %23
  %25 = fsub float 1.000000e+00, %24
  %26 = fsub float %13, %23
  %27 = fadd float %26, %25
  %28 = fdiv float 1.000000e+00, %22
  %29 = fmul float %16, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %28, float %16, float %30) #5
  %32 = fsub float -0.000000e+00, %22
  %33 = tail call float @llvm.fma.f32(float %32, float %28, float 1.000000e+00) #5
  %34 = fsub float -0.000000e+00, %27
  %35 = tail call float @llvm.fma.f32(float %34, float %28, float %33) #5
  %36 = tail call float @llvm.fma.f32(float %21, float %28, float %31) #5
  %37 = tail call float @llvm.fma.f32(float %29, float %35, float %36) #5
  %38 = fmul float %29, %29
  %39 = tail call float @llvm.fma.f32(float %38, float 0x3FDBFF4360000000, float 0x3FE2728420000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %38, float 0x3FEEC71380000000) #5
  %41 = sitofp i32 %15 to float
  %42 = fmul float %29, %38
  %43 = insertelement <2 x float> <float 0x4007154760000000, float undef>, float %40, i32 1
  %44 = insertelement <2 x float> undef, float %29, i32 0
  %45 = insertelement <2 x float> %44, float %42, i32 1
  %46 = fmul <2 x float> %43, %45
  %47 = extractelement <2 x float> %46, i32 0
  %48 = fsub float -0.000000e+00, %47
  %49 = tail call float @llvm.fma.f32(float %29, float 0x4007154760000000, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %37, float 0x4007154760000000, float %49) #5
  %51 = tail call float @llvm.fma.f32(float %29, float 0x3E6192FDE0000000, float %50) #5
  %52 = fadd float %47, %41
  %53 = extractelement <2 x float> %46, i32 1
  %54 = fadd float %52, %53
  %55 = insertelement <2 x float> undef, float %52, i32 0
  %56 = insertelement <2 x float> %55, float %54, i32 1
  %57 = insertelement <2 x float> undef, float %41, i32 0
  %58 = insertelement <2 x float> %57, float %52, i32 1
  %59 = fsub <2 x float> %56, %58
  %60 = fsub <2 x float> %56, %59
  %61 = fsub <2 x float> %58, %60
  %62 = fsub <2 x float> %46, %59
  %63 = fadd <2 x float> %62, %61
  %64 = extractelement <2 x float> %63, i32 0
  %65 = fadd float %51, %64
  %66 = extractelement <2 x float> %63, i32 1
  %67 = fadd float %65, %66
  %68 = fadd float %54, %67
  %69 = fcmp une float %4, 0x7FF0000000000000
  %70 = select i1 %69, float %68, float 0x7FF0000000000000
  %71 = fcmp oge float %4, 0.000000e+00
  %72 = select i1 %71, float %70, float 0x7FF8000000000000
  %73 = fcmp une float %4, 0.000000e+00
  %74 = select i1 %73, float %72, float 0xFFF0000000000000
  ret float %74
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_log2f1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = tail call float @llvm.fma.f32(float %19, float 0x3FDBFE81A0000000, float 0x3FE2728F60000000) #5
  %21 = tail call float @llvm.fma.f32(float %20, float %19, float 0x3FEEC715E0000000) #5
  %22 = fmul float %18, %19
  %23 = sitofp i32 %15 to float
  %24 = tail call float @llvm.fma.f32(float %18, float 0x4007154760000000, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %22, float %21, float %24) #5
  %26 = fcmp une float %4, 0x7FF0000000000000
  %27 = select i1 %26, float %25, float 0x7FF0000000000000
  %28 = fcmp oge float %4, 0.000000e+00
  %29 = select i1 %28, float %27, float 0x7FF8000000000000
  %30 = fcmp une float %4, 0.000000e+00
  %31 = select i1 %30, float %29, float 0xFFF0000000000000
  ret float %31
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_log1pf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fadd float %0, 1.000000e+00
  %3 = fcmp uge float %2, 0x3810000000000000
  %4 = fmul float %2, 0x43F0000000000000
  %5 = select i1 %3, float %2, float %4
  %6 = fmul float %5, 0x3FF5555560000000
  %7 = bitcast float %6 to i32
  %8 = lshr i32 %7, 23
  %9 = and i32 %8, 255
  %10 = shl nuw nsw i32 %9, 23
  %11 = sub nsw i32 2130706432, %10
  %12 = bitcast i32 %11 to float
  %13 = fadd float %12, -1.000000e+00
  %14 = tail call float @llvm.fma.f32(float %0, float %12, float %13) #5
  %15 = select i1 %3, i32 -127, i32 -191
  %16 = add nsw i32 %9, %15
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, 0x3FE62E4300000000
  %19 = fsub float -0.000000e+00, %18
  %20 = tail call float @llvm.fma.f32(float %17, float 0x3FE62E4300000000, float %19) #5
  %21 = tail call float @llvm.fma.f32(float %17, float 0xBE205C6100000000, float %20) #5
  %22 = fadd float %14, 2.000000e+00
  %23 = fsub float 2.000000e+00, %22
  %24 = fadd float %14, %23
  %25 = fdiv float 1.000000e+00, %22
  %26 = fmul float %14, %25
  %27 = fsub float -0.000000e+00, %26
  %28 = tail call float @llvm.fma.f32(float %25, float %14, float %27) #5
  %29 = fsub float -0.000000e+00, %22
  %30 = tail call float @llvm.fma.f32(float %29, float %25, float 1.000000e+00) #5
  %31 = fsub float -0.000000e+00, %24
  %32 = tail call float @llvm.fma.f32(float %31, float %25, float %30) #5
  %33 = tail call float @llvm.fma.f32(float %25, float 0.000000e+00, float %28) #5
  %34 = tail call float @llvm.fma.f32(float %26, float %32, float %33) #5
  %35 = fmul float %26, %26
  %36 = tail call float @llvm.fma.f32(float %35, float 0x3FD35FEB80000000, float 0x3FD9933940000000) #5
  %37 = tail call float @llvm.fma.f32(float %36, float %35, float 0x3FE5555B40000000) #5
  %38 = fmul float %26, 2.000000e+00
  %39 = fmul float %34, 2.000000e+00
  %40 = fadd float %18, %38
  %41 = fsub float %18, %40
  %42 = fadd float %38, %41
  %43 = fadd float %21, %42
  %44 = fadd float %39, %43
  %45 = fmul float %26, %35
  %46 = fmul float %45, %37
  %47 = fadd float %40, %46
  %48 = fsub float %40, %47
  %49 = fadd float %46, %48
  %50 = fadd float %44, %49
  %51 = fadd float %47, %50
  %52 = fcmp ule float %0, 0x47D2CED320000000
  %53 = fcmp olt float %0, -1.000000e+00
  %54 = select i1 %52, float %51, float 0x7FF0000000000000
  %55 = select i1 %53, float 0xFFFFFFFFE0000000, float %54
  %56 = fcmp une float %0, -1.000000e+00
  %57 = select i1 %56, float %55, float 0xFFF0000000000000
  %58 = bitcast float %0 to i32
  %59 = icmp eq i32 %58, -2147483648
  %60 = select i1 %59, float -0.000000e+00, float %57
  ret float %60
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fabsf1_purecfma(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  ret float %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_copysignf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, -2147483648
  %7 = or i32 %6, %4
  %8 = bitcast i32 %7 to float
  ret float %8
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmaxf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp ogt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fminf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp olt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fdimf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fsub float %0, %1
  %4 = fcmp uge float %3, 0.000000e+00
  %5 = fcmp une float %0, %1
  %6 = and i1 %5, %4
  %7 = select i1 %6, float %3, float 0.000000e+00
  ret float %7
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_truncf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_floorf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp uge float %5, 0.000000e+00
  %7 = fadd float %5, 1.000000e+00
  %8 = select i1 %6, float %5, float %7
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_ceilf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp ugt float %5, 0.000000e+00
  %7 = fadd float %5, -1.000000e+00
  %8 = select i1 %6, float %7, float %5
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_roundf1_purecfma(float) local_unnamed_addr #1 {
  %2 = fadd float %0, 5.000000e-01
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = fsub float %2, %5
  %7 = fcmp ugt float %2, 0.000000e+00
  %8 = fcmp une float %6, 0.000000e+00
  %9 = fadd float %2, -1.000000e+00
  %10 = or i1 %7, %8
  %11 = select i1 %10, float %2, float %9
  %12 = fcmp uge float %6, 0.000000e+00
  %13 = fadd float %6, 1.000000e+00
  %14 = select i1 %12, float %6, float %13
  %15 = fcmp une float %0, 0x3FDFFFFFE0000000
  %16 = select i1 %15, float %11, float 0.000000e+00
  %17 = fcmp oeq float %0, 0x7FF0000000000000
  %18 = fcmp oeq float %0, 0xFFF0000000000000
  %19 = or i1 %17, %18
  %20 = bitcast float %0 to i32
  %21 = and i32 %20, 2147483647
  %22 = bitcast i32 %21 to float
  %23 = fcmp oge float %22, 0x4160000000000000
  %24 = or i1 %19, %23
  %25 = fsub float %16, %14
  %26 = bitcast float %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = and i32 %20, -2147483648
  %29 = or i32 %27, %28
  %30 = bitcast i32 %29 to float
  %31 = select i1 %24, float %0, float %30
  ret float %31
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_rintf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.rint.f32(float %0) #5
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_fmaf1_purecfma(float, float, float) local_unnamed_addr #1 {
  %4 = tail call float @llvm.fma.f32(float %0, float %1, float %2) #5
  ret float %4
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_sqrtf1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0.000000e+00
  %3 = select i1 %2, float %0, float 0x7FF8000000000000
  %4 = fcmp uge float %3, 0x3B50000000000000
  %5 = fmul float %3, 0x4490000000000000
  %6 = select i1 %4, float %3, float %5
  %7 = select i1 %4, float 1.000000e+00, float 0x3DA0000000000000
  %8 = bitcast float %6 to i32
  %9 = lshr i32 %8, 1
  %10 = sub nsw i32 1597463007, %9
  %11 = bitcast i32 %10 to float
  %12 = fmul float %6, %11
  %13 = fmul float %11, 5.000000e-01
  %14 = fsub float -0.000000e+00, %12
  %15 = tail call float @llvm.fma.f32(float %14, float %13, float 5.000000e-01) #5
  %16 = tail call float @llvm.fma.f32(float %12, float %15, float %12) #5
  %17 = tail call float @llvm.fma.f32(float %13, float %15, float %13) #5
  %18 = fsub float -0.000000e+00, %16
  %19 = tail call float @llvm.fma.f32(float %18, float %17, float 5.000000e-01) #5
  %20 = tail call float @llvm.fma.f32(float %16, float %19, float %16) #5
  %21 = tail call float @llvm.fma.f32(float %17, float %19, float %17) #5
  %22 = fsub float -0.000000e+00, %20
  %23 = tail call float @llvm.fma.f32(float %22, float %21, float 1.500000e+00) #5
  %24 = fadd float %21, %21
  %25 = fmul float %24, %23
  %26 = fmul float %6, %25
  %27 = fsub float -0.000000e+00, %26
  %28 = tail call float @llvm.fma.f32(float %25, float %6, float %27) #5
  %29 = fsub float -0.000000e+00, %25
  %30 = tail call float @llvm.fma.f32(float %29, float %26, float 1.000000e+00) #5
  %31 = tail call float @llvm.fma.f32(float %29, float %28, float %30) #5
  %32 = fmul float %26, 5.000000e-01
  %33 = tail call float @llvm.fma.f32(float %32, float %31, float %28) #5
  %34 = fadd float %26, %33
  %35 = fmul float %7, %34
  %36 = fcmp une float %6, 0.000000e+00
  %37 = fcmp une float %6, 0x7FF0000000000000
  %38 = and i1 %36, %37
  %39 = select i1 %38, float %35, float %6
  %40 = fcmp uge float %6, 0.000000e+00
  %41 = select i1 %40, float %39, float 0x7FF8000000000000
  ret float %41
}

; Function Attrs: nounwind uwtable
define float @Sleef_sqrtf1_purecfma(float) local_unnamed_addr #2 {
  %2 = tail call float @sqrtf(float %0) #5
  ret float %2
}

; Function Attrs: nounwind uwtable
define float @Sleef_hypotf1_u05purecfma(float, float) local_unnamed_addr #2 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fcmp uge float %12, 0x3810000000000000
  %14 = fmul float %10, 0x4170000000000000
  %15 = select i1 %13, float %10, float %14
  %16 = fmul float %12, 0x4170000000000000
  %17 = select i1 %13, float %12, float %16
  %18 = fdiv float 1.000000e+00, %17
  %19 = fmul float %15, %18
  %20 = fsub float -0.000000e+00, %19
  %21 = tail call float @llvm.fma.f32(float %18, float %15, float %20) #5
  %22 = fsub float -0.000000e+00, %17
  %23 = tail call float @llvm.fma.f32(float %22, float %18, float 1.000000e+00) #5
  %24 = tail call float @llvm.fma.f32(float %18, float -0.000000e+00, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %18, float 0.000000e+00, float %21) #5
  %26 = tail call float @llvm.fma.f32(float %19, float %24, float %25) #5
  %27 = fmul float %19, %19
  %28 = fadd float %19, %19
  %29 = fsub float -0.000000e+00, %27
  %30 = tail call float @llvm.fma.f32(float %19, float %19, float %29) #5
  %31 = tail call float @llvm.fma.f32(float %28, float %26, float %30) #5
  %32 = fadd float %27, 1.000000e+00
  %33 = fsub float %32, %27
  %34 = fsub float %32, %33
  %35 = fsub float %27, %34
  %36 = fsub float 1.000000e+00, %33
  %37 = fadd float %36, %35
  %38 = fadd float %31, %37
  %39 = fadd float %32, %38
  %40 = tail call float @sqrtf(float %39) #5
  %41 = fmul float %40, %40
  %42 = fsub float -0.000000e+00, %41
  %43 = tail call float @llvm.fma.f32(float %40, float %40, float %42) #5
  %44 = fadd float %32, %41
  %45 = fsub float %44, %32
  %46 = fsub float %44, %45
  %47 = fsub float %32, %46
  %48 = fsub float %41, %45
  %49 = fadd float %48, %47
  %50 = fadd float %38, %43
  %51 = fadd float %50, %49
  %52 = fdiv float 1.000000e+00, %40
  %53 = fsub float -0.000000e+00, %40
  %54 = tail call float @llvm.fma.f32(float %53, float %52, float 1.000000e+00) #5
  %55 = fmul float %52, %54
  %56 = fmul float %52, %44
  %57 = fsub float -0.000000e+00, %56
  %58 = tail call float @llvm.fma.f32(float %44, float %52, float %57) #5
  %59 = tail call float @llvm.fma.f32(float %51, float %52, float %58) #5
  %60 = tail call float @llvm.fma.f32(float %44, float %55, float %59) #5
  %61 = fmul float %56, 5.000000e-01
  %62 = fmul float %60, 5.000000e-01
  %63 = fmul float %12, %61
  %64 = fsub float -0.000000e+00, %63
  %65 = tail call float @llvm.fma.f32(float %61, float %12, float %64) #5
  %66 = tail call float @llvm.fma.f32(float %62, float %12, float %65) #5
  %67 = fadd float %63, %66
  %68 = fcmp ord float %67, 0.000000e+00
  %69 = select i1 %68, float %67, float 0x7FF0000000000000
  %70 = fcmp une float %10, 0.000000e+00
  %71 = select i1 %70, float %69, float %12
  %72 = fcmp ord float %8, %5
  %73 = select i1 %72, float %71, float 0x7FF8000000000000
  %74 = fcmp une float %5, 0x7FF0000000000000
  %75 = fcmp une float %8, 0x7FF0000000000000
  %76 = and i1 %74, %75
  %77 = select i1 %76, float %73, float 0x7FF0000000000000
  ret float %77
}

; Function Attrs: nounwind uwtable
define float @Sleef_hypotf1_u35purecfma(float, float) local_unnamed_addr #2 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fdiv float %10, %12
  %14 = tail call float @llvm.fma.f32(float %13, float %13, float 1.000000e+00) #5
  %15 = tail call float @sqrtf(float %14) #5
  %16 = fmul float %12, %15
  %17 = fcmp une float %10, 0.000000e+00
  %18 = select i1 %17, float %16, float %12
  %19 = fcmp ord float %8, %5
  %20 = select i1 %19, float %18, float 0x7FF8000000000000
  %21 = fcmp une float %5, 0x7FF0000000000000
  %22 = fcmp une float %8, 0x7FF0000000000000
  %23 = and i1 %21, %22
  %24 = select i1 %23, float %20, float 0x7FF0000000000000
  ret float %24
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_nextafterf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fcmp une float %0, 0.000000e+00
  %4 = bitcast float %1 to i32
  %5 = and i32 %4, -2147483648
  %6 = bitcast i32 %5 to float
  %7 = select i1 %3, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = zext i32 %8 to i64
  %10 = ashr i32 %8, 31
  %11 = fcmp ole float %7, %1
  %12 = sext i1 %11 to i32
  %13 = xor i64 %9, 2147483648
  %14 = sub nsw i64 0, %13
  %15 = and i64 %14, 4294967295
  %16 = or i64 %15, 4294967296
  %17 = icmp eq i32 %10, %12
  %18 = select i1 %17, i64 %9, i64 %16
  %19 = fcmp oeq float %7, %1
  %20 = add nuw nsw i64 %18, 4294967295
  %21 = and i64 %18, 4294967296
  %22 = and i64 %20, 4294967295
  %23 = or i64 %22, %21
  %24 = select i1 %19, i64 %18, i64 %23
  %25 = xor i64 %24, 2147483648
  %26 = sub nsw i64 0, %25
  %27 = select i1 %17, i64 %24, i64 %26
  %28 = trunc i64 %27 to i32
  %29 = bitcast i32 %28 to float
  %30 = fcmp une float %29, 0.000000e+00
  %31 = fcmp oeq float %7, 0.000000e+00
  %32 = and i32 %8, -2147483648
  %33 = bitcast i32 %32 to float
  %34 = or i1 %31, %30
  %35 = select i1 %34, float %29, float %33
  %36 = fcmp une float %7, 0.000000e+00
  %37 = fcmp une float %1, 0.000000e+00
  %38 = or i1 %37, %36
  %39 = select i1 %38, float %35, float %1
  %40 = fcmp ord float %7, %1
  %41 = select i1 %40, float %39, float 0x7FF8000000000000
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_frfrexpf1_purecfma(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3810000000000000
  %6 = fmul float %0, 0x41D0000000000000
  %7 = select i1 %5, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = and i32 %8, -2139095041
  %10 = or i32 %9, 1056964608
  %11 = fcmp une float %7, 0x7FF0000000000000
  %12 = fcmp une float %7, 0xFFF0000000000000
  %13 = and i32 %8, -2147483648
  %14 = or i32 %13, 2139095040
  %15 = and i1 %12, %11
  %16 = select i1 %15, i32 %10, i32 %14
  %17 = bitcast i32 %16 to float
  %18 = fcmp une float %7, 0.000000e+00
  %19 = select i1 %18, float %17, float %7
  ret float %19
}

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @Sleef_expfrexpf1_purecfma(float) local_unnamed_addr #0 {
  ret i64 0
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_fmodf1_purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp uge float %8, 0x3810000000000000
  %10 = fmul float %5, 0x4180000000000000
  %11 = select i1 %9, float %5, float %10
  %12 = fmul float %8, 0x4180000000000000
  %13 = select i1 %9, float %8, float %12
  %14 = select i1 %9, float 1.000000e+00, float 0x3E60000000000000
  %15 = fdiv float 1.000000e+00, %13
  %16 = bitcast float %15 to i32
  %17 = add i32 %16, -1
  %18 = bitcast i32 %17 to float
  %19 = fcmp une float %15, 0.000000e+00
  %20 = select i1 %19, float %18, float 0.000000e+00
  %21 = fmul float %13, 3.000000e+00
  %22 = fmul float %13, 2.000000e+00
  %23 = fsub float -0.000000e+00, %13
  %24 = bitcast float %11 to i32
  %25 = add i32 %24, -1
  %26 = bitcast i32 %25 to float
  %27 = fcmp une float %11, 0.000000e+00
  %28 = select i1 %27, float %26, float 0.000000e+00
  %29 = fmul float %20, %28
  %30 = tail call float @llvm.trunc.f32(float %29) #5
  %31 = fcmp ogt float %21, %11
  %32 = fcmp oge float %11, %13
  %33 = and i1 %32, %31
  %34 = select i1 %33, float 2.000000e+00, float %30
  %35 = fcmp ogt float %22, %11
  %36 = and i1 %32, %35
  %37 = select i1 %36, float 1.000000e+00, float %34
  %38 = tail call float @llvm.trunc.f32(float %37) #5
  %39 = fmul float %38, %23
  %40 = fsub float -0.000000e+00, %39
  %41 = tail call float @llvm.fma.f32(float %38, float %23, float %40) #5
  %42 = fadd float %11, %39
  %43 = fsub float %42, %11
  %44 = fsub float %42, %43
  %45 = fsub float %11, %44
  %46 = fsub float %39, %43
  %47 = fadd float %46, %45
  %48 = fadd float %41, 0.000000e+00
  %49 = fadd float %48, %47
  %50 = fadd float %42, %49
  %51 = fsub float %42, %50
  %52 = fadd float %49, %51
  %53 = fcmp uge float %50, %13
  br i1 %53, label %54, label %85

; <label>:54:                                     ; preds = %2
  %55 = bitcast float %50 to i32
  %56 = add i32 %55, -1
  %57 = bitcast i32 %56 to float
  %58 = fcmp une float %50, 0.000000e+00
  %59 = select i1 %58, float %57, float 0.000000e+00
  %60 = fmul float %20, %59
  %61 = tail call float @llvm.trunc.f32(float %60) #5
  %62 = fcmp ogt float %21, %50
  %63 = fcmp oge float %50, %13
  %64 = and i1 %63, %62
  %65 = select i1 %64, float 2.000000e+00, float %61
  %66 = fcmp ogt float %22, %50
  %67 = and i1 %63, %66
  %68 = select i1 %67, float 1.000000e+00, float %65
  %69 = tail call float @llvm.trunc.f32(float %68) #5
  %70 = fmul float %69, %23
  %71 = fsub float -0.000000e+00, %70
  %72 = tail call float @llvm.fma.f32(float %69, float %23, float %71) #5
  %73 = fadd float %50, %70
  %74 = fsub float %73, %50
  %75 = fsub float %73, %74
  %76 = fsub float %50, %75
  %77 = fsub float %70, %74
  %78 = fadd float %77, %76
  %79 = fadd float %52, %72
  %80 = fadd float %79, %78
  %81 = fadd float %73, %80
  %82 = fsub float %73, %81
  %83 = fadd float %80, %82
  %84 = fcmp uge float %81, %13
  br i1 %84, label %100, label %85

; <label>:85:                                     ; preds = %255, %224, %193, %162, %131, %100, %54, %2
  %86 = phi float [ %50, %2 ], [ %81, %54 ], [ %127, %100 ], [ %158, %131 ], [ %189, %162 ], [ %220, %193 ], [ %251, %224 ], [ %282, %255 ]
  %87 = phi float [ %52, %2 ], [ %83, %54 ], [ %129, %100 ], [ %160, %131 ], [ %191, %162 ], [ %222, %193 ], [ %253, %224 ], [ %284, %255 ]
  %88 = fadd float %86, %87
  %89 = fmul float %14, %88
  %90 = fcmp une float %88, %13
  %91 = bitcast float %89 to i32
  %92 = select i1 %90, i32 %91, i32 0
  %93 = and i32 %3, -2147483648
  %94 = xor i32 %92, %93
  %95 = bitcast i32 %94 to float
  %96 = fcmp uge float %11, %13
  %97 = select i1 %96, float %95, float %0
  %98 = fcmp une float %13, 0.000000e+00
  %99 = select i1 %98, float %97, float 0x7FF8000000000000
  ret float %99

; <label>:100:                                    ; preds = %54
  %101 = bitcast float %81 to i32
  %102 = add i32 %101, -1
  %103 = bitcast i32 %102 to float
  %104 = fcmp une float %81, 0.000000e+00
  %105 = select i1 %104, float %103, float 0.000000e+00
  %106 = fmul float %20, %105
  %107 = tail call float @llvm.trunc.f32(float %106) #5
  %108 = fcmp ogt float %21, %81
  %109 = fcmp oge float %81, %13
  %110 = and i1 %109, %108
  %111 = select i1 %110, float 2.000000e+00, float %107
  %112 = fcmp ogt float %22, %81
  %113 = and i1 %109, %112
  %114 = select i1 %113, float 1.000000e+00, float %111
  %115 = tail call float @llvm.trunc.f32(float %114) #5
  %116 = fmul float %115, %23
  %117 = fsub float -0.000000e+00, %116
  %118 = tail call float @llvm.fma.f32(float %115, float %23, float %117) #5
  %119 = fadd float %81, %116
  %120 = fsub float %119, %81
  %121 = fsub float %119, %120
  %122 = fsub float %81, %121
  %123 = fsub float %116, %120
  %124 = fadd float %123, %122
  %125 = fadd float %83, %118
  %126 = fadd float %125, %124
  %127 = fadd float %119, %126
  %128 = fsub float %119, %127
  %129 = fadd float %126, %128
  %130 = fcmp uge float %127, %13
  br i1 %130, label %131, label %85

; <label>:131:                                    ; preds = %100
  %132 = bitcast float %127 to i32
  %133 = add i32 %132, -1
  %134 = bitcast i32 %133 to float
  %135 = fcmp une float %127, 0.000000e+00
  %136 = select i1 %135, float %134, float 0.000000e+00
  %137 = fmul float %20, %136
  %138 = tail call float @llvm.trunc.f32(float %137) #5
  %139 = fcmp ogt float %21, %127
  %140 = fcmp oge float %127, %13
  %141 = and i1 %140, %139
  %142 = select i1 %141, float 2.000000e+00, float %138
  %143 = fcmp ogt float %22, %127
  %144 = and i1 %140, %143
  %145 = select i1 %144, float 1.000000e+00, float %142
  %146 = tail call float @llvm.trunc.f32(float %145) #5
  %147 = fmul float %146, %23
  %148 = fsub float -0.000000e+00, %147
  %149 = tail call float @llvm.fma.f32(float %146, float %23, float %148) #5
  %150 = fadd float %127, %147
  %151 = fsub float %150, %127
  %152 = fsub float %150, %151
  %153 = fsub float %127, %152
  %154 = fsub float %147, %151
  %155 = fadd float %154, %153
  %156 = fadd float %129, %149
  %157 = fadd float %156, %155
  %158 = fadd float %150, %157
  %159 = fsub float %150, %158
  %160 = fadd float %157, %159
  %161 = fcmp uge float %158, %13
  br i1 %161, label %162, label %85

; <label>:162:                                    ; preds = %131
  %163 = bitcast float %158 to i32
  %164 = add i32 %163, -1
  %165 = bitcast i32 %164 to float
  %166 = fcmp une float %158, 0.000000e+00
  %167 = select i1 %166, float %165, float 0.000000e+00
  %168 = fmul float %20, %167
  %169 = tail call float @llvm.trunc.f32(float %168) #5
  %170 = fcmp ogt float %21, %158
  %171 = fcmp oge float %158, %13
  %172 = and i1 %171, %170
  %173 = select i1 %172, float 2.000000e+00, float %169
  %174 = fcmp ogt float %22, %158
  %175 = and i1 %171, %174
  %176 = select i1 %175, float 1.000000e+00, float %173
  %177 = tail call float @llvm.trunc.f32(float %176) #5
  %178 = fmul float %177, %23
  %179 = fsub float -0.000000e+00, %178
  %180 = tail call float @llvm.fma.f32(float %177, float %23, float %179) #5
  %181 = fadd float %158, %178
  %182 = fsub float %181, %158
  %183 = fsub float %181, %182
  %184 = fsub float %158, %183
  %185 = fsub float %178, %182
  %186 = fadd float %185, %184
  %187 = fadd float %160, %180
  %188 = fadd float %187, %186
  %189 = fadd float %181, %188
  %190 = fsub float %181, %189
  %191 = fadd float %188, %190
  %192 = fcmp uge float %189, %13
  br i1 %192, label %193, label %85

; <label>:193:                                    ; preds = %162
  %194 = bitcast float %189 to i32
  %195 = add i32 %194, -1
  %196 = bitcast i32 %195 to float
  %197 = fcmp une float %189, 0.000000e+00
  %198 = select i1 %197, float %196, float 0.000000e+00
  %199 = fmul float %20, %198
  %200 = tail call float @llvm.trunc.f32(float %199) #5
  %201 = fcmp ogt float %21, %189
  %202 = fcmp oge float %189, %13
  %203 = and i1 %202, %201
  %204 = select i1 %203, float 2.000000e+00, float %200
  %205 = fcmp ogt float %22, %189
  %206 = and i1 %202, %205
  %207 = select i1 %206, float 1.000000e+00, float %204
  %208 = tail call float @llvm.trunc.f32(float %207) #5
  %209 = fmul float %208, %23
  %210 = fsub float -0.000000e+00, %209
  %211 = tail call float @llvm.fma.f32(float %208, float %23, float %210) #5
  %212 = fadd float %189, %209
  %213 = fsub float %212, %189
  %214 = fsub float %212, %213
  %215 = fsub float %189, %214
  %216 = fsub float %209, %213
  %217 = fadd float %216, %215
  %218 = fadd float %191, %211
  %219 = fadd float %218, %217
  %220 = fadd float %212, %219
  %221 = fsub float %212, %220
  %222 = fadd float %219, %221
  %223 = fcmp uge float %220, %13
  br i1 %223, label %224, label %85

; <label>:224:                                    ; preds = %193
  %225 = bitcast float %220 to i32
  %226 = add i32 %225, -1
  %227 = bitcast i32 %226 to float
  %228 = fcmp une float %220, 0.000000e+00
  %229 = select i1 %228, float %227, float 0.000000e+00
  %230 = fmul float %20, %229
  %231 = tail call float @llvm.trunc.f32(float %230) #5
  %232 = fcmp ogt float %21, %220
  %233 = fcmp oge float %220, %13
  %234 = and i1 %233, %232
  %235 = select i1 %234, float 2.000000e+00, float %231
  %236 = fcmp ogt float %22, %220
  %237 = and i1 %233, %236
  %238 = select i1 %237, float 1.000000e+00, float %235
  %239 = tail call float @llvm.trunc.f32(float %238) #5
  %240 = fmul float %239, %23
  %241 = fsub float -0.000000e+00, %240
  %242 = tail call float @llvm.fma.f32(float %239, float %23, float %241) #5
  %243 = fadd float %220, %240
  %244 = fsub float %243, %220
  %245 = fsub float %243, %244
  %246 = fsub float %220, %245
  %247 = fsub float %240, %244
  %248 = fadd float %247, %246
  %249 = fadd float %222, %242
  %250 = fadd float %249, %248
  %251 = fadd float %243, %250
  %252 = fsub float %243, %251
  %253 = fadd float %250, %252
  %254 = fcmp uge float %251, %13
  br i1 %254, label %255, label %85

; <label>:255:                                    ; preds = %224
  %256 = bitcast float %251 to i32
  %257 = add i32 %256, -1
  %258 = bitcast i32 %257 to float
  %259 = fcmp une float %251, 0.000000e+00
  %260 = select i1 %259, float %258, float 0.000000e+00
  %261 = fmul float %20, %260
  %262 = tail call float @llvm.trunc.f32(float %261) #5
  %263 = fcmp ogt float %21, %251
  %264 = fcmp oge float %251, %13
  %265 = and i1 %264, %263
  %266 = select i1 %265, float 2.000000e+00, float %262
  %267 = fcmp ogt float %22, %251
  %268 = and i1 %264, %267
  %269 = select i1 %268, float 1.000000e+00, float %266
  %270 = tail call float @llvm.trunc.f32(float %269) #5
  %271 = fmul float %270, %23
  %272 = fsub float -0.000000e+00, %271
  %273 = tail call float @llvm.fma.f32(float %270, float %23, float %272) #5
  %274 = fadd float %251, %271
  %275 = fsub float %274, %251
  %276 = fsub float %274, %275
  %277 = fsub float %251, %276
  %278 = fsub float %271, %275
  %279 = fadd float %278, %277
  %280 = fadd float %253, %273
  %281 = fadd float %280, %279
  %282 = fadd float %274, %281
  %283 = fsub float %274, %282
  %284 = fadd float %281, %283
  br label %85
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_remainderf1_purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp uge float %8, 0x3820000000000000
  %10 = fmul float %5, 0x4180000000000000
  %11 = select i1 %9, float %5, float %10
  %12 = fmul float %8, 0x4180000000000000
  %13 = select i1 %9, float %8, float %12
  %14 = select i1 %9, float 1.000000e+00, float 0x3E60000000000000
  %15 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %11, i32 0
  %16 = fdiv float 1.000000e+00, %13
  %17 = fmul float %13, 1.500000e+00
  %18 = fmul float %13, 5.000000e-01
  %19 = fsub float -0.000000e+00, %13
  br label %20

; <label>:20:                                     ; preds = %2, %39
  %21 = phi <2 x float> [ %15, %2 ], [ %75, %39 ]
  %22 = phi i32 [ 0, %2 ], [ %76, %39 ]
  %23 = phi i32 [ 0, %2 ], [ %58, %39 ]
  %24 = extractelement <2 x float> %21, i32 0
  %25 = fmul float %16, %24
  %26 = tail call float @llvm.rint.f32(float %25) #5
  %27 = bitcast float %24 to i32
  %28 = and i32 %27, 2147483647
  %29 = bitcast i32 %28 to float
  %30 = fcmp ule float %17, %29
  %31 = select i1 %30, float %26, float 1.000000e+00
  %32 = fcmp ule float %18, %29
  %33 = fcmp une float %18, %29
  %34 = icmp eq i32 %23, -1
  %35 = or i1 %34, %33
  %36 = and i1 %32, %35
  %37 = select i1 %36, float %31, float 0.000000e+00
  %38 = fcmp une float %37, 0.000000e+00
  br i1 %38, label %39, label %78

; <label>:39:                                     ; preds = %20
  %40 = fmul float %37, %19
  %41 = fcmp une float %40, 0x7FF0000000000000
  %42 = fcmp une float %40, 0xFFF0000000000000
  %43 = and i32 %27, -2147483648
  %44 = xor i32 %43, -1082130432
  %45 = bitcast i32 %44 to float
  %46 = fadd float %37, %45
  %47 = and i1 %42, %41
  %48 = select i1 %47, float %37, float %46
  %49 = tail call float @llvm.trunc.f32(float %48) #5
  %50 = fptosi float %49 to i32
  %51 = shl i32 %50, 31
  %52 = ashr exact i32 %51, 31
  %53 = bitcast float %48 to i32
  %54 = and i32 %53, 2147483647
  %55 = bitcast i32 %54 to float
  %56 = fcmp olt float %55, 0x4170000000000000
  %57 = select i1 %56, i32 %52, i32 0
  %58 = xor i32 %57, %23
  %59 = fmul float %48, %19
  %60 = fsub float -0.000000e+00, %59
  %61 = tail call float @llvm.fma.f32(float %48, float %19, float %60) #5
  %62 = fadd float %24, %59
  %63 = fsub float %62, %24
  %64 = fsub float %62, %63
  %65 = fsub float %24, %64
  %66 = fsub float %59, %63
  %67 = fadd float %66, %65
  %68 = extractelement <2 x float> %21, i32 1
  %69 = fadd float %68, %61
  %70 = fadd float %69, %67
  %71 = fadd float %62, %70
  %72 = fsub float %62, %71
  %73 = fadd float %70, %72
  %74 = insertelement <2 x float> undef, float %71, i32 0
  %75 = insertelement <2 x float> %74, float %73, i32 1
  %76 = add nuw nsw i32 %22, 1
  %77 = icmp ult i32 %76, 8
  br i1 %77, label %20, label %78

; <label>:78:                                     ; preds = %39, %20
  %79 = phi float [ %24, %20 ], [ %71, %39 ]
  %80 = phi <2 x float> [ %21, %20 ], [ %75, %39 ]
  %81 = extractelement <2 x float> %80, i32 1
  %82 = fadd float %79, %81
  %83 = fmul float %14, %82
  %84 = bitcast float %83 to i32
  %85 = and i32 %3, -2147483648
  %86 = xor i32 %85, %84
  %87 = bitcast i32 %86 to float
  %88 = fcmp une float %1, 0x7FF0000000000000
  %89 = fcmp une float %1, 0xFFF0000000000000
  %90 = fcmp une float %0, 0x7FF0000000000000
  %91 = fcmp une float %0, 0xFFF0000000000000
  %92 = and i1 %91, %90
  %93 = select i1 %92, float %0, float 0x7FF8000000000000
  %94 = and i1 %89, %88
  %95 = select i1 %94, float %87, float %93
  %96 = fcmp une float %13, 0.000000e+00
  %97 = select i1 %96, float %95, float 0x7FF8000000000000
  ret float %97
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_sinpif1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = shl i64 %11, 62
  %13 = ashr i64 %12, 63
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %11 to i32
  %16 = and i32 %15, -2
  %17 = sitofp i32 %16 to float
  %18 = fsub float %2, %17
  %19 = fmul float %18, %18
  %20 = fsub float -0.000000e+00, %19
  %21 = tail call float @llvm.fma.f32(float %18, float %18, float %20) #5
  %22 = icmp eq i32 %14, 0
  %23 = select i1 %22, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %24 = select i1 %22, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %25 = tail call float @llvm.fma.f32(float %23, float %19, float %24) #5
  %26 = select i1 %22, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %27 = tail call float @llvm.fma.f32(float %25, float %19, float %26) #5
  %28 = fmul float %19, %27
  %29 = select i1 %22, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %30 = select i1 %22, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %31 = fadd float %29, %28
  %32 = fsub float %31, %28
  %33 = fsub float %31, %32
  %34 = fsub float %28, %33
  %35 = fsub float %29, %32
  %36 = fadd float %35, %34
  %37 = fadd float %30, %36
  %38 = fmul float %19, %31
  %39 = fsub float -0.000000e+00, %38
  %40 = tail call float @llvm.fma.f32(float %19, float %31, float %39) #5
  %41 = tail call float @llvm.fma.f32(float %21, float %31, float %40) #5
  %42 = tail call float @llvm.fma.f32(float %19, float %37, float %41) #5
  %43 = select i1 %22, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %44 = select i1 %22, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %45 = fadd float %43, %38
  %46 = fsub float %45, %38
  %47 = fsub float %45, %46
  %48 = fsub float %38, %47
  %49 = fsub float %43, %46
  %50 = fadd float %49, %48
  %51 = fadd float %44, %42
  %52 = fadd float %50, %51
  %53 = select i1 %22, float %18, float %19
  %54 = select i1 %22, float 0.000000e+00, float %21
  %55 = fmul float %53, %45
  %56 = fsub float -0.000000e+00, %55
  %57 = tail call float @llvm.fma.f32(float %45, float %53, float %56) #5
  %58 = tail call float @llvm.fma.f32(float %52, float %53, float %57) #5
  %59 = tail call float @llvm.fma.f32(float %45, float %54, float %58) #5
  %60 = fadd float %55, 1.000000e+00
  %61 = fsub float %60, %55
  %62 = fsub float %60, %61
  %63 = fsub float %55, %62
  %64 = fsub float 1.000000e+00, %61
  %65 = fadd float %64, %63
  %66 = fadd float %65, %59
  %67 = select i1 %22, float %55, float %60
  %68 = select i1 %22, float %59, float %66
  %69 = shl i64 %11, 61
  %70 = ashr i64 %69, 63
  %71 = bitcast float %67 to i32
  %72 = trunc i64 %70 to i32
  %73 = and i32 %72, -2147483648
  %74 = xor i32 %73, %71
  %75 = bitcast i32 %74 to float
  %76 = bitcast float %68 to i32
  %77 = xor i32 %73, %76
  %78 = bitcast i32 %77 to float
  %79 = fadd float %75, %78
  %80 = bitcast float %0 to i32
  %81 = icmp eq i32 %80, -2147483648
  %82 = and i32 %80, 2147483647
  %83 = bitcast i32 %82 to float
  %84 = fcmp ogt float %83, 8.000000e+06
  %85 = fcmp oeq float %0, 0x7FF0000000000000
  %86 = fcmp oeq float %0, 0xFFF0000000000000
  %87 = or i1 %85, %86
  %88 = select i1 %81, float -0.000000e+00, float %79
  %89 = select i1 %84, float 0.000000e+00, float %88
  %90 = select i1 %87, float 0xFFFFFFFFE0000000, float %89
  ret float %90
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_cospif1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, -2
  %14 = sitofp i32 %13 to float
  %15 = fsub float %2, %14
  %16 = fmul float %15, %15
  %17 = fsub float -0.000000e+00, %16
  %18 = tail call float @llvm.fma.f32(float %15, float %15, float %17) #5
  %19 = and i64 %11, 2
  %20 = icmp ne i64 %19, 0
  %21 = select i1 %20, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %22 = select i1 %20, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %23 = tail call float @llvm.fma.f32(float %21, float %16, float %22) #5
  %24 = select i1 %20, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %25 = tail call float @llvm.fma.f32(float %23, float %16, float %24) #5
  %26 = fmul float %16, %25
  %27 = select i1 %20, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %28 = select i1 %20, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %29 = fadd float %27, %26
  %30 = fsub float %29, %26
  %31 = fsub float %29, %30
  %32 = fsub float %26, %31
  %33 = fsub float %27, %30
  %34 = fadd float %33, %32
  %35 = fadd float %28, %34
  %36 = fmul float %16, %29
  %37 = fsub float -0.000000e+00, %36
  %38 = tail call float @llvm.fma.f32(float %16, float %29, float %37) #5
  %39 = tail call float @llvm.fma.f32(float %18, float %29, float %38) #5
  %40 = tail call float @llvm.fma.f32(float %16, float %35, float %39) #5
  %41 = select i1 %20, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %42 = select i1 %20, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %43 = fadd float %41, %36
  %44 = fsub float %43, %36
  %45 = fsub float %43, %44
  %46 = fsub float %36, %45
  %47 = fsub float %41, %44
  %48 = fadd float %47, %46
  %49 = fadd float %42, %40
  %50 = fadd float %48, %49
  %51 = select i1 %20, float %15, float %16
  %52 = select i1 %20, float 0.000000e+00, float %18
  %53 = fmul float %51, %43
  %54 = fsub float -0.000000e+00, %53
  %55 = tail call float @llvm.fma.f32(float %43, float %51, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %50, float %51, float %55) #5
  %57 = tail call float @llvm.fma.f32(float %43, float %52, float %56) #5
  %58 = fadd float %53, 1.000000e+00
  %59 = fsub float %58, %53
  %60 = fsub float %58, %59
  %61 = fsub float %53, %60
  %62 = fsub float 1.000000e+00, %59
  %63 = fadd float %62, %61
  %64 = fadd float %63, %57
  %65 = select i1 %20, float %53, float %58
  %66 = select i1 %20, float %57, float %64
  %67 = bitcast float %65 to i32
  %68 = shl i32 %13, 29
  %69 = add i32 %68, 1073741824
  %70 = and i32 %69, -2147483648
  %71 = xor i32 %70, %67
  %72 = bitcast i32 %71 to float
  %73 = bitcast float %66 to i32
  %74 = xor i32 %70, %73
  %75 = bitcast i32 %74 to float
  %76 = fadd float %72, %75
  %77 = bitcast float %0 to i32
  %78 = and i32 %77, 2147483647
  %79 = bitcast i32 %78 to float
  %80 = fcmp ule float %79, 8.000000e+06
  %81 = fcmp oeq float %0, 0x7FF0000000000000
  %82 = fcmp oeq float %0, 0xFFF0000000000000
  %83 = or i1 %81, %82
  %84 = select i1 %80, float %76, float 1.000000e+00
  %85 = select i1 %83, float 0xFFFFFFFFE0000000, float %84
  ret float %85
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_tgammaf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call fastcc { <2 x float>, <2 x float> } @gammafk(float %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = extractelement <2 x float> %3, i32 1
  %7 = fadd float %5, %6
  %8 = fmul float %7, 0x3FF7154760000000
  %9 = tail call float @llvm.rint.f32(float %8) #5
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = insertelement <2 x float> undef, float %11, i32 0
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, <float 0xBFE62E4000000000, float 0xBEB7F7D1C0000000>
  %15 = extractelement <2 x float> %14, i32 0
  %16 = fadd float %5, %15
  %17 = extractelement <2 x float> %14, i32 1
  %18 = fadd float %17, %16
  %19 = insertelement <2 x float> undef, float %16, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  %21 = insertelement <2 x float> undef, float %5, i32 0
  %22 = insertelement <2 x float> %21, float %16, i32 1
  %23 = fsub <2 x float> %20, %22
  %24 = fsub <2 x float> %20, %23
  %25 = fsub <2 x float> %22, %24
  %26 = fsub <2 x float> %14, %23
  %27 = fadd <2 x float> %26, %25
  %28 = extractelement <2 x float> %27, i32 0
  %29 = fadd float %6, %28
  %30 = extractelement <2 x float> %27, i32 1
  %31 = fadd float %29, %30
  %32 = tail call float @llvm.fma.f32(float %18, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %33 = tail call float @llvm.fma.f32(float %32, float %18, float 0x3F811121A0000000) #5
  %34 = tail call float @llvm.fma.f32(float %33, float %18, float 0x3FA5554B80000000) #5
  %35 = fmul float %18, %34
  %36 = fsub float -0.000000e+00, %35
  %37 = tail call float @llvm.fma.f32(float %18, float %34, float %36) #5
  %38 = tail call float @llvm.fma.f32(float %31, float %34, float %37) #5
  %39 = fadd float %35, 0x3FC5555540000000
  %40 = fsub float %39, %35
  %41 = fsub float %39, %40
  %42 = fsub float %35, %41
  %43 = fsub float 0x3FC5555540000000, %40
  %44 = fadd float %43, %42
  %45 = fadd float %38, %44
  %46 = fmul float %18, %39
  %47 = fsub float -0.000000e+00, %46
  %48 = tail call float @llvm.fma.f32(float %18, float %39, float %47) #5
  %49 = tail call float @llvm.fma.f32(float %31, float %39, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %18, float %45, float %49) #5
  %51 = fadd float %46, 5.000000e-01
  %52 = fsub float %51, %46
  %53 = fsub float %51, %52
  %54 = fsub float %46, %53
  %55 = fsub float 5.000000e-01, %52
  %56 = fadd float %55, %54
  %57 = fadd float %50, %56
  %58 = fmul float %18, %18
  %59 = fadd float %18, %18
  %60 = fsub float -0.000000e+00, %58
  %61 = tail call float @llvm.fma.f32(float %18, float %18, float %60) #5
  %62 = tail call float @llvm.fma.f32(float %59, float %31, float %61) #5
  %63 = fmul float %58, %51
  %64 = fsub float -0.000000e+00, %63
  %65 = tail call float @llvm.fma.f32(float %58, float %51, float %64) #5
  %66 = tail call float @llvm.fma.f32(float %62, float %51, float %65) #5
  %67 = tail call float @llvm.fma.f32(float %58, float %57, float %66) #5
  %68 = fadd float %18, %63
  %69 = fsub float %68, %18
  %70 = fsub float %68, %69
  %71 = fsub float %18, %70
  %72 = fsub float %63, %69
  %73 = fadd float %72, %71
  %74 = fadd float %31, %67
  %75 = fadd float %73, %74
  %76 = fadd float %68, 1.000000e+00
  %77 = fsub float 1.000000e+00, %76
  %78 = fadd float %68, %77
  %79 = fadd float %78, %75
  %80 = ashr i32 %10, 1
  %81 = shl i32 %80, 23
  %82 = add i32 %81, 1065353216
  %83 = bitcast i32 %82 to float
  %84 = fmul float %76, %83
  %85 = sub i32 %10, %80
  %86 = shl i32 %85, 23
  %87 = add i32 %86, 1065353216
  %88 = bitcast i32 %87 to float
  %89 = fmul float %84, %88
  %90 = fmul float %79, %83
  %91 = fmul float %90, %88
  %92 = fcmp uge float %5, -1.040000e+02
  %93 = bitcast float %89 to i32
  %94 = sext i1 %92 to i32
  %95 = and i32 %93, %94
  %96 = bitcast i32 %95 to float
  %97 = bitcast float %91 to i32
  %98 = and i32 %97, %94
  %99 = bitcast i32 %98 to float
  %100 = extractelement <2 x float> %4, i32 0
  %101 = fmul float %100, %96
  %102 = extractelement <2 x float> %4, i32 1
  %103 = fsub float -0.000000e+00, %101
  %104 = tail call float @llvm.fma.f32(float %96, float %100, float %103) #5
  %105 = tail call float @llvm.fma.f32(float %99, float %100, float %104) #5
  %106 = tail call float @llvm.fma.f32(float %96, float %102, float %105) #5
  %107 = fadd float %101, %106
  %108 = fcmp oeq float %0, 0xFFF0000000000000
  %109 = fcmp olt float %0, 0.000000e+00
  %110 = tail call float @llvm.trunc.f32(float %0) #5
  %111 = fcmp oeq float %110, %0
  %112 = and i1 %109, %111
  %113 = or i1 %108, %112
  %114 = fcmp oeq float %0, 0x7FF0000000000000
  %115 = or i1 %114, %108
  %116 = fcmp uno float %0, 0.000000e+00
  %117 = or i1 %116, %115
  %118 = xor i1 %117, true
  %119 = and i1 %109, %118
  %120 = fcmp uno float %107, 0.000000e+00
  %121 = and i1 %119, %120
  %122 = or i1 %113, %121
  %123 = select i1 %122, float 0x7FF8000000000000, float %107
  %124 = or i1 %114, %118
  %125 = fcmp oge float %0, 0xB810000000000000
  %126 = and i1 %125, %124
  %127 = fcmp oeq float %0, 0.000000e+00
  %128 = fcmp ogt float %0, 3.600000e+01
  %129 = or i1 %128, %127
  %130 = fcmp uno float %123, 0.000000e+00
  %131 = or i1 %129, %130
  %132 = and i1 %126, %131
  %133 = bitcast float %0 to i32
  %134 = and i32 %133, -2147483648
  %135 = or i32 %134, 2139095040
  %136 = bitcast i32 %135 to float
  %137 = select i1 %132, float %136, float %123
  ret float %137
}

; Function Attrs: nounwind readnone uwtable
define internal fastcc { <2 x float>, <2 x float> } @gammafk(float) unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x39B4484C00000000
  %6 = fcmp olt float %0, 5.000000e-01
  %7 = fsub float -0.000000e+00, %0
  %8 = fsub float 1.000000e+00, %0
  %9 = fadd float %8, -1.000000e+00
  %10 = fsub float %8, %9
  %11 = fsub float 1.000000e+00, %10
  %12 = fsub float %7, %9
  %13 = fadd float %12, %11
  %14 = select i1 %6, float %8, float %0
  %15 = select i1 %5, float %14, float 0.000000e+00
  %16 = and i1 %6, %5
  %17 = select i1 %16, float %13, float 0.000000e+00
  %18 = fcmp ult float %15, 5.000000e-01
  %19 = fcmp ugt float %15, 0x3FF3333340000000
  %20 = fcmp oge float %15, 0x4002666660000000
  %21 = fadd float %15, 1.000000e+00
  %22 = fsub float %21, %15
  %23 = fsub float %21, %22
  %24 = fsub float %15, %23
  %25 = fsub float 1.000000e+00, %22
  %26 = fadd float %25, %24
  %27 = fadd float %17, %26
  %28 = fmul float %15, %21
  %29 = fsub float -0.000000e+00, %28
  %30 = tail call float @llvm.fma.f32(float %21, float %15, float %29) #5
  %31 = tail call float @llvm.fma.f32(float %27, float %15, float %30) #5
  %32 = tail call float @llvm.fma.f32(float %21, float %17, float %31) #5
  %33 = fadd float %28, %32
  %34 = fsub float %28, %33
  %35 = fadd float %32, %34
  %36 = fadd float %15, 2.000000e+00
  %37 = fsub float %36, %15
  %38 = fsub float %36, %37
  %39 = fsub float %15, %38
  %40 = fsub float 2.000000e+00, %37
  %41 = fadd float %40, %39
  %42 = fadd float %17, %41
  %43 = fmul float %36, %33
  %44 = fsub float -0.000000e+00, %43
  %45 = tail call float @llvm.fma.f32(float %36, float %33, float %44) #5
  %46 = tail call float @llvm.fma.f32(float %42, float %33, float %45) #5
  %47 = tail call float @llvm.fma.f32(float %36, float %35, float %46) #5
  %48 = fadd float %43, %47
  %49 = fsub float %43, %48
  %50 = fadd float %47, %49
  %51 = fcmp ole float %15, 7.000000e+00
  %52 = and i1 %51, %20
  %53 = select i1 %52, float %48, float 1.000000e+00
  %54 = select i1 %52, float %50, float 0.000000e+00
  %55 = fadd float %15, 3.000000e+00
  %56 = fsub float %55, %15
  %57 = fsub float %55, %56
  %58 = fsub float %15, %57
  %59 = fsub float 3.000000e+00, %56
  %60 = fadd float %59, %58
  %61 = fadd float %17, %60
  %62 = select i1 %52, float %55, float %15
  %63 = select i1 %52, float %61, float %17
  %64 = insertelement <2 x float> undef, float %62, i32 0
  %65 = insertelement <2 x float> %64, float %63, i32 1
  %66 = fdiv float 1.000000e+00, %62
  %67 = or i1 %18, %19
  %68 = select i1 %67, float -2.000000e+00, float -1.000000e+00
  %69 = fadd float %62, %68
  %70 = fsub float %69, %62
  %71 = fsub float %69, %70
  %72 = fsub float %62, %71
  %73 = fsub float %68, %70
  %74 = fadd float %73, %72
  %75 = fadd float %63, %74
  %76 = fadd float %69, %75
  %77 = select i1 %20, float %66, float %76
  %78 = select i1 %67, float 0x3F1CE6AEA0000000, float 0x3FEE314800000000
  %79 = select i1 %20, float 0x3F4B8239C0000000, float %78
  %80 = select i1 %67, float 0x3F156418C0000000, float 0x3FEBBE8420000000
  %81 = select i1 %20, float 0xBF0B1D75E0000000, float %80
  %82 = tail call float @llvm.fma.f32(float %79, float %77, float %81) #5
  %83 = select i1 %67, float 0x3F2408B0C0000000, float 0x3FDEE411C0000000
  %84 = select i1 %20, float 0xBF436773C0000000, float %83
  %85 = tail call float @llvm.fma.f32(float %82, float %77, float %84) #5
  %86 = select i1 %67, float 0xBF2EDE4CA0000000, float 0xBFB6AB4C40000000
  %87 = select i1 %20, float 0x3F12476040000000, float %86
  %88 = tail call float @llvm.fma.f32(float %85, float %77, float %87) #5
  %89 = select i1 %67, float 0x3F4042A160000000, float 0x3FB9F43480000000
  %90 = select i1 %20, float 0x3F49B0FF60000000, float %89
  %91 = tail call float @llvm.fma.f32(float %88, float %77, float %90) #5
  %92 = select i1 %67, float 0xBF538DDA00000000, float 0xBFC31D9A40000000
  %93 = select i1 %20, float 0xBF2E13CE40000000, float %92
  %94 = tail call float @llvm.fma.f32(float %91, float %77, float %93) #5
  %95 = select i1 %67, float 0x3F67B01FA0000000, float 0x3FC5BA65E0000000
  %96 = select i1 %20, float 0xBF65F72680000000, float %95
  %97 = tail call float @llvm.fma.f32(float %94, float %77, float %96) #5
  %98 = select i1 %67, float 0xBF7E403520000000, float 0xBFCA8704E0000000
  %99 = select i1 %20, float 0x3F6C71C720000000, float %98
  %100 = tail call float @llvm.fma.f32(float %97, float %77, float %99) #5
  %101 = select i1 %67, float 0x3F95132020000000, float 0x3FD1514D20000000
  %102 = select i1 %20, float 0x3FB5555560000000, float %101
  %103 = tail call float @llvm.fma.f32(float %100, float %77, float %102) #5
  %104 = fadd float %62, -5.000000e-01
  %105 = fsub float %104, %62
  %106 = fsub float %104, %105
  %107 = fsub float %62, %106
  %108 = fsub float -5.000000e-01, %105
  %109 = fadd float %108, %107
  %110 = fadd float %63, %109
  %111 = fmul float %62, 0x3FF5555560000000
  %112 = fcmp uge float %111, 0x3BF0000000000000
  %113 = fmul float %111, 0x43F0000000000000
  %114 = select i1 %112, float %111, float %113
  %115 = bitcast float %114 to i32
  %116 = lshr i32 %115, 23
  %117 = and i32 %116, 255
  %118 = select i1 %112, i32 127, i32 191
  %119 = sub nsw i32 %117, %118
  %120 = shl i32 %119, 23
  %121 = sub i32 1065353216, %120
  %122 = bitcast i32 %121 to float
  %123 = fmul float %62, %122
  %124 = fmul float %63, %122
  %125 = fadd float %123, -1.000000e+00
  %126 = fsub float %125, %123
  %127 = fsub float %125, %126
  %128 = fsub float %123, %127
  %129 = fsub float -1.000000e+00, %126
  %130 = fadd float %129, %128
  %131 = fadd float %124, %130
  %132 = fadd float %123, 1.000000e+00
  %133 = fsub float %132, %123
  %134 = fsub float %132, %133
  %135 = fsub float %123, %134
  %136 = fsub float 1.000000e+00, %133
  %137 = fadd float %136, %135
  %138 = fadd float %124, %137
  %139 = fdiv float 1.000000e+00, %132
  %140 = fmul float %125, %139
  %141 = fsub float -0.000000e+00, %140
  %142 = tail call float @llvm.fma.f32(float %139, float %125, float %141) #5
  %143 = fsub float -0.000000e+00, %132
  %144 = tail call float @llvm.fma.f32(float %143, float %139, float 1.000000e+00) #5
  %145 = fsub float -0.000000e+00, %138
  %146 = tail call float @llvm.fma.f32(float %145, float %139, float %144) #5
  %147 = tail call float @llvm.fma.f32(float %131, float %139, float %142) #5
  %148 = tail call float @llvm.fma.f32(float %140, float %146, float %147) #5
  %149 = fmul float %140, %140
  %150 = fadd float %140, %140
  %151 = fsub float -0.000000e+00, %149
  %152 = tail call float @llvm.fma.f32(float %140, float %140, float %151) #5
  %153 = tail call float @llvm.fma.f32(float %150, float %148, float %152) #5
  %154 = tail call float @llvm.fma.f32(float %149, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %155 = tail call float @llvm.fma.f32(float %154, float %149, float 0x3FD999B240000000) #5
  %156 = tail call float @llvm.fma.f32(float %155, float %149, float 0x3FE5555560000000) #5
  %157 = sitofp i32 %119 to float
  %158 = fmul float %157, 0x3FE62E4300000000
  %159 = fsub float -0.000000e+00, %158
  %160 = tail call float @llvm.fma.f32(float %157, float 0x3FE62E4300000000, float %159) #5
  %161 = tail call float @llvm.fma.f32(float %157, float 0xBE205C6100000000, float %160) #5
  %162 = fmul float %140, 2.000000e+00
  %163 = fmul float %148, 2.000000e+00
  %164 = fadd float %158, %162
  %165 = fsub float %158, %164
  %166 = fadd float %162, %165
  %167 = fadd float %161, %166
  %168 = fadd float %167, %163
  %169 = fmul float %140, %149
  %170 = fsub float -0.000000e+00, %169
  %171 = tail call float @llvm.fma.f32(float %149, float %140, float %170) #5
  %172 = tail call float @llvm.fma.f32(float %153, float %140, float %171) #5
  %173 = tail call float @llvm.fma.f32(float %149, float %148, float %172) #5
  %174 = fmul float %169, %156
  %175 = fsub float -0.000000e+00, %174
  %176 = tail call float @llvm.fma.f32(float %169, float %156, float %175) #5
  %177 = tail call float @llvm.fma.f32(float %173, float %156, float %176) #5
  %178 = fadd float %164, %174
  %179 = fsub float %164, %178
  %180 = fadd float %174, %179
  %181 = fadd float %168, %180
  %182 = fadd float %177, %181
  %183 = fmul float %104, %178
  %184 = fsub float -0.000000e+00, %183
  %185 = tail call float @llvm.fma.f32(float %104, float %178, float %184) #5
  %186 = tail call float @llvm.fma.f32(float %110, float %178, float %185) #5
  %187 = tail call float @llvm.fma.f32(float %104, float %182, float %186) #5
  %188 = fsub float -0.000000e+00, %62
  %189 = fsub float %183, %62
  %190 = fsub float %189, %183
  %191 = fsub float %189, %190
  %192 = fsub float %183, %191
  %193 = fsub float %188, %190
  %194 = fadd float %193, %192
  %195 = fsub float %187, %63
  %196 = fadd float %195, %194
  %197 = fadd float %189, 0x3FED67F1C0000000
  %198 = fsub float %197, %189
  %199 = fsub float %197, %198
  %200 = fsub float %189, %199
  %201 = fsub float 0x3FED67F1C0000000, %198
  %202 = fadd float %201, %200
  %203 = fadd float %196, 0x3E50C97D60000000
  %204 = fadd float %202, %203
  %205 = fmul float %77, %103
  %206 = fsub float -0.000000e+00, %205
  %207 = tail call float @llvm.fma.f32(float %103, float %77, float %206) #5
  %208 = select i1 %67, float 0xBFB13E0020000000, float 0xBFD9A4D920000000
  %209 = fadd float %208, %205
  %210 = fsub float %209, %205
  %211 = fsub float %209, %210
  %212 = fsub float %205, %211
  %213 = fsub float %208, %210
  %214 = fadd float %213, %212
  %215 = fadd float %207, %214
  %216 = fmul float %77, %209
  %217 = fsub float -0.000000e+00, %216
  %218 = tail call float @llvm.fma.f32(float %209, float %77, float %217) #5
  %219 = tail call float @llvm.fma.f32(float %215, float %77, float %218) #5
  %220 = select i1 %67, float 0x3FD4A34CC0000000, float 0x3FEA51A640000000
  %221 = fadd float %220, %216
  %222 = fsub float %221, %216
  %223 = fsub float %221, %222
  %224 = fsub float %216, %223
  %225 = fsub float %220, %222
  %226 = fadd float %225, %224
  %227 = fadd float %219, %226
  %228 = fmul float %77, %221
  %229 = fsub float -0.000000e+00, %228
  %230 = tail call float @llvm.fma.f32(float %221, float %77, float %229) #5
  %231 = tail call float @llvm.fma.f32(float %227, float %77, float %230) #5
  %232 = select i1 %67, float 0x3FDB0EE600000000, float 0xBFE2788D00000000
  %233 = fadd float %232, %228
  %234 = fsub float %233, %228
  %235 = fsub float %233, %234
  %236 = fsub float %228, %235
  %237 = fsub float %232, %234
  %238 = fadd float %237, %236
  %239 = fadd float %231, %238
  %240 = fmul float %77, %233
  %241 = fsub float -0.000000e+00, %240
  %242 = tail call float @llvm.fma.f32(float %233, float %77, float %241) #5
  %243 = tail call float @llvm.fma.f32(float %239, float %77, float %242) #5
  %244 = select i1 %20, float %197, float %240
  %245 = select i1 %20, float %204, float %243
  %246 = fadd float %205, 1.000000e+00
  %247 = fsub float %246, %205
  %248 = fsub float %246, %247
  %249 = fsub float %205, %248
  %250 = fsub float 1.000000e+00, %247
  %251 = fadd float %250, %249
  %252 = fadd float %207, %251
  %253 = select i1 %20, float %246, float 1.000000e+00
  %254 = select i1 %20, float %252, float 0.000000e+00
  %255 = fsub float -0.000000e+00, %244
  %256 = fsub float 0x3FF250D040000000, %244
  %257 = fadd float %256, 0xBFF250D040000000
  %258 = fsub float %256, %257
  %259 = fsub float 0x3FF250D040000000, %258
  %260 = fsub float %255, %257
  %261 = fadd float %260, %259
  %262 = fsub float 0x3E61CF4380000000, %245
  %263 = fadd float %261, %262
  %264 = select i1 %6, float %256, float %244
  %265 = select i1 %6, float %263, float %245
  %266 = select i1 %5, float %264, float 0x4044CB5EC0000000
  %267 = select i1 %5, float %265, float 0x3EBE152CA0000000
  %268 = insertelement <2 x float> undef, float %266, i32 0
  %269 = insertelement <2 x float> %268, float %267, i32 1
  %270 = select i1 %6, float %53, float %253
  %271 = select i1 %6, float %54, float %254
  %272 = select i1 %5, float %270, float 1.000000e+00
  %273 = select i1 %5, float %271, float 0.000000e+00
  br i1 %6, label %274, label %365

; <label>:274:                                    ; preds = %1
  %275 = fmul float %0, 0x3F30000000000000
  %276 = tail call float @llvm.trunc.f32(float %275) #5
  %277 = fptosi float %276 to i32
  %278 = sitofp i32 %277 to float
  %279 = fmul float %278, 4.096000e+03
  %280 = fsub float %0, %279
  %281 = fmul float %280, 4.000000e+00
  %282 = tail call float @llvm.trunc.f32(float %281) #5
  %283 = fptosi float %282 to i32
  %284 = sext i32 %283 to i64
  %285 = lshr i32 %283, 31
  %286 = zext i32 %285 to i64
  %287 = shl nuw nsw i64 %286, 32
  %288 = or i64 %287, %286
  %289 = xor i64 %288, 1
  %290 = add nsw i64 %289, %284
  %291 = shl i64 %290, 62
  %292 = ashr i64 %291, 63
  %293 = trunc i64 %292 to i32
  %294 = trunc i64 %290 to i32
  %295 = and i32 %294, -2
  %296 = sitofp i32 %295 to float
  %297 = fsub float %281, %296
  %298 = fmul float %297, %297
  %299 = fsub float -0.000000e+00, %298
  %300 = tail call float @llvm.fma.f32(float %297, float %297, float %299) #5
  %301 = icmp eq i32 %293, 0
  %302 = select i1 %301, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %303 = select i1 %301, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %304 = tail call float @llvm.fma.f32(float %302, float %298, float %303) #5
  %305 = select i1 %301, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %306 = tail call float @llvm.fma.f32(float %304, float %298, float %305) #5
  %307 = fmul float %298, %306
  %308 = select i1 %301, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %309 = select i1 %301, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %310 = fadd float %308, %307
  %311 = fsub float %310, %307
  %312 = fsub float %310, %311
  %313 = fsub float %307, %312
  %314 = fsub float %308, %311
  %315 = fadd float %314, %313
  %316 = fadd float %309, %315
  %317 = fmul float %298, %310
  %318 = fsub float -0.000000e+00, %317
  %319 = tail call float @llvm.fma.f32(float %298, float %310, float %318) #5
  %320 = tail call float @llvm.fma.f32(float %300, float %310, float %319) #5
  %321 = tail call float @llvm.fma.f32(float %298, float %316, float %320) #5
  %322 = select i1 %301, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %323 = select i1 %301, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %324 = fadd float %322, %317
  %325 = fsub float %324, %317
  %326 = fsub float %324, %325
  %327 = fsub float %317, %326
  %328 = fsub float %322, %325
  %329 = fadd float %328, %327
  %330 = fadd float %323, %321
  %331 = fadd float %329, %330
  %332 = select i1 %301, float %297, float %298
  %333 = select i1 %301, float 0.000000e+00, float %300
  %334 = fmul float %332, %324
  %335 = fsub float -0.000000e+00, %334
  %336 = tail call float @llvm.fma.f32(float %324, float %332, float %335) #5
  %337 = tail call float @llvm.fma.f32(float %331, float %332, float %336) #5
  %338 = tail call float @llvm.fma.f32(float %324, float %333, float %337) #5
  %339 = fadd float %334, 1.000000e+00
  %340 = fsub float %339, %334
  %341 = fsub float %339, %340
  %342 = fsub float %334, %341
  %343 = fsub float 1.000000e+00, %340
  %344 = fadd float %343, %342
  %345 = fadd float %344, %338
  %346 = select i1 %301, float %334, float %339
  %347 = select i1 %301, float %338, float %345
  %348 = shl i64 %290, 61
  %349 = ashr i64 %348, 63
  %350 = bitcast float %346 to i32
  %351 = trunc i64 %349 to i32
  %352 = and i32 %351, -2147483648
  %353 = xor i32 %352, %350
  %354 = bitcast i32 %353 to float
  %355 = bitcast float %347 to i32
  %356 = xor i32 %352, %355
  %357 = bitcast i32 %356 to float
  %358 = fmul float %253, %354
  %359 = fsub float -0.000000e+00, %358
  %360 = tail call float @llvm.fma.f32(float %253, float %354, float %359) #5
  %361 = tail call float @llvm.fma.f32(float %254, float %354, float %360) #5
  %362 = tail call float @llvm.fma.f32(float %253, float %357, float %361) #5
  %363 = insertelement <2 x float> undef, float %358, i32 0
  %364 = insertelement <2 x float> %363, float %362, i32 1
  br label %365

; <label>:365:                                    ; preds = %1, %274
  %366 = phi <2 x float> [ %65, %1 ], [ %364, %274 ]
  %367 = fmul float %0, 0x43B0000000000000
  %368 = extractelement <2 x float> %366, i32 0
  %369 = select i1 %6, float %368, float %53
  %370 = extractelement <2 x float> %366, i32 1
  %371 = select i1 %6, float %370, float %54
  %372 = select i1 %5, float %369, float %367
  %373 = fdiv float 1.000000e+00, %372
  %374 = fmul float %272, %373
  %375 = fsub float -0.000000e+00, %374
  %376 = tail call float @llvm.fma.f32(float %373, float %272, float %375) #5
  %377 = fsub float -0.000000e+00, %372
  %378 = tail call float @llvm.fma.f32(float %377, float %373, float 1.000000e+00) #5
  %379 = fsub float -0.000000e+00, %371
  %380 = select i1 %5, float %379, float -0.000000e+00
  %381 = tail call float @llvm.fma.f32(float %380, float %373, float %378) #5
  %382 = tail call float @llvm.fma.f32(float %273, float %373, float %376) #5
  %383 = tail call float @llvm.fma.f32(float %374, float %381, float %382) #5
  %384 = insertelement <2 x float> undef, float %374, i32 0
  %385 = insertelement <2 x float> %384, float %383, i32 1
  %386 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %269, 0
  %387 = insertvalue { <2 x float>, <2 x float> } %386, <2 x float> %385, 1
  ret { <2 x float>, <2 x float> } %387
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_lgammaf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call fastcc { <2 x float>, <2 x float> } @gammafk(float %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = bitcast <2 x float> %4 to <2 x i32>
  %6 = extractelement <2 x i32> %5, i32 0
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = extractelement <2 x i32> %5, i32 1
  %10 = and i32 %6, -2147483648
  %11 = xor i32 %10, %9
  %12 = bitcast i32 %11 to float
  %13 = fmul float %8, 0x3FF5555560000000
  %14 = fcmp uge float %13, 0x3BF0000000000000
  %15 = fmul float %13, 0x43F0000000000000
  %16 = select i1 %14, float %13, float %15
  %17 = bitcast float %16 to i32
  %18 = lshr i32 %17, 23
  %19 = and i32 %18, 255
  %20 = select i1 %14, i32 127, i32 191
  %21 = sub nsw i32 %19, %20
  %22 = shl i32 %21, 23
  %23 = sub i32 1065353216, %22
  %24 = bitcast i32 %23 to float
  %25 = fmul float %8, %24
  %26 = fmul float %12, %24
  %27 = fadd float %25, -1.000000e+00
  %28 = fsub float %27, %25
  %29 = fsub float %27, %28
  %30 = fsub float %25, %29
  %31 = fsub float -1.000000e+00, %28
  %32 = fadd float %31, %30
  %33 = fadd float %26, %32
  %34 = fadd float %25, 1.000000e+00
  %35 = fsub float %34, %25
  %36 = fsub float %34, %35
  %37 = fsub float %25, %36
  %38 = fsub float 1.000000e+00, %35
  %39 = fadd float %38, %37
  %40 = fadd float %26, %39
  %41 = fdiv float 1.000000e+00, %34
  %42 = fmul float %27, %41
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %41, float %27, float %43) #5
  %45 = fsub float -0.000000e+00, %34
  %46 = tail call float @llvm.fma.f32(float %45, float %41, float 1.000000e+00) #5
  %47 = fsub float -0.000000e+00, %40
  %48 = tail call float @llvm.fma.f32(float %47, float %41, float %46) #5
  %49 = tail call float @llvm.fma.f32(float %33, float %41, float %44) #5
  %50 = tail call float @llvm.fma.f32(float %42, float %48, float %49) #5
  %51 = fmul float %42, %42
  %52 = fadd float %42, %42
  %53 = fsub float -0.000000e+00, %51
  %54 = tail call float @llvm.fma.f32(float %42, float %42, float %53) #5
  %55 = tail call float @llvm.fma.f32(float %52, float %50, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %51, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %57 = tail call float @llvm.fma.f32(float %56, float %51, float 0x3FD999B240000000) #5
  %58 = tail call float @llvm.fma.f32(float %57, float %51, float 0x3FE5555560000000) #5
  %59 = sitofp i32 %21 to float
  %60 = fmul float %59, 0x3FE62E4300000000
  %61 = fsub float -0.000000e+00, %60
  %62 = tail call float @llvm.fma.f32(float %59, float 0x3FE62E4300000000, float %61) #5
  %63 = tail call float @llvm.fma.f32(float %59, float 0xBE205C6100000000, float %62) #5
  %64 = fmul float %42, 2.000000e+00
  %65 = fmul float %50, 2.000000e+00
  %66 = fadd float %60, %64
  %67 = fsub float %60, %66
  %68 = fadd float %64, %67
  %69 = fadd float %63, %68
  %70 = fadd float %69, %65
  %71 = fmul float %42, %51
  %72 = fsub float -0.000000e+00, %71
  %73 = tail call float @llvm.fma.f32(float %51, float %42, float %72) #5
  %74 = tail call float @llvm.fma.f32(float %55, float %42, float %73) #5
  %75 = tail call float @llvm.fma.f32(float %51, float %50, float %74) #5
  %76 = fmul float %71, %58
  %77 = fsub float -0.000000e+00, %76
  %78 = tail call float @llvm.fma.f32(float %71, float %58, float %77) #5
  %79 = tail call float @llvm.fma.f32(float %75, float %58, float %78) #5
  %80 = fadd float %66, %76
  %81 = fsub float %66, %80
  %82 = fadd float %76, %81
  %83 = fadd float %70, %82
  %84 = fadd float %79, %83
  %85 = insertelement <2 x float> undef, float %80, i32 0
  %86 = insertelement <2 x float> %85, float %84, i32 1
  %87 = fadd <2 x float> %3, %86
  %88 = extractelement <2 x float> %87, i32 0
  %89 = extractelement <2 x float> %3, i32 0
  %90 = fsub float %88, %89
  %91 = fsub float %88, %90
  %92 = fsub float %89, %91
  %93 = fsub float %80, %90
  %94 = fadd float %93, %92
  %95 = extractelement <2 x float> %87, i32 1
  %96 = fadd float %95, %94
  %97 = fadd float %88, %96
  %98 = fcmp oeq float %0, 0x7FF0000000000000
  %99 = fcmp oeq float %0, 0xFFF0000000000000
  %100 = or i1 %98, %99
  %101 = fcmp ole float %0, 0.000000e+00
  %102 = tail call float @llvm.trunc.f32(float %0) #5
  %103 = fcmp oeq float %102, %0
  %104 = and i1 %101, %103
  %105 = fcmp uno float %0, 0.000000e+00
  %106 = or i1 %105, %100
  %107 = xor i1 %106, true
  %108 = fcmp uno float %97, 0.000000e+00
  %109 = and i1 %108, %107
  %110 = or i1 %104, %109
  %111 = or i1 %100, %110
  %112 = select i1 %111, float 0x7FF0000000000000, float %97
  ret float %112
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_erff1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3FF19999A0000000
  %6 = fcmp uge float %4, 0x4003333340000000
  %7 = fcmp uge float %4, 4.000000e+00
  %8 = fmul float %4, %4
  %9 = select i1 %5, float %4, float %8
  %10 = select i1 %6, float 0xBEE3E9FF00000000, float 0xBEF2CC2800000000
  %11 = select i1 %5, float %10, float 0x3F12958B20000000
  %12 = select i1 %6, float 0x3F30433580000000, float 0x3F39CE4080000000
  %13 = select i1 %5, float %12, float 0xBF49748820000000
  %14 = tail call float @llvm.fma.f32(float %11, float %9, float %13) #5
  %15 = select i1 %6, float 0xBF67E7DC40000000, float 0xBF702D0440000000
  %16 = select i1 %5, float %15, float 0x3F75221700000000
  %17 = tail call float @llvm.fma.f32(float %14, float %9, float %16) #5
  %18 = select i1 %6, float 0x3F951765C0000000, float 0x3F990AAA40000000
  %19 = select i1 %5, float %18, float 0xBF9B7B5F20000000
  %20 = tail call float @llvm.fma.f32(float %17, float %9, float %19) #5
  %21 = select i1 %6, float 0xBFB9594F20000000, float 0xBFBB6AE160000000
  %22 = select i1 %5, float %21, float 0x3FBCE28B80000000
  %23 = tail call float @llvm.fma.f32(float %20, float %9, float %22) #5
  %24 = fmul float %9, %23
  %25 = fsub float -0.000000e+00, %24
  %26 = tail call float @llvm.fma.f32(float %23, float %9, float %25) #5
  %27 = select i1 %6, float 0xBFE4985B00000000, float 0xBFE44E8D60000000
  %28 = select i1 %5, float %27, float 0xBFD8127240000000
  %29 = select i1 %6, float 0x3E5F482820000000, float 0xBE42A3F940000000
  %30 = select i1 %5, float %29, float 0xBE309A2820000000
  %31 = fadd float %28, %24
  %32 = fsub float %31, %24
  %33 = fsub float %31, %32
  %34 = fsub float %24, %33
  %35 = fsub float %28, %32
  %36 = fadd float %35, %34
  %37 = fadd float %30, %26
  %38 = fadd float %37, %36
  %39 = fmul float %9, %31
  %40 = fsub float -0.000000e+00, %39
  %41 = tail call float @llvm.fma.f32(float %31, float %9, float %40) #5
  %42 = tail call float @llvm.fma.f32(float %38, float %9, float %41) #5
  %43 = select i1 %6, float 0xBFF1FE6C20000000, float 0xBFF20F8F20000000
  %44 = select i1 %5, float %43, float 0x3FF20DD740000000
  %45 = select i1 %6, float 0xBE66E4CF00000000, float 0x3E688F16C0000000
  %46 = select i1 %5, float %45, float 0x3E6CD2F540000000
  %47 = fadd float %44, %39
  %48 = fsub float %47, %39
  %49 = fsub float %47, %48
  %50 = fsub float %39, %49
  %51 = fsub float %44, %48
  %52 = fadd float %51, %50
  %53 = fadd float %46, %42
  %54 = fadd float %52, %53
  %55 = fmul float %47, %4
  %56 = fsub float -0.000000e+00, %55
  %57 = tail call float @llvm.fma.f32(float %47, float %4, float %56) #5
  %58 = tail call float @llvm.fma.f32(float %54, float %4, float %57) #5
  %59 = fadd float %55, %58
  %60 = fmul float %59, 0x3FF7154760000000
  %61 = tail call float @llvm.rint.f32(float %60) #5
  %62 = fptosi float %61 to i32
  %63 = sitofp i32 %62 to float
  %64 = fmul float %63, 0xBFE62E4000000000
  %65 = fadd float %55, %64
  %66 = fsub float %65, %55
  %67 = fsub float %65, %66
  %68 = fsub float %55, %67
  %69 = fsub float %64, %66
  %70 = fadd float %69, %68
  %71 = fadd float %58, %70
  %72 = fmul float %63, 0xBEB7F7D1C0000000
  %73 = fadd float %72, %65
  %74 = fsub float %73, %65
  %75 = fsub float %73, %74
  %76 = fsub float %65, %75
  %77 = fsub float %72, %74
  %78 = fadd float %77, %76
  %79 = fadd float %71, %78
  %80 = tail call float @llvm.fma.f32(float %73, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %81 = tail call float @llvm.fma.f32(float %80, float %73, float 0x3F811121A0000000) #5
  %82 = tail call float @llvm.fma.f32(float %81, float %73, float 0x3FA5554B80000000) #5
  %83 = fmul float %73, %82
  %84 = fsub float -0.000000e+00, %83
  %85 = tail call float @llvm.fma.f32(float %73, float %82, float %84) #5
  %86 = tail call float @llvm.fma.f32(float %79, float %82, float %85) #5
  %87 = fadd float %83, 0x3FC5555540000000
  %88 = fsub float %87, %83
  %89 = fsub float %87, %88
  %90 = fsub float %83, %89
  %91 = fsub float 0x3FC5555540000000, %88
  %92 = fadd float %91, %90
  %93 = fadd float %86, %92
  %94 = fmul float %73, %87
  %95 = fsub float -0.000000e+00, %94
  %96 = tail call float @llvm.fma.f32(float %73, float %87, float %95) #5
  %97 = tail call float @llvm.fma.f32(float %79, float %87, float %96) #5
  %98 = tail call float @llvm.fma.f32(float %73, float %93, float %97) #5
  %99 = fadd float %94, 5.000000e-01
  %100 = fsub float %99, %94
  %101 = fsub float %99, %100
  %102 = fsub float %94, %101
  %103 = fsub float 5.000000e-01, %100
  %104 = fadd float %103, %102
  %105 = fadd float %98, %104
  %106 = fmul float %73, %73
  %107 = fadd float %73, %73
  %108 = fsub float -0.000000e+00, %106
  %109 = tail call float @llvm.fma.f32(float %73, float %73, float %108) #5
  %110 = tail call float @llvm.fma.f32(float %107, float %79, float %109) #5
  %111 = fmul float %106, %99
  %112 = fsub float -0.000000e+00, %111
  %113 = tail call float @llvm.fma.f32(float %106, float %99, float %112) #5
  %114 = tail call float @llvm.fma.f32(float %110, float %99, float %113) #5
  %115 = tail call float @llvm.fma.f32(float %106, float %105, float %114) #5
  %116 = fadd float %73, %111
  %117 = fsub float %116, %73
  %118 = fsub float %116, %117
  %119 = fsub float %73, %118
  %120 = fsub float %111, %117
  %121 = fadd float %120, %119
  %122 = fadd float %79, %115
  %123 = fadd float %121, %122
  %124 = fadd float %116, 1.000000e+00
  %125 = fsub float 1.000000e+00, %124
  %126 = fadd float %116, %125
  %127 = fadd float %126, %123
  %128 = ashr i32 %62, 1
  %129 = shl i32 %128, 23
  %130 = add i32 %129, 1065353216
  %131 = bitcast i32 %130 to float
  %132 = fmul float %124, %131
  %133 = sub i32 %62, %128
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %132, %136
  %138 = fmul float %127, %131
  %139 = fmul float %138, %136
  %140 = fcmp uge float %55, -1.040000e+02
  %141 = bitcast float %137 to i32
  %142 = sext i1 %140 to i32
  %143 = and i32 %141, %142
  %144 = bitcast i32 %143 to float
  %145 = bitcast float %139 to i32
  %146 = and i32 %145, %142
  %147 = bitcast i32 %146 to float
  %148 = fsub float 1.000000e+00, %144
  %149 = fsub float 1.000000e+00, %148
  %150 = fsub float %149, %144
  %151 = fsub float %150, %147
  %152 = select i1 %5, float %148, float %55
  %153 = select i1 %5, float %151, float %58
  %154 = fadd float %152, %153
  %155 = bitcast float %154 to i32
  %156 = select i1 %7, i32 1065353216, i32 %155
  %157 = and i32 %2, -2147483648
  %158 = xor i32 %156, %157
  %159 = bitcast i32 %158 to float
  %160 = fcmp ord float %4, 0.000000e+00
  %161 = select i1 %160, float %159, float 0x7FF8000000000000
  ret float %161
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_erfcf1_u15purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.000000e+00
  %6 = fcmp uge float %4, 0x40019999A0000000
  %7 = fcmp uge float %4, 0x4011333340000000
  %8 = fcmp uge float %4, 0x4024333340000000
  %9 = fdiv float 1.000000e+00, %4
  %10 = fsub float %9, %9
  %11 = fsub float -0.000000e+00, %4
  %12 = tail call float @llvm.fma.f32(float %11, float %9, float 1.000000e+00) #5
  %13 = tail call float @llvm.fma.f32(float %9, float -0.000000e+00, float %12) #5
  %14 = tail call float @llvm.fma.f32(float %9, float 0.000000e+00, float %10) #5
  %15 = tail call float @llvm.fma.f32(float %9, float %13, float %14) #5
  %16 = select i1 %6, float %9, float %4
  %17 = select i1 %6, float %15, float 0.000000e+00
  %18 = select i1 %7, float 0x3FF1D87320000000, float 0xBFD8C3CBA0000000
  %19 = select i1 %6, float %18, float 0xBEDA28E740000000
  %20 = select i1 %5, float %19, float 0xBF16A4E440000000
  %21 = select i1 %7, float 0xBFEE417520000000, float 0x3FF49BF6E0000000
  %22 = select i1 %6, float %21, float 0x3F0E2547A0000000
  %23 = select i1 %5, float %22, float 0x3F43A94DE0000000
  %24 = tail call float @llvm.fma.f32(float %20, float %16, float %23) #5
  %25 = select i1 %7, float 0xBFD7787020000000, float 0xBFFD11A040000000
  %26 = select i1 %6, float %25, float 0x3ED92D8340000000
  %27 = select i1 %5, float %26, float 0xBF5B4A77A0000000
  %28 = tail call float @llvm.fma.f32(float %24, float %16, float %27) #5
  %29 = select i1 %7, float 0x3FE6E5EB60000000, float 0x3FF3FC85A0000000
  %30 = select i1 %6, float %29, float 0xBF675B0E80000000
  %31 = select i1 %5, float %30, float 0x3F27878B80000000
  %32 = tail call float @llvm.fma.f32(float %28, float %16, float %31) #5
  %33 = select i1 %7, float 0xBF89DD7B20000000, float 0xBFC10266E0000000
  %34 = select i1 %6, float %33, float 0x3F9725D000000000
  %35 = select i1 %5, float %34, float 0x3F9399B6E0000000
  %36 = tail call float @llvm.fma.f32(float %32, float %16, float %35) #5
  %37 = fmul float %16, %36
  %38 = fsub float -0.000000e+00, %37
  %39 = tail call float @llvm.fma.f32(float %16, float %36, float %38) #5
  %40 = tail call float @llvm.fma.f32(float %17, float %36, float %39) #5
  %41 = select i1 %7, float 0xBFDFEEFC60000000, float 0xBFDEDF12C0000000
  %42 = select i1 %6, float %41, float 0xBFBAF18180000000
  %43 = select i1 %5, float %42, float 0xBFBA4F7C60000000
  %44 = select i1 %7, float 0xBE418FFA80000000, float 0xBDE35EC900000000
  %45 = select i1 %6, float %44, float 0x3E2E1E43A0000000
  %46 = select i1 %5, float %45, float 0xBE1CDE0840000000
  %47 = fadd float %43, %37
  %48 = fsub float %47, %37
  %49 = fsub float %47, %48
  %50 = fsub float %37, %49
  %51 = fsub float %43, %48
  %52 = fadd float %51, %50
  %53 = fadd float %46, %40
  %54 = fadd float %53, %52
  %55 = fmul float %16, %47
  %56 = fsub float -0.000000e+00, %55
  %57 = tail call float @llvm.fma.f32(float %47, float %16, float %56) #5
  %58 = tail call float @llvm.fma.f32(float %54, float %16, float %57) #5
  %59 = tail call float @llvm.fma.f32(float %47, float %17, float %58) #5
  %60 = select i1 %7, float 0xBF08B45540000000, float 0xBF56074020000000
  %61 = select i1 %6, float %60, float 0xBFE456E9A0000000
  %62 = select i1 %5, float %61, float 0xBFE45F2FE0000000
  %63 = select i1 %7, float 0xBD7B31A100000000, float 0x3DCEFD2820000000
  %64 = select i1 %6, float %63, float 0xBE50C52E80000000
  %65 = select i1 %5, float %64, float 0x3E5AE7E1A0000000
  %66 = fadd float %62, %55
  %67 = fsub float %66, %55
  %68 = fsub float %66, %67
  %69 = fsub float %55, %68
  %70 = fsub float %62, %67
  %71 = fadd float %70, %69
  %72 = fadd float %65, %59
  %73 = fadd float %71, %72
  %74 = fmul float %16, %66
  %75 = fsub float -0.000000e+00, %74
  %76 = tail call float @llvm.fma.f32(float %66, float %16, float %75) #5
  %77 = tail call float @llvm.fma.f32(float %73, float %16, float %76) #5
  %78 = tail call float @llvm.fma.f32(float %66, float %17, float %77) #5
  %79 = select i1 %7, float 0xBFE250CE60000000, float 0xBFE25071A0000000
  %80 = select i1 %6, float %79, float 0xBFF20E94C0000000
  %81 = select i1 %5, float %80, float 0xBFF20DD760000000
  %82 = select i1 %7, float 0x3E20AB5520000000, float 0x3E5A46B5C0000000
  %83 = select i1 %6, float %82, float 0xBE68ACFC60000000
  %84 = select i1 %5, float %83, float 0x3E69AD1700000000
  %85 = fadd float %81, %74
  %86 = fsub float %85, %74
  %87 = fsub float %85, %86
  %88 = fsub float %74, %87
  %89 = fsub float %81, %86
  %90 = fadd float %89, %88
  %91 = fadd float %84, %78
  %92 = fadd float %90, %91
  %93 = select i1 %6, float %11, float %85
  %94 = select i1 %6, float 0.000000e+00, float %92
  %95 = fmul float %93, %4
  %96 = fsub float -0.000000e+00, %95
  %97 = tail call float @llvm.fma.f32(float %93, float %4, float %96) #5
  %98 = tail call float @llvm.fma.f32(float %94, float %4, float %97) #5
  %99 = fadd float %85, %95
  %100 = fsub float %99, %95
  %101 = fsub float %99, %100
  %102 = fsub float %95, %101
  %103 = fsub float %85, %100
  %104 = fadd float %103, %102
  %105 = fadd float %92, %98
  %106 = fadd float %104, %105
  %107 = select i1 %6, float %99, float %95
  %108 = select i1 %6, float %106, float %98
  %109 = fadd float %107, %108
  %110 = fmul float %109, 0x3FF7154760000000
  %111 = tail call float @llvm.rint.f32(float %110) #5
  %112 = fptosi float %111 to i32
  %113 = sitofp i32 %112 to float
  %114 = fmul float %113, 0xBFE62E4000000000
  %115 = fadd float %107, %114
  %116 = fsub float %115, %107
  %117 = fsub float %115, %116
  %118 = fsub float %107, %117
  %119 = fsub float %114, %116
  %120 = fadd float %119, %118
  %121 = fadd float %108, %120
  %122 = fmul float %113, 0xBEB7F7D1C0000000
  %123 = fadd float %122, %115
  %124 = fsub float %123, %115
  %125 = fsub float %123, %124
  %126 = fsub float %115, %125
  %127 = fsub float %122, %124
  %128 = fadd float %127, %126
  %129 = fadd float %121, %128
  %130 = tail call float @llvm.fma.f32(float %123, float 0x3F29F6FFE0000000, float 0x3F56D7EF80000000) #5
  %131 = tail call float @llvm.fma.f32(float %130, float %123, float 0x3F811121A0000000) #5
  %132 = tail call float @llvm.fma.f32(float %131, float %123, float 0x3FA5554B80000000) #5
  %133 = fmul float %123, %132
  %134 = fsub float -0.000000e+00, %133
  %135 = tail call float @llvm.fma.f32(float %123, float %132, float %134) #5
  %136 = tail call float @llvm.fma.f32(float %129, float %132, float %135) #5
  %137 = fadd float %133, 0x3FC5555540000000
  %138 = fsub float %137, %133
  %139 = fsub float %137, %138
  %140 = fsub float %133, %139
  %141 = fsub float 0x3FC5555540000000, %138
  %142 = fadd float %141, %140
  %143 = fadd float %136, %142
  %144 = fmul float %123, %137
  %145 = fsub float -0.000000e+00, %144
  %146 = tail call float @llvm.fma.f32(float %123, float %137, float %145) #5
  %147 = tail call float @llvm.fma.f32(float %129, float %137, float %146) #5
  %148 = tail call float @llvm.fma.f32(float %123, float %143, float %147) #5
  %149 = fadd float %144, 5.000000e-01
  %150 = fsub float %149, %144
  %151 = fsub float %149, %150
  %152 = fsub float %144, %151
  %153 = fsub float 5.000000e-01, %150
  %154 = fadd float %153, %152
  %155 = fadd float %148, %154
  %156 = fmul float %123, %123
  %157 = fadd float %123, %123
  %158 = fsub float -0.000000e+00, %156
  %159 = tail call float @llvm.fma.f32(float %123, float %123, float %158) #5
  %160 = tail call float @llvm.fma.f32(float %157, float %129, float %159) #5
  %161 = fmul float %156, %149
  %162 = fsub float -0.000000e+00, %161
  %163 = tail call float @llvm.fma.f32(float %156, float %149, float %162) #5
  %164 = tail call float @llvm.fma.f32(float %160, float %149, float %163) #5
  %165 = tail call float @llvm.fma.f32(float %156, float %155, float %164) #5
  %166 = fadd float %123, %161
  %167 = fsub float %166, %123
  %168 = fsub float %166, %167
  %169 = fsub float %123, %168
  %170 = fsub float %161, %167
  %171 = fadd float %170, %169
  %172 = fadd float %129, %165
  %173 = fadd float %171, %172
  %174 = fadd float %166, 1.000000e+00
  %175 = fsub float 1.000000e+00, %174
  %176 = fadd float %166, %175
  %177 = fadd float %176, %173
  %178 = ashr i32 %112, 1
  %179 = shl i32 %178, 23
  %180 = add i32 %179, 1065353216
  %181 = bitcast i32 %180 to float
  %182 = fmul float %174, %181
  %183 = sub i32 %112, %178
  %184 = shl i32 %183, 23
  %185 = add i32 %184, 1065353216
  %186 = bitcast i32 %185 to float
  %187 = fmul float %182, %186
  %188 = fmul float %177, %181
  %189 = fmul float %188, %186
  %190 = fcmp uge float %107, -1.040000e+02
  %191 = bitcast float %187 to i32
  %192 = sext i1 %190 to i32
  %193 = and i32 %191, %192
  %194 = bitcast i32 %193 to float
  %195 = bitcast float %189 to i32
  %196 = and i32 %195, %192
  %197 = bitcast i32 %196 to float
  %198 = fmul float %16, %194
  %199 = fsub float -0.000000e+00, %198
  %200 = tail call float @llvm.fma.f32(float %194, float %16, float %199) #5
  %201 = tail call float @llvm.fma.f32(float %197, float %16, float %200) #5
  %202 = tail call float @llvm.fma.f32(float %194, float %17, float %201) #5
  %203 = select i1 %6, float %198, float %194
  %204 = select i1 %6, float %202, float %197
  %205 = fadd float %203, %204
  %206 = select i1 %8, float 0.000000e+00, float %205
  %207 = fsub float 2.000000e+00, %206
  %208 = icmp sgt i32 %2, -1
  %209 = select i1 %208, float %206, float %207
  %210 = fcmp ord float %0, 0.000000e+00
  %211 = select i1 %210, float %209, float 0x7FF8000000000000
  ret float %211
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_finz_sincospif1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = tail call <2 x float> @Sleef_sincospif1_u05purecfma(float %0)
  ret <2 x float> %2
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_finz_sincospif1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, -2
  %14 = sitofp i32 %13 to float
  %15 = fsub float %2, %14
  %16 = fmul float %15, %15
  %17 = tail call float @llvm.fma.f32(float %16, float 0xBF02E11480000000, float 0x3F646617E0000000) #5
  %18 = tail call float @llvm.fma.f32(float %17, float %16, float 0xBFB4ABBCE0000000) #5
  %19 = tail call float @llvm.fma.f32(float %18, float %16, float 0x3FE921FB60000000) #5
  %20 = fmul float %15, %19
  %21 = tail call float @llvm.fma.f32(float %16, float 0x3ECDB1B200000000, float 0xBF355CA860000000) #5
  %22 = tail call float @llvm.fma.f32(float %21, float %16, float 0x3F903C1D20000000) #5
  %23 = tail call float @llvm.fma.f32(float %22, float %16, float 0xBFD3BD3CC0000000) #5
  %24 = tail call float @llvm.fma.f32(float %23, float %16, float 1.000000e+00) #5
  %25 = and i64 %11, 2
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, float %24, float %20
  %28 = select i1 %26, float %20, float %24
  %29 = shl i64 %11, 61
  %30 = ashr i64 %29, 63
  %31 = bitcast float %27 to i32
  %32 = trunc i64 %30 to i32
  %33 = and i32 %32, -2147483648
  %34 = xor i32 %33, %31
  %35 = shl i32 %13, 29
  %36 = add i32 %35, 1073741824
  %37 = and i32 %36, -2147483648
  %38 = bitcast float %28 to i32
  %39 = xor i32 %37, %38
  %40 = bitcast float %0 to i32
  %41 = and i32 %40, 2147483647
  %42 = bitcast i32 %41 to float
  %43 = fcmp ule float %42, 1.000000e+07
  %44 = sext i1 %43 to i32
  %45 = and i32 %34, %44
  %46 = and i32 %39, %44
  %47 = fcmp oeq float %0, 0x7FF0000000000000
  %48 = fcmp oeq float %0, 0xFFF0000000000000
  %49 = or i1 %47, %48
  %50 = sext i1 %49 to i32
  %51 = or i32 %45, %50
  %52 = bitcast i32 %51 to float
  %53 = or i32 %46, %50
  %54 = bitcast i32 %53 to float
  %55 = insertelement <2 x float> undef, float %52, i32 0
  %56 = insertelement <2 x float> %55, float %54, i32 1
  ret <2 x float> %56
}

; Function Attrs: nounwind readnone uwtable
define <2 x float> @Sleef_finz_modff1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = bitcast float %0 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp ule float %8, 0x4160000000000000
  %10 = select i1 %9, float %5, float 0.000000e+00
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = and i32 %6, -2147483648
  %14 = or i32 %12, %13
  %15 = bitcast i32 %14 to float
  %16 = fsub float %0, %10
  %17 = bitcast float %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = or i32 %18, %13
  %20 = bitcast i32 %19 to float
  %21 = insertelement <2 x float> undef, float %15, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  ret <2 x float> %22
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_atanf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = fdiv float 1.000000e+00, %4
  %8 = select i1 %6, float %4, float %7
  %9 = fmul float %8, %8
  %10 = fmul float %9, %9
  %11 = fmul float %10, %10
  %12 = tail call float @llvm.fma.f32(float %9, float 0x3F672199A0000000, float 0xBF905701A0000000) #5
  %13 = tail call float @llvm.fma.f32(float %9, float 0x3FA5C336C0000000, float 0xBFB32BFF40000000) #5
  %14 = tail call float @llvm.fma.f32(float %10, float %12, float %13) #5
  %15 = tail call float @llvm.fma.f32(float %9, float 0x3FBB399E40000000, float 0xBFC22DF3E0000000) #5
  %16 = tail call float @llvm.fma.f32(float %9, float 0x3FC99734E0000000, float 0xBFD5554BA0000000) #5
  %17 = tail call float @llvm.fma.f32(float %10, float %15, float %16) #5
  %18 = tail call float @llvm.fma.f32(float %11, float %14, float %17) #5
  %19 = fmul float %9, %18
  %20 = tail call float @llvm.fma.f32(float %8, float %19, float %8) #5
  %21 = fsub float 0x3FF921FB60000000, %20
  %22 = select i1 %5, float %21, float %20
  %23 = and i32 %2, -2147483648
  %24 = bitcast float %22 to i32
  %25 = xor i32 %23, %24
  %26 = bitcast i32 %25 to float
  ret float %26
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_atan2f1_u35purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = ashr i32 %6, 31
  %8 = and i32 %7, -2
  %9 = and i32 %6, 2147483647
  %10 = bitcast i32 %9 to float
  %11 = or i32 %7, 1
  %12 = fcmp uge float %10, %5
  %13 = select i1 %12, i32 %8, i32 %11
  %14 = fsub float -0.000000e+00, %10
  %15 = select i1 %12, float %5, float %14
  %16 = fcmp ogt float %10, %5
  %17 = select i1 %16, float %10, float %5
  %18 = fdiv float %15, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, %19
  %21 = fmul float %20, %20
  %22 = tail call float @llvm.fma.f32(float %19, float 0x3F672199A0000000, float 0xBF905701A0000000) #5
  %23 = tail call float @llvm.fma.f32(float %19, float 0x3FA5C336C0000000, float 0xBFB32BFF40000000) #5
  %24 = tail call float @llvm.fma.f32(float %20, float %22, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %19, float 0x3FBB399E40000000, float 0xBFC22DF3E0000000) #5
  %26 = tail call float @llvm.fma.f32(float %19, float 0x3FC99734E0000000, float 0xBFD5554BA0000000) #5
  %27 = tail call float @llvm.fma.f32(float %20, float %25, float %26) #5
  %28 = tail call float @llvm.fma.f32(float %21, float %24, float %27) #5
  %29 = fmul float %19, %28
  %30 = tail call float @llvm.fma.f32(float %18, float %29, float %18) #5
  %31 = sitofp i32 %13 to float
  %32 = tail call float @llvm.fma.f32(float %31, float 0x3FF921FB60000000, float %30) #5
  %33 = bitcast float %32 to i32
  %34 = and i32 %6, -2147483648
  %35 = xor i32 %34, %33
  %36 = bitcast i32 %35 to float
  %37 = fcmp oeq float %1, 0x7FF0000000000000
  %38 = fcmp oeq float %1, 0xFFF0000000000000
  %39 = or i1 %37, %38
  %40 = fcmp oeq float %1, 0.000000e+00
  %41 = or i1 %40, %39
  %42 = or i32 %34, 1070141403
  %43 = bitcast i32 %42 to float
  %44 = fsub float 0x3FF921FB60000000, %43
  %45 = select i1 %39, float %44, float 0x3FF921FB60000000
  %46 = select i1 %41, float %45, float %36
  %47 = fcmp une float %0, 0x7FF0000000000000
  %48 = fcmp une float %0, 0xFFF0000000000000
  %49 = or i32 %34, 1061752795
  %50 = bitcast i32 %49 to float
  %51 = fsub float 0x3FF921FB60000000, %50
  %52 = select i1 %39, float %51, float 0x3FF921FB60000000
  %53 = and i1 %48, %47
  %54 = select i1 %53, float %46, float %52
  %55 = fcmp une float %0, 0.000000e+00
  %56 = and i32 %7, 1078530011
  %57 = fcmp uno float %0, %1
  %58 = bitcast float %54 to i32
  %59 = select i1 %55, i32 %58, i32 %56
  %60 = and i32 %3, -2147483648
  %61 = xor i32 %59, %60
  %62 = bitcast i32 %61 to float
  %63 = select i1 %57, float 0xFFFFFFFFE0000000, float %62
  ret float %63
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_asinf1_u35purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #5
  %11 = select i1 %5, float %10, float %4
  %12 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %13 = tail call float @llvm.fma.f32(float %12, float %9, float 0x3FA7486640000000) #5
  %14 = tail call float @llvm.fma.f32(float %13, float %9, float 0x3FB32FF140000000) #5
  %15 = tail call float @llvm.fma.f32(float %14, float %9, float 0x3FC5555E40000000) #5
  %16 = fmul float %9, %11
  %17 = tail call float @llvm.fma.f32(float %15, float %16, float %11) #5
  %18 = tail call float @llvm.fma.f32(float %17, float -2.000000e+00, float 0x3FF921FB60000000) #5
  %19 = select i1 %5, float %18, float %17
  %20 = bitcast float %19 to i32
  %21 = and i32 %2, -2147483648
  %22 = xor i32 %21, %20
  %23 = bitcast i32 %22 to float
  ret float %23
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_acosf1_u35purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #5
  %11 = select i1 %5, float %4, float %10
  %12 = fcmp une float %4, 1.000000e+00
  %13 = select i1 %12, float %11, float 0.000000e+00
  %14 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %15 = tail call float @llvm.fma.f32(float %14, float %9, float 0x3FA7486640000000) #5
  %16 = tail call float @llvm.fma.f32(float %15, float %9, float 0x3FB32FF140000000) #5
  %17 = tail call float @llvm.fma.f32(float %16, float %9, float 0x3FC5555E40000000) #5
  %18 = fmul float %9, %13
  %19 = fmul float %17, %18
  %20 = bitcast float %13 to i32
  %21 = and i32 %2, -2147483648
  %22 = xor i32 %21, %20
  %23 = bitcast i32 %22 to float
  %24 = bitcast float %19 to i32
  %25 = xor i32 %21, %24
  %26 = bitcast i32 %25 to float
  %27 = fadd float %23, %26
  %28 = fsub float 0x3FF921FB60000000, %27
  %29 = fadd float %13, %19
  %30 = fmul float %29, 2.000000e+00
  %31 = select i1 %5, float %28, float %30
  %32 = fcmp uge float %0, 0.000000e+00
  %33 = fsub float 0x400921FB60000000, %31
  %34 = or i1 %32, %5
  %35 = select i1 %34, float %31, float %33
  ret float %35
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_atan2f1_u10purecfma(float, float) local_unnamed_addr #1 {
  %3 = tail call float @Sleef_atan2f1_u10purecfma(float %0, float %1)
  ret float %3
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_asinf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #5
  %11 = fmul float %10, %10
  %12 = fsub float -0.000000e+00, %11
  %13 = tail call float @llvm.fma.f32(float %10, float %10, float %12) #5
  %14 = fadd float %9, %11
  %15 = fsub float %14, %9
  %16 = fsub float %14, %15
  %17 = fsub float %9, %16
  %18 = fsub float %11, %15
  %19 = fadd float %18, %17
  %20 = fadd float %13, %19
  %21 = fdiv float 1.000000e+00, %10
  %22 = fsub float -0.000000e+00, %10
  %23 = tail call float @llvm.fma.f32(float %22, float %21, float 1.000000e+00) #5
  %24 = fmul float %21, %23
  %25 = fmul float %21, %14
  %26 = fsub float -0.000000e+00, %25
  %27 = tail call float @llvm.fma.f32(float %14, float %21, float %26) #5
  %28 = tail call float @llvm.fma.f32(float %20, float %21, float %27) #5
  %29 = tail call float @llvm.fma.f32(float %14, float %24, float %28) #5
  %30 = fmul float %25, 5.000000e-01
  %31 = fmul float %29, 5.000000e-01
  %32 = select i1 %5, float %30, float %4
  %33 = fcmp une float %4, 1.000000e+00
  %34 = select i1 %33, float %32, float 0.000000e+00
  %35 = and i1 %33, %5
  %36 = select i1 %35, float %31, float 0.000000e+00
  %37 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %38 = tail call float @llvm.fma.f32(float %37, float %9, float 0x3FA7486640000000) #5
  %39 = tail call float @llvm.fma.f32(float %38, float %9, float 0x3FB32FF140000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %9, float 0x3FC5555E40000000) #5
  %41 = fmul float %9, %34
  %42 = fmul float %40, %41
  %43 = fsub float 0x3FE921FB60000000, %34
  %44 = fsub float 0x3FE921FB60000000, %43
  %45 = fsub float %44, %34
  %46 = fadd float %45, 0xBE5777A5C0000000
  %47 = fsub float %46, %36
  %48 = fsub float %43, %42
  %49 = fsub float %43, %48
  %50 = fsub float %49, %42
  %51 = fadd float %50, %47
  %52 = fadd float %34, %42
  %53 = fadd float %48, %51
  %54 = fmul float %53, 2.000000e+00
  %55 = select i1 %5, float %54, float %52
  %56 = bitcast float %55 to i32
  %57 = and i32 %2, -2147483648
  %58 = xor i32 %57, %56
  %59 = bitcast i32 %58 to float
  ret float %59
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_acosf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #5
  %11 = fmul float %10, %10
  %12 = fsub float -0.000000e+00, %11
  %13 = tail call float @llvm.fma.f32(float %10, float %10, float %12) #5
  %14 = fadd float %9, %11
  %15 = fsub float %14, %9
  %16 = fsub float %14, %15
  %17 = fsub float %9, %16
  %18 = fsub float %11, %15
  %19 = fadd float %18, %17
  %20 = fadd float %13, %19
  %21 = fdiv float 1.000000e+00, %10
  %22 = fsub float -0.000000e+00, %10
  %23 = tail call float @llvm.fma.f32(float %22, float %21, float 1.000000e+00) #5
  %24 = fmul float %21, %23
  %25 = fmul float %21, %14
  %26 = fsub float -0.000000e+00, %25
  %27 = tail call float @llvm.fma.f32(float %14, float %21, float %26) #5
  %28 = tail call float @llvm.fma.f32(float %20, float %21, float %27) #5
  %29 = tail call float @llvm.fma.f32(float %14, float %24, float %28) #5
  %30 = fmul float %25, 5.000000e-01
  %31 = fmul float %29, 5.000000e-01
  %32 = select i1 %5, float %4, float %30
  %33 = select i1 %5, float 0.000000e+00, float %31
  %34 = fcmp une float %4, 1.000000e+00
  %35 = select i1 %34, float %32, float 0.000000e+00
  %36 = select i1 %34, float %33, float 0.000000e+00
  %37 = tail call float @llvm.fma.f32(float %9, float 0x3FA57DB020000000, float 0x3F98D27DC0000000) #5
  %38 = tail call float @llvm.fma.f32(float %37, float %9, float 0x3FA7486640000000) #5
  %39 = tail call float @llvm.fma.f32(float %38, float %9, float 0x3FB32FF140000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %9, float 0x3FC5555E40000000) #5
  %41 = fmul float %9, %35
  %42 = fmul float %40, %41
  %43 = bitcast float %35 to i32
  %44 = and i32 %2, -2147483648
  %45 = xor i32 %44, %43
  %46 = bitcast i32 %45 to float
  %47 = bitcast float %42 to i32
  %48 = xor i32 %44, %47
  %49 = bitcast i32 %48 to float
  %50 = fadd float %46, %49
  %51 = fsub float %46, %50
  %52 = fadd float %51, %49
  %53 = fsub float 0x3FF921FB60000000, %50
  %54 = fsub float 0x3FF921FB60000000, %53
  %55 = fsub float %54, %50
  %56 = fadd float %55, 0xBE6777A5C0000000
  %57 = fsub float %56, %52
  %58 = fadd float %35, %42
  %59 = fsub float %35, %58
  %60 = fadd float %42, %59
  %61 = fadd float %60, %36
  %62 = fmul float %58, 2.000000e+00
  %63 = fmul float %61, 2.000000e+00
  %64 = select i1 %5, float %53, float %62
  %65 = select i1 %5, float %57, float %63
  %66 = fcmp uge float %0, 0.000000e+00
  %67 = fsub float 0x400921FB60000000, %64
  %68 = fsub float 0x400921FB60000000, %67
  %69 = fsub float %68, %64
  %70 = fadd float %69, 0xBE7777A5C0000000
  %71 = fsub float %70, %65
  %72 = or i1 %66, %5
  %73 = select i1 %72, float %64, float %67
  %74 = select i1 %72, float %65, float %71
  %75 = fadd float %73, %74
  ret float %75
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_atanf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = select i1 %6, float %4, float -1.000000e+00
  %8 = select i1 %6, float 0.000000e+00, float -0.000000e+00
  %9 = select i1 %6, float 1.000000e+00, float %4
  %10 = fdiv float 1.000000e+00, %9
  %11 = fmul float %7, %10
  %12 = fsub float -0.000000e+00, %11
  %13 = tail call float @llvm.fma.f32(float %10, float %7, float %12) #5
  %14 = fsub float -0.000000e+00, %9
  %15 = tail call float @llvm.fma.f32(float %14, float %10, float 1.000000e+00) #5
  %16 = tail call float @llvm.fma.f32(float %10, float -0.000000e+00, float %15) #5
  %17 = tail call float @llvm.fma.f32(float %8, float %10, float %13) #5
  %18 = tail call float @llvm.fma.f32(float %11, float %16, float %17) #5
  %19 = fmul float %11, %11
  %20 = fadd float %11, %11
  %21 = fsub float -0.000000e+00, %19
  %22 = tail call float @llvm.fma.f32(float %11, float %11, float %21) #5
  %23 = tail call float @llvm.fma.f32(float %20, float %18, float %22) #5
  %24 = fadd float %19, %23
  %25 = fsub float %19, %24
  %26 = fadd float %23, %25
  %27 = tail call float @llvm.fma.f32(float %24, float 0xBF5CE6AA20000000, float 0x3F86191D60000000) #5
  %28 = tail call float @llvm.fma.f32(float %27, float %24, float 0xBF9FB30CE0000000) #5
  %29 = tail call float @llvm.fma.f32(float %28, float %24, float 0x3FAD8FA3C0000000) #5
  %30 = tail call float @llvm.fma.f32(float %29, float %24, float 0xBFB57A25C0000000) #5
  %31 = tail call float @llvm.fma.f32(float %30, float %24, float 0x3FBC05CDC0000000) #5
  %32 = tail call float @llvm.fma.f32(float %31, float %24, float 0xBFC2419880000000) #5
  %33 = tail call float @llvm.fma.f32(float %32, float %24, float 0x3FC9990CA0000000) #5
  %34 = fmul float %24, %33
  %35 = fadd float %34, 0xBFD5555360000000
  %36 = fsub float 0xBFD5555360000000, %35
  %37 = fadd float %34, %36
  %38 = fmul float %24, %35
  %39 = fsub float -0.000000e+00, %38
  %40 = tail call float @llvm.fma.f32(float %24, float %35, float %39) #5
  %41 = tail call float @llvm.fma.f32(float %26, float %35, float %40) #5
  %42 = tail call float @llvm.fma.f32(float %24, float %37, float %41) #5
  %43 = fadd float %38, 1.000000e+00
  %44 = fsub float 1.000000e+00, %43
  %45 = fadd float %38, %44
  %46 = fadd float %42, %45
  %47 = fmul float %11, %43
  %48 = fsub float -0.000000e+00, %47
  %49 = tail call float @llvm.fma.f32(float %11, float %43, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %18, float %43, float %49) #5
  %51 = tail call float @llvm.fma.f32(float %11, float %46, float %50) #5
  %52 = uitofp i1 %5 to float
  %53 = fmul float %52, 0x3FF921FB60000000
  %54 = fsub float -0.000000e+00, %53
  %55 = tail call float @llvm.fma.f32(float %52, float 0x3FF921FB60000000, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %52, float 0xBE6777A5C0000000, float %55) #5
  %57 = fadd float %53, %47
  %58 = fsub float %53, %57
  %59 = fadd float %47, %58
  %60 = fadd float %56, %59
  %61 = fadd float %51, %60
  %62 = fadd float %57, %61
  %63 = fcmp une float %0, 0x7FF0000000000000
  %64 = fcmp une float %0, 0xFFF0000000000000
  %65 = and i1 %64, %63
  %66 = bitcast float %62 to i32
  %67 = select i1 %65, i32 %66, i32 1070141403
  %68 = and i32 %2, -2147483648
  %69 = xor i32 %67, %68
  %70 = bitcast i32 %69 to float
  ret float %70
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_logf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = tail call float @llvm.fma.f32(float %19, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %21 = tail call float @llvm.fma.f32(float %20, float %19, float 0x3FD999B240000000) #5
  %22 = tail call float @llvm.fma.f32(float %21, float %19, float 0x3FE5555560000000) #5
  %23 = tail call float @llvm.fma.f32(float %22, float %19, float 2.000000e+00) #5
  %24 = sitofp i32 %15 to float
  %25 = fmul float %24, 0x3FE62E4300000000
  %26 = tail call float @llvm.fma.f32(float %18, float %23, float %25) #5
  %27 = fcmp une float %4, 0x7FF0000000000000
  %28 = select i1 %27, float %26, float 0x7FF0000000000000
  %29 = fcmp oge float %4, 0.000000e+00
  %30 = select i1 %29, float %28, float 0x7FF8000000000000
  %31 = fcmp une float %4, 0.000000e+00
  %32 = select i1 %31, float %30, float 0xFFF0000000000000
  ret float %32
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_expf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x3FF7154760000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = tail call float @llvm.fma.f32(float %5, float 0xBFE62E4000000000, float %0) #5
  %7 = tail call float @llvm.fma.f32(float %5, float 0xBEB7F7D1C0000000, float %6) #5
  %8 = tail call float @llvm.fma.f32(float %7, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %7, float 0x3F811114C0000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %7, float 0x3FA5554F40000000) #5
  %11 = tail call float @llvm.fma.f32(float %10, float %7, float 0x3FC5555560000000) #5
  %12 = tail call float @llvm.fma.f32(float %11, float %7, float 5.000000e-01) #5
  %13 = fmul float %7, %7
  %14 = tail call float @llvm.fma.f32(float %13, float %12, float %7) #5
  %15 = fadd float %14, 1.000000e+00
  %16 = ashr i32 %4, 1
  %17 = shl i32 %16, 23
  %18 = add i32 %17, 1065353216
  %19 = bitcast i32 %18 to float
  %20 = fmul float %15, %19
  %21 = sub i32 %4, %16
  %22 = shl i32 %21, 23
  %23 = add i32 %22, 1065353216
  %24 = bitcast i32 %23 to float
  %25 = fmul float %20, %24
  %26 = fcmp uge float %0, -1.040000e+02
  %27 = select i1 %26, float %25, float 0.000000e+00
  %28 = fcmp ule float %0, 1.000000e+02
  %29 = select i1 %28, float %27, float 0x7FF0000000000000
  ret float %29
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_cbrtf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 127, i32 191
  %12 = sub nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 1
  %25 = sitofp i32 %24 to float
  %26 = fadd float %25, 6.144000e+03
  %27 = fmul float %26, 0x3FD5555560000000
  %28 = tail call float @llvm.trunc.f32(float %27) #5
  %29 = fptosi float %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 3.000000e+00
  %32 = fsub float %26, %31
  %33 = tail call float @llvm.trunc.f32(float %32) #5
  %34 = fptosi float %33 to i32
  %35 = icmp eq i32 %34, 1
  %36 = select i1 %35, float 0x3FF428A300000000, float 1.000000e+00
  %37 = icmp eq i32 %34, 2
  %38 = select i1 %37, float 0x3FF965FEA0000000, float %36
  %39 = add i32 %29, -2048
  %40 = ashr i32 %39, 1
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %38, %43
  %45 = sub i32 %39, %40
  %46 = shl i32 %45, 23
  %47 = add i32 %46, 1065353216
  %48 = bitcast i32 %47 to float
  %49 = fmul float %44, %48
  %50 = bitcast float %49 to i32
  %51 = bitcast float %23 to i32
  %52 = and i32 %51, -2147483648
  %53 = xor i32 %52, %50
  %54 = bitcast i32 %53 to float
  %55 = and i32 %51, 2147483647
  %56 = bitcast i32 %55 to float
  %57 = tail call float @llvm.fma.f32(float %56, float 0xBFE3400420000000, float 0x4006912E60000000) #5
  %58 = tail call float @llvm.fma.f32(float %57, float %56, float 0xC01620F460000000) #5
  %59 = tail call float @llvm.fma.f32(float %58, float %56, float 0x401797D220000000) #5
  %60 = tail call float @llvm.fma.f32(float %59, float %56, float 0xC00E79F100000000) #5
  %61 = tail call float @llvm.fma.f32(float %60, float %56, float 0x4001CB0260000000) #5
  %62 = fmul float %61, %56
  %63 = fmul float %61, %62
  %64 = fmul float %63, 0x3FE5555560000000
  %65 = tail call float @llvm.fma.f32(float %63, float %61, float -1.000000e+00) #5
  %66 = fmul float %64, %65
  %67 = fsub float %63, %66
  %68 = fmul float %67, %54
  ret float %68
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_cbrtf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_cbrtf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_logf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0x3FE62E4300000000
  %18 = fsub float -0.000000e+00, %17
  %19 = tail call float @llvm.fma.f32(float %16, float 0x3FE62E4300000000, float %18) #5
  %20 = tail call float @llvm.fma.f32(float %16, float 0xBE205C6100000000, float %19) #5
  %21 = fadd float %13, -1.000000e+00
  %22 = fadd float %21, 1.000000e+00
  %23 = fsub float %21, %22
  %24 = fsub float -1.000000e+00, %23
  %25 = fsub float %13, %22
  %26 = fadd float %25, %24
  %27 = fadd float %13, 1.000000e+00
  %28 = fadd float %27, -1.000000e+00
  %29 = fsub float %27, %28
  %30 = fsub float 1.000000e+00, %29
  %31 = fsub float %13, %28
  %32 = fadd float %31, %30
  %33 = fdiv float 1.000000e+00, %27
  %34 = fmul float %21, %33
  %35 = fsub float -0.000000e+00, %34
  %36 = tail call float @llvm.fma.f32(float %33, float %21, float %35) #5
  %37 = fsub float -0.000000e+00, %27
  %38 = tail call float @llvm.fma.f32(float %37, float %33, float 1.000000e+00) #5
  %39 = fsub float -0.000000e+00, %32
  %40 = tail call float @llvm.fma.f32(float %39, float %33, float %38) #5
  %41 = tail call float @llvm.fma.f32(float %26, float %33, float %36) #5
  %42 = tail call float @llvm.fma.f32(float %34, float %40, float %41) #5
  %43 = fmul float %34, %34
  %44 = tail call float @llvm.fma.f32(float %43, float 0x3FD35FEB80000000, float 0x3FD9933940000000) #5
  %45 = tail call float @llvm.fma.f32(float %44, float %43, float 0x3FE5555B40000000) #5
  %46 = fmul float %34, 2.000000e+00
  %47 = fmul float %42, 2.000000e+00
  %48 = fadd float %17, %46
  %49 = fsub float %17, %48
  %50 = fadd float %46, %49
  %51 = fadd float %20, %50
  %52 = fadd float %47, %51
  %53 = fmul float %34, %43
  %54 = fmul float %53, %45
  %55 = fadd float %48, %54
  %56 = fsub float %48, %55
  %57 = fadd float %54, %56
  %58 = fadd float %52, %57
  %59 = fadd float %55, %58
  %60 = fcmp une float %4, 0x7FF0000000000000
  %61 = select i1 %60, float %59, float 0x7FF0000000000000
  %62 = fcmp oge float %4, 0.000000e+00
  %63 = select i1 %62, float %61, float 0x7FF8000000000000
  %64 = fcmp une float %4, 0.000000e+00
  %65 = select i1 %64, float %63, float 0xFFF0000000000000
  ret float %65
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_powf1_u10purecfma(float, float) local_unnamed_addr #1 {
  %3 = tail call float @Sleef_powf1_u10purecfma(float %0, float %1)
  ret float %3
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_sinhf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_sinhf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_coshf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_coshf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_tanhf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_tanhf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_sinhf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = tail call float @llvm.rint.f32(float %5) #5
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = tail call float @llvm.fma.f32(float %8, float 0xBFE62E4000000000, float %4) #5
  %10 = tail call float @llvm.fma.f32(float %8, float 0xBEB7F7D1C0000000, float %9) #5
  %11 = fmul float %10, %10
  %12 = fmul float %11, %11
  %13 = tail call float @llvm.fma.f32(float %10, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %14 = tail call float @llvm.fma.f32(float %10, float 0x3F811114C0000000, float 0x3FA5554F40000000) #5
  %15 = tail call float @llvm.fma.f32(float %10, float 0x3FC5555560000000, float 5.000000e-01) #5
  %16 = tail call float @llvm.fma.f32(float %11, float %14, float %15) #5
  %17 = tail call float @llvm.fma.f32(float %12, float %13, float %16) #5
  %18 = tail call float @llvm.fma.f32(float %11, float %17, float %10) #5
  %19 = icmp eq i32 %7, 0
  %20 = fadd float %18, 1.000000e+00
  %21 = ashr i32 %7, 1
  %22 = shl i32 %21, 23
  %23 = add i32 %22, 1065353216
  %24 = bitcast i32 %23 to float
  %25 = fmul float %20, %24
  %26 = sub i32 %7, %21
  %27 = shl i32 %26, 23
  %28 = add i32 %27, 1065353216
  %29 = bitcast i32 %28 to float
  %30 = fmul float %25, %29
  %31 = fadd float %30, -1.000000e+00
  %32 = select i1 %19, float %18, float %31
  %33 = fadd float %32, 2.000000e+00
  %34 = fadd float %32, 1.000000e+00
  %35 = fdiv float %33, %34
  %36 = fmul float %32, 5.000000e-01
  %37 = fmul float %36, %35
  %38 = fcmp ule float %4, 8.800000e+01
  %39 = fcmp ord float %37, 0.000000e+00
  %40 = and i1 %38, %39
  %41 = bitcast float %37 to i32
  %42 = select i1 %40, i32 %41, i32 2139095040
  %43 = and i32 %2, -2147483648
  %44 = xor i32 %42, %43
  %45 = fcmp uno float %0, 0.000000e+00
  %46 = bitcast i32 %44 to float
  %47 = select i1 %45, float 0xFFFFFFFFE0000000, float %46
  ret float %47
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_coshf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = tail call float @llvm.rint.f32(float %5) #5
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = tail call float @llvm.fma.f32(float %8, float 0xBFE62E4000000000, float %4) #5
  %10 = tail call float @llvm.fma.f32(float %8, float 0xBEB7F7D1C0000000, float %9) #5
  %11 = tail call float @llvm.fma.f32(float %10, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %12 = tail call float @llvm.fma.f32(float %11, float %10, float 0x3F811114C0000000) #5
  %13 = tail call float @llvm.fma.f32(float %12, float %10, float 0x3FA5554F40000000) #5
  %14 = tail call float @llvm.fma.f32(float %13, float %10, float 0x3FC5555560000000) #5
  %15 = tail call float @llvm.fma.f32(float %14, float %10, float 5.000000e-01) #5
  %16 = fmul float %10, %10
  %17 = tail call float @llvm.fma.f32(float %16, float %15, float %10) #5
  %18 = fadd float %17, 1.000000e+00
  %19 = ashr i32 %7, 1
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = sub i32 %7, %19
  %25 = shl i32 %24, 23
  %26 = add i32 %25, 1065353216
  %27 = bitcast i32 %26 to float
  %28 = fmul float %23, %27
  %29 = fcmp uge float %4, -1.040000e+02
  %30 = select i1 %29, float %28, float 0.000000e+00
  %31 = fcmp ule float %4, 1.000000e+02
  %32 = select i1 %31, float %30, float 0x7FF0000000000000
  %33 = fdiv float 5.000000e-01, %32
  %34 = tail call float @llvm.fma.f32(float %32, float 5.000000e-01, float %33) #5
  %35 = fcmp ule float %4, 8.800000e+01
  %36 = fcmp ord float %34, 0.000000e+00
  %37 = and i1 %35, %36
  %38 = fcmp uno float %0, 0.000000e+00
  %39 = select i1 %37, float %34, float 0x7FF0000000000000
  %40 = select i1 %38, float 0xFFFFFFFFE0000000, float %39
  ret float %40
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_tanhf1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 2.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = tail call float @llvm.rint.f32(float %6) #5
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = tail call float @llvm.fma.f32(float %9, float 0xBFE62E4000000000, float %5) #5
  %11 = tail call float @llvm.fma.f32(float %9, float 0xBEB7F7D1C0000000, float %10) #5
  %12 = fmul float %11, %11
  %13 = fmul float %12, %12
  %14 = tail call float @llvm.fma.f32(float %11, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %15 = tail call float @llvm.fma.f32(float %11, float 0x3F811114C0000000, float 0x3FA5554F40000000) #5
  %16 = tail call float @llvm.fma.f32(float %11, float 0x3FC5555560000000, float 5.000000e-01) #5
  %17 = tail call float @llvm.fma.f32(float %12, float %15, float %16) #5
  %18 = tail call float @llvm.fma.f32(float %13, float %14, float %17) #5
  %19 = tail call float @llvm.fma.f32(float %12, float %18, float %11) #5
  %20 = icmp eq i32 %8, 0
  %21 = fadd float %19, 1.000000e+00
  %22 = ashr i32 %8, 1
  %23 = shl i32 %22, 23
  %24 = add i32 %23, 1065353216
  %25 = bitcast i32 %24 to float
  %26 = fmul float %21, %25
  %27 = sub i32 %8, %22
  %28 = shl i32 %27, 23
  %29 = add i32 %28, 1065353216
  %30 = bitcast i32 %29 to float
  %31 = fmul float %26, %30
  %32 = fadd float %31, -1.000000e+00
  %33 = select i1 %20, float %19, float %32
  %34 = fadd float %33, 2.000000e+00
  %35 = fdiv float %33, %34
  %36 = fcmp ule float %4, 0x4021542460000000
  %37 = fcmp ord float %35, 0.000000e+00
  %38 = and i1 %36, %37
  %39 = bitcast float %35 to i32
  %40 = select i1 %38, i32 %39, i32 1065353216
  %41 = and i32 %2, -2147483648
  %42 = xor i32 %40, %41
  %43 = fcmp uno float %0, 0.000000e+00
  %44 = bitcast i32 %42 to float
  %45 = select i1 %43, float 0xFFFFFFFFE0000000, float %44
  ret float %45
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_asinhf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = tail call float @Sleef_asinhf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_acoshf1_u10purecfma(float) local_unnamed_addr #2 {
  %2 = tail call float @Sleef_acoshf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_atanhf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_atanhf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_exp2f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.rint.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = fsub float %0, %2
  %5 = tail call float @llvm.fma.f32(float %4, float 0x3F2421B200000000, float 0x3F55F14660000000) #5
  %6 = tail call float @llvm.fma.f32(float %5, float %4, float 0x3F83B2CDC0000000) #5
  %7 = tail call float @llvm.fma.f32(float %6, float %4, float 0x3FAC6AF380000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %4, float 0x3FCEBFBD80000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %4, float 0x3FE62E4300000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %4, float 1.000000e+00) #5
  %11 = ashr i32 %3, 1
  %12 = shl i32 %11, 23
  %13 = add i32 %12, 1065353216
  %14 = bitcast i32 %13 to float
  %15 = fmul float %10, %14
  %16 = sub i32 %3, %11
  %17 = shl i32 %16, 23
  %18 = add i32 %17, 1065353216
  %19 = bitcast i32 %18 to float
  %20 = fmul float %15, %19
  %21 = fcmp ult float %0, 1.280000e+02
  %22 = fcmp olt float %0, -1.500000e+02
  %23 = select i1 %21, float %20, float 0x7FF0000000000000
  %24 = select i1 %22, float 0.000000e+00, float %23
  ret float %24
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_exp2f1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.rint.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = fsub float %0, %2
  %5 = tail call float @llvm.fma.f32(float %4, float 0x3F2421B200000000, float 0x3F55F14660000000) #5
  %6 = tail call float @llvm.fma.f32(float %5, float %4, float 0x3F83B2CDC0000000) #5
  %7 = tail call float @llvm.fma.f32(float %6, float %4, float 0x3FAC6AF380000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %4, float 0x3FCEBFBD80000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %4, float 0x3FE62E4300000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %4, float 1.000000e+00) #5
  %11 = ashr i32 %3, 1
  %12 = shl i32 %11, 23
  %13 = add i32 %12, 1065353216
  %14 = bitcast i32 %13 to float
  %15 = fmul float %10, %14
  %16 = sub i32 %3, %11
  %17 = shl i32 %16, 23
  %18 = add i32 %17, 1065353216
  %19 = bitcast i32 %18 to float
  %20 = fmul float %15, %19
  %21 = fcmp ult float %0, 1.280000e+02
  %22 = fcmp olt float %0, -1.500000e+02
  %23 = select i1 %21, float %20, float 0x7FF0000000000000
  %24 = select i1 %22, float 0.000000e+00, float %23
  ret float %24
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_exp10f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = tail call float @llvm.fma.f32(float %3, float 0xBFD3440000000000, float %0) #5
  %6 = tail call float @llvm.fma.f32(float %3, float 0xBED3509F80000000, float %5) #5
  %7 = tail call float @llvm.fma.f32(float %6, float 0x3FB16A1F80000000, float 0x3FCA997420000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %6, float 0x3FE142AFA0000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %6, float 0x3FF2BD6BC0000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %6, float 0x40004705A0000000) #5
  %11 = tail call float @llvm.fma.f32(float %10, float %6, float 0x40053524C0000000) #5
  %12 = fmul float %6, %11
  %13 = fadd float %12, 0x40026BB1C0000000
  %14 = fsub float 0x40026BB1C0000000, %13
  %15 = fadd float %12, %14
  %16 = fadd float %15, 0xBE610586A0000000
  %17 = fmul float %6, %13
  %18 = fsub float -0.000000e+00, %17
  %19 = tail call float @llvm.fma.f32(float %13, float %6, float %18) #5
  %20 = tail call float @llvm.fma.f32(float %16, float %6, float %19) #5
  %21 = fadd float %17, 1.000000e+00
  %22 = fsub float 1.000000e+00, %21
  %23 = fadd float %17, %22
  %24 = fadd float %20, %23
  %25 = fadd float %21, %24
  %26 = ashr i32 %4, 1
  %27 = shl i32 %26, 23
  %28 = add i32 %27, 1065353216
  %29 = bitcast i32 %28 to float
  %30 = fmul float %25, %29
  %31 = sub i32 %4, %26
  %32 = shl i32 %31, 23
  %33 = add i32 %32, 1065353216
  %34 = bitcast i32 %33 to float
  %35 = fmul float %30, %34
  %36 = fcmp ule float %0, 0x4043441360000000
  %37 = fcmp olt float %0, -5.000000e+01
  %38 = select i1 %36, float %35, float 0x7FF0000000000000
  %39 = select i1 %37, float 0.000000e+00, float %38
  ret float %39
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_exp10f1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = tail call float @llvm.rint.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = tail call float @llvm.fma.f32(float %3, float 0xBFD3440000000000, float %0) #5
  %6 = tail call float @llvm.fma.f32(float %3, float 0xBED3509F80000000, float %5) #5
  %7 = tail call float @llvm.fma.f32(float %6, float 0x3FCA6B54E0000000, float 0x3FE1565340000000) #5
  %8 = tail call float @llvm.fma.f32(float %7, float %6, float 0x3FF2BD9740000000) #5
  %9 = tail call float @llvm.fma.f32(float %8, float %6, float 0x400046F9C0000000) #5
  %10 = tail call float @llvm.fma.f32(float %9, float %6, float 0x40053524A0000000) #5
  %11 = tail call float @llvm.fma.f32(float %10, float %6, float 0x40026BB1C0000000) #5
  %12 = tail call float @llvm.fma.f32(float %11, float %6, float 1.000000e+00) #5
  %13 = ashr i32 %4, 1
  %14 = shl i32 %13, 23
  %15 = add i32 %14, 1065353216
  %16 = bitcast i32 %15 to float
  %17 = fmul float %12, %16
  %18 = sub i32 %4, %13
  %19 = shl i32 %18, 23
  %20 = add i32 %19, 1065353216
  %21 = bitcast i32 %20 to float
  %22 = fmul float %17, %21
  %23 = fcmp ule float %0, 0x4043441360000000
  %24 = fcmp olt float %0, -5.000000e+01
  %25 = select i1 %23, float %22, float 0x7FF0000000000000
  %26 = select i1 %24, float 0.000000e+00, float %25
  ret float %26
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_expm1f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_expm1f1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_log10f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fsub float %16, %17
  %19 = fsub float -1.000000e+00, %18
  %20 = fsub float %13, %17
  %21 = fadd float %20, %19
  %22 = fadd float %13, 1.000000e+00
  %23 = fadd float %22, -1.000000e+00
  %24 = fsub float %22, %23
  %25 = fsub float 1.000000e+00, %24
  %26 = fsub float %13, %23
  %27 = fadd float %26, %25
  %28 = fdiv float 1.000000e+00, %22
  %29 = fmul float %16, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %28, float %16, float %30) #5
  %32 = fsub float -0.000000e+00, %22
  %33 = tail call float @llvm.fma.f32(float %32, float %28, float 1.000000e+00) #5
  %34 = fsub float -0.000000e+00, %27
  %35 = tail call float @llvm.fma.f32(float %34, float %28, float %33) #5
  %36 = tail call float @llvm.fma.f32(float %21, float %28, float %31) #5
  %37 = tail call float @llvm.fma.f32(float %29, float %35, float %36) #5
  %38 = fmul float %29, %29
  %39 = tail call float @llvm.fma.f32(float %38, float 0x3FC0D2AA40000000, float 0x3FC636DD80000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %38, float 0x3FD287ACE0000000) #5
  %41 = sitofp i32 %15 to float
  %42 = fmul float %41, 0x3FD3441360000000
  %43 = fsub float -0.000000e+00, %42
  %44 = tail call float @llvm.fma.f32(float %41, float 0x3FD3441360000000, float %43) #5
  %45 = tail call float @llvm.fma.f32(float %41, float 0xBE4EC10C00000000, float %44) #5
  %46 = fmul float %29, 0x3FEBCB7B20000000
  %47 = fsub float -0.000000e+00, %46
  %48 = tail call float @llvm.fma.f32(float %29, float 0x3FEBCB7B20000000, float %47) #5
  %49 = tail call float @llvm.fma.f32(float %37, float 0x3FEBCB7B20000000, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %29, float 0xBE574EEEA0000000, float %49) #5
  %51 = fadd float %42, %46
  %52 = fsub float %42, %51
  %53 = fadd float %46, %52
  %54 = fadd float %45, %53
  %55 = fadd float %54, %50
  %56 = fmul float %29, %38
  %57 = fmul float %56, %40
  %58 = fadd float %51, %57
  %59 = fsub float %51, %58
  %60 = fadd float %57, %59
  %61 = fadd float %55, %60
  %62 = fadd float %58, %61
  %63 = fcmp une float %4, 0x7FF0000000000000
  %64 = select i1 %63, float %62, float 0x7FF0000000000000
  %65 = fcmp oge float %4, 0.000000e+00
  %66 = select i1 %65, float %64, float 0x7FF8000000000000
  %67 = fcmp une float %4, 0.000000e+00
  %68 = select i1 %67, float %66, float 0xFFF0000000000000
  ret float %68
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_log2f1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fsub float %16, %17
  %19 = fsub float -1.000000e+00, %18
  %20 = fsub float %13, %17
  %21 = fadd float %20, %19
  %22 = fadd float %13, 1.000000e+00
  %23 = fadd float %22, -1.000000e+00
  %24 = fsub float %22, %23
  %25 = fsub float 1.000000e+00, %24
  %26 = fsub float %13, %23
  %27 = fadd float %26, %25
  %28 = fdiv float 1.000000e+00, %22
  %29 = fmul float %16, %28
  %30 = fsub float -0.000000e+00, %29
  %31 = tail call float @llvm.fma.f32(float %28, float %16, float %30) #5
  %32 = fsub float -0.000000e+00, %22
  %33 = tail call float @llvm.fma.f32(float %32, float %28, float 1.000000e+00) #5
  %34 = fsub float -0.000000e+00, %27
  %35 = tail call float @llvm.fma.f32(float %34, float %28, float %33) #5
  %36 = tail call float @llvm.fma.f32(float %21, float %28, float %31) #5
  %37 = tail call float @llvm.fma.f32(float %29, float %35, float %36) #5
  %38 = fmul float %29, %29
  %39 = tail call float @llvm.fma.f32(float %38, float 0x3FDBFF4360000000, float 0x3FE2728420000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %38, float 0x3FEEC71380000000) #5
  %41 = sitofp i32 %15 to float
  %42 = fmul float %29, %38
  %43 = insertelement <2 x float> <float 0x4007154760000000, float undef>, float %40, i32 1
  %44 = insertelement <2 x float> undef, float %29, i32 0
  %45 = insertelement <2 x float> %44, float %42, i32 1
  %46 = fmul <2 x float> %43, %45
  %47 = extractelement <2 x float> %46, i32 0
  %48 = fsub float -0.000000e+00, %47
  %49 = tail call float @llvm.fma.f32(float %29, float 0x4007154760000000, float %48) #5
  %50 = tail call float @llvm.fma.f32(float %37, float 0x4007154760000000, float %49) #5
  %51 = tail call float @llvm.fma.f32(float %29, float 0x3E6192FDE0000000, float %50) #5
  %52 = fadd float %47, %41
  %53 = extractelement <2 x float> %46, i32 1
  %54 = fadd float %52, %53
  %55 = insertelement <2 x float> undef, float %52, i32 0
  %56 = insertelement <2 x float> %55, float %54, i32 1
  %57 = insertelement <2 x float> undef, float %41, i32 0
  %58 = insertelement <2 x float> %57, float %52, i32 1
  %59 = fsub <2 x float> %56, %58
  %60 = fsub <2 x float> %56, %59
  %61 = fsub <2 x float> %58, %60
  %62 = fsub <2 x float> %46, %59
  %63 = fadd <2 x float> %62, %61
  %64 = extractelement <2 x float> %63, i32 0
  %65 = fadd float %51, %64
  %66 = extractelement <2 x float> %63, i32 1
  %67 = fadd float %65, %66
  %68 = fadd float %54, %67
  %69 = fcmp une float %4, 0x7FF0000000000000
  %70 = select i1 %69, float %68, float 0x7FF0000000000000
  %71 = fcmp oge float %4, 0.000000e+00
  %72 = select i1 %71, float %70, float 0x7FF8000000000000
  %73 = fcmp une float %4, 0.000000e+00
  %74 = select i1 %73, float %72, float 0xFFF0000000000000
  ret float %74
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_log2f1_u35purecfma(float) local_unnamed_addr #1 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = tail call float @llvm.fma.f32(float %19, float 0x3FDBFE81A0000000, float 0x3FE2728F60000000) #5
  %21 = tail call float @llvm.fma.f32(float %20, float %19, float 0x3FEEC715E0000000) #5
  %22 = fmul float %18, %19
  %23 = sitofp i32 %15 to float
  %24 = tail call float @llvm.fma.f32(float %18, float 0x4007154760000000, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %22, float %21, float %24) #5
  %26 = fcmp une float %4, 0x7FF0000000000000
  %27 = select i1 %26, float %25, float 0x7FF0000000000000
  %28 = fcmp oge float %4, 0.000000e+00
  %29 = select i1 %28, float %27, float 0x7FF8000000000000
  %30 = fcmp une float %4, 0.000000e+00
  %31 = select i1 %30, float %29, float 0xFFF0000000000000
  ret float %31
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_log1pf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = fadd float %0, 1.000000e+00
  %3 = fcmp uge float %2, 0x3810000000000000
  %4 = fmul float %2, 0x43F0000000000000
  %5 = select i1 %3, float %2, float %4
  %6 = fmul float %5, 0x3FF5555560000000
  %7 = bitcast float %6 to i32
  %8 = lshr i32 %7, 23
  %9 = and i32 %8, 255
  %10 = shl nuw nsw i32 %9, 23
  %11 = sub nsw i32 2130706432, %10
  %12 = bitcast i32 %11 to float
  %13 = fadd float %12, -1.000000e+00
  %14 = tail call float @llvm.fma.f32(float %0, float %12, float %13) #5
  %15 = select i1 %3, i32 -127, i32 -191
  %16 = add nsw i32 %9, %15
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, 0x3FE62E4300000000
  %19 = fsub float -0.000000e+00, %18
  %20 = tail call float @llvm.fma.f32(float %17, float 0x3FE62E4300000000, float %19) #5
  %21 = tail call float @llvm.fma.f32(float %17, float 0xBE205C6100000000, float %20) #5
  %22 = fadd float %14, 2.000000e+00
  %23 = fsub float 2.000000e+00, %22
  %24 = fadd float %14, %23
  %25 = fdiv float 1.000000e+00, %22
  %26 = fmul float %14, %25
  %27 = fsub float -0.000000e+00, %26
  %28 = tail call float @llvm.fma.f32(float %25, float %14, float %27) #5
  %29 = fsub float -0.000000e+00, %22
  %30 = tail call float @llvm.fma.f32(float %29, float %25, float 1.000000e+00) #5
  %31 = fsub float -0.000000e+00, %24
  %32 = tail call float @llvm.fma.f32(float %31, float %25, float %30) #5
  %33 = tail call float @llvm.fma.f32(float %25, float 0.000000e+00, float %28) #5
  %34 = tail call float @llvm.fma.f32(float %26, float %32, float %33) #5
  %35 = fmul float %26, %26
  %36 = tail call float @llvm.fma.f32(float %35, float 0x3FD35FEB80000000, float 0x3FD9933940000000) #5
  %37 = tail call float @llvm.fma.f32(float %36, float %35, float 0x3FE5555B40000000) #5
  %38 = fmul float %26, 2.000000e+00
  %39 = fmul float %34, 2.000000e+00
  %40 = fadd float %18, %38
  %41 = fsub float %18, %40
  %42 = fadd float %38, %41
  %43 = fadd float %21, %42
  %44 = fadd float %39, %43
  %45 = fmul float %26, %35
  %46 = fmul float %45, %37
  %47 = fadd float %40, %46
  %48 = fsub float %40, %47
  %49 = fadd float %46, %48
  %50 = fadd float %44, %49
  %51 = fadd float %47, %50
  %52 = fcmp ule float %0, 0x47D2CED320000000
  %53 = fcmp olt float %0, -1.000000e+00
  %54 = select i1 %52, float %51, float 0x7FF0000000000000
  %55 = select i1 %53, float 0xFFFFFFFFE0000000, float %54
  %56 = fcmp une float %0, -1.000000e+00
  %57 = select i1 %56, float %55, float 0xFFF0000000000000
  %58 = bitcast float %0 to i32
  %59 = icmp eq i32 %58, -2147483648
  %60 = select i1 %59, float -0.000000e+00, float %57
  ret float %60
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_fabsf1_purecfma(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  ret float %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_copysignf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, -2147483648
  %7 = or i32 %6, %4
  %8 = bitcast i32 %7 to float
  ret float %8
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_fmaxf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp ogt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_fminf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp olt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_fdimf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fsub float %0, %1
  %4 = fcmp uge float %3, 0.000000e+00
  %5 = fcmp une float %0, %1
  %6 = and i1 %5, %4
  %7 = select i1 %6, float %3, float 0.000000e+00
  ret float %7
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_truncf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_floorf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp uge float %5, 0.000000e+00
  %7 = fadd float %5, 1.000000e+00
  %8 = select i1 %6, float %5, float %7
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_ceilf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.trunc.f32(float %0) #5
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp ugt float %5, 0.000000e+00
  %7 = fadd float %5, -1.000000e+00
  %8 = select i1 %6, float %7, float %5
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_roundf1_purecfma(float) local_unnamed_addr #1 {
  %2 = fadd float %0, 5.000000e-01
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = fsub float %2, %5
  %7 = fcmp ugt float %2, 0.000000e+00
  %8 = fcmp une float %6, 0.000000e+00
  %9 = fadd float %2, -1.000000e+00
  %10 = or i1 %7, %8
  %11 = select i1 %10, float %2, float %9
  %12 = fcmp uge float %6, 0.000000e+00
  %13 = fadd float %6, 1.000000e+00
  %14 = select i1 %12, float %6, float %13
  %15 = fcmp une float %0, 0x3FDFFFFFE0000000
  %16 = select i1 %15, float %11, float 0.000000e+00
  %17 = fcmp oeq float %0, 0x7FF0000000000000
  %18 = fcmp oeq float %0, 0xFFF0000000000000
  %19 = or i1 %17, %18
  %20 = bitcast float %0 to i32
  %21 = and i32 %20, 2147483647
  %22 = bitcast i32 %21 to float
  %23 = fcmp oge float %22, 0x4160000000000000
  %24 = or i1 %19, %23
  %25 = fsub float %16, %14
  %26 = bitcast float %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = and i32 %20, -2147483648
  %29 = or i32 %27, %28
  %30 = bitcast i32 %29 to float
  %31 = select i1 %24, float %0, float %30
  ret float %31
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_rintf1_purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @llvm.rint.f32(float %0) #5
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_fmaf1_purecfma(float, float, float) local_unnamed_addr #1 {
  %4 = tail call float @llvm.fma.f32(float %0, float %1, float %2) #5
  ret float %4
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_hypotf1_u05purecfma(float, float) local_unnamed_addr #2 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fcmp uge float %12, 0x3810000000000000
  %14 = fmul float %10, 0x4170000000000000
  %15 = select i1 %13, float %10, float %14
  %16 = fmul float %12, 0x4170000000000000
  %17 = select i1 %13, float %12, float %16
  %18 = fdiv float 1.000000e+00, %17
  %19 = fmul float %15, %18
  %20 = fsub float -0.000000e+00, %19
  %21 = tail call float @llvm.fma.f32(float %18, float %15, float %20) #5
  %22 = fsub float -0.000000e+00, %17
  %23 = tail call float @llvm.fma.f32(float %22, float %18, float 1.000000e+00) #5
  %24 = tail call float @llvm.fma.f32(float %18, float -0.000000e+00, float %23) #5
  %25 = tail call float @llvm.fma.f32(float %18, float 0.000000e+00, float %21) #5
  %26 = tail call float @llvm.fma.f32(float %19, float %24, float %25) #5
  %27 = fmul float %19, %19
  %28 = fadd float %19, %19
  %29 = fsub float -0.000000e+00, %27
  %30 = tail call float @llvm.fma.f32(float %19, float %19, float %29) #5
  %31 = tail call float @llvm.fma.f32(float %28, float %26, float %30) #5
  %32 = fadd float %27, 1.000000e+00
  %33 = fsub float %32, %27
  %34 = fsub float %32, %33
  %35 = fsub float %27, %34
  %36 = fsub float 1.000000e+00, %33
  %37 = fadd float %36, %35
  %38 = fadd float %31, %37
  %39 = fadd float %32, %38
  %40 = tail call float @sqrtf(float %39) #5
  %41 = fmul float %40, %40
  %42 = fsub float -0.000000e+00, %41
  %43 = tail call float @llvm.fma.f32(float %40, float %40, float %42) #5
  %44 = fadd float %32, %41
  %45 = fsub float %44, %32
  %46 = fsub float %44, %45
  %47 = fsub float %32, %46
  %48 = fsub float %41, %45
  %49 = fadd float %48, %47
  %50 = fadd float %38, %43
  %51 = fadd float %50, %49
  %52 = fdiv float 1.000000e+00, %40
  %53 = fsub float -0.000000e+00, %40
  %54 = tail call float @llvm.fma.f32(float %53, float %52, float 1.000000e+00) #5
  %55 = fmul float %52, %54
  %56 = fmul float %52, %44
  %57 = fsub float -0.000000e+00, %56
  %58 = tail call float @llvm.fma.f32(float %44, float %52, float %57) #5
  %59 = tail call float @llvm.fma.f32(float %51, float %52, float %58) #5
  %60 = tail call float @llvm.fma.f32(float %44, float %55, float %59) #5
  %61 = fmul float %56, 5.000000e-01
  %62 = fmul float %60, 5.000000e-01
  %63 = fmul float %12, %61
  %64 = fsub float -0.000000e+00, %63
  %65 = tail call float @llvm.fma.f32(float %61, float %12, float %64) #5
  %66 = tail call float @llvm.fma.f32(float %62, float %12, float %65) #5
  %67 = fadd float %63, %66
  %68 = fcmp ord float %67, 0.000000e+00
  %69 = select i1 %68, float %67, float 0x7FF0000000000000
  %70 = fcmp une float %10, 0.000000e+00
  %71 = select i1 %70, float %69, float %12
  %72 = fcmp ord float %8, %5
  %73 = select i1 %72, float %71, float 0x7FF8000000000000
  %74 = fcmp une float %5, 0x7FF0000000000000
  %75 = fcmp une float %8, 0x7FF0000000000000
  %76 = and i1 %74, %75
  %77 = select i1 %76, float %73, float 0x7FF0000000000000
  ret float %77
}

; Function Attrs: nounwind uwtable
define float @Sleef_finz_hypotf1_u35purecfma(float, float) local_unnamed_addr #2 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fdiv float %10, %12
  %14 = tail call float @llvm.fma.f32(float %13, float %13, float 1.000000e+00) #5
  %15 = tail call float @sqrtf(float %14) #5
  %16 = fmul float %12, %15
  %17 = fcmp une float %10, 0.000000e+00
  %18 = select i1 %17, float %16, float %12
  %19 = fcmp ord float %8, %5
  %20 = select i1 %19, float %18, float 0x7FF8000000000000
  %21 = fcmp une float %5, 0x7FF0000000000000
  %22 = fcmp une float %8, 0x7FF0000000000000
  %23 = and i1 %21, %22
  %24 = select i1 %23, float %20, float 0x7FF0000000000000
  ret float %24
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_nextafterf1_purecfma(float, float) local_unnamed_addr #0 {
  %3 = fcmp une float %0, 0.000000e+00
  %4 = bitcast float %1 to i32
  %5 = and i32 %4, -2147483648
  %6 = bitcast i32 %5 to float
  %7 = select i1 %3, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = zext i32 %8 to i64
  %10 = ashr i32 %8, 31
  %11 = fcmp ole float %7, %1
  %12 = sext i1 %11 to i32
  %13 = xor i64 %9, 2147483648
  %14 = sub nsw i64 0, %13
  %15 = and i64 %14, 4294967295
  %16 = or i64 %15, 4294967296
  %17 = icmp eq i32 %10, %12
  %18 = select i1 %17, i64 %9, i64 %16
  %19 = fcmp oeq float %7, %1
  %20 = add nuw nsw i64 %18, 4294967295
  %21 = and i64 %18, 4294967296
  %22 = and i64 %20, 4294967295
  %23 = or i64 %22, %21
  %24 = select i1 %19, i64 %18, i64 %23
  %25 = xor i64 %24, 2147483648
  %26 = sub nsw i64 0, %25
  %27 = select i1 %17, i64 %24, i64 %26
  %28 = trunc i64 %27 to i32
  %29 = bitcast i32 %28 to float
  %30 = fcmp une float %29, 0.000000e+00
  %31 = fcmp oeq float %7, 0.000000e+00
  %32 = and i32 %8, -2147483648
  %33 = bitcast i32 %32 to float
  %34 = or i1 %31, %30
  %35 = select i1 %34, float %29, float %33
  %36 = fcmp une float %7, 0.000000e+00
  %37 = fcmp une float %1, 0.000000e+00
  %38 = or i1 %37, %36
  %39 = select i1 %38, float %35, float %1
  %40 = fcmp ord float %7, %1
  %41 = select i1 %40, float %39, float 0x7FF8000000000000
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_finz_frfrexpf1_purecfma(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3810000000000000
  %6 = fmul float %0, 0x41D0000000000000
  %7 = select i1 %5, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = and i32 %8, -2139095041
  %10 = or i32 %9, 1056964608
  %11 = fcmp une float %7, 0x7FF0000000000000
  %12 = fcmp une float %7, 0xFFF0000000000000
  %13 = and i32 %8, -2147483648
  %14 = or i32 %13, 2139095040
  %15 = and i1 %12, %11
  %16 = select i1 %15, i32 %10, i32 %14
  %17 = bitcast i32 %16 to float
  %18 = fcmp une float %7, 0.000000e+00
  %19 = select i1 %18, float %17, float %7
  ret float %19
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_fmodf1_purecfma(float, float) local_unnamed_addr #1 {
  %3 = tail call float @Sleef_fmodf1_purecfma(float %0, float %1)
  ret float %3
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_remainderf1_purecfma(float, float) local_unnamed_addr #1 {
  %3 = tail call float @Sleef_remainderf1_purecfma(float %0, float %1)
  ret float %3
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_sinpif1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = shl i64 %11, 62
  %13 = ashr i64 %12, 63
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %11 to i32
  %16 = and i32 %15, -2
  %17 = sitofp i32 %16 to float
  %18 = fsub float %2, %17
  %19 = fmul float %18, %18
  %20 = fsub float -0.000000e+00, %19
  %21 = tail call float @llvm.fma.f32(float %18, float %18, float %20) #5
  %22 = icmp eq i32 %14, 0
  %23 = select i1 %22, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %24 = select i1 %22, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %25 = tail call float @llvm.fma.f32(float %23, float %19, float %24) #5
  %26 = select i1 %22, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %27 = tail call float @llvm.fma.f32(float %25, float %19, float %26) #5
  %28 = fmul float %19, %27
  %29 = select i1 %22, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %30 = select i1 %22, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %31 = fadd float %29, %28
  %32 = fsub float %31, %28
  %33 = fsub float %31, %32
  %34 = fsub float %28, %33
  %35 = fsub float %29, %32
  %36 = fadd float %35, %34
  %37 = fadd float %30, %36
  %38 = fmul float %19, %31
  %39 = fsub float -0.000000e+00, %38
  %40 = tail call float @llvm.fma.f32(float %19, float %31, float %39) #5
  %41 = tail call float @llvm.fma.f32(float %21, float %31, float %40) #5
  %42 = tail call float @llvm.fma.f32(float %19, float %37, float %41) #5
  %43 = select i1 %22, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %44 = select i1 %22, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %45 = fadd float %43, %38
  %46 = fsub float %45, %38
  %47 = fsub float %45, %46
  %48 = fsub float %38, %47
  %49 = fsub float %43, %46
  %50 = fadd float %49, %48
  %51 = fadd float %44, %42
  %52 = fadd float %50, %51
  %53 = select i1 %22, float %18, float %19
  %54 = select i1 %22, float 0.000000e+00, float %21
  %55 = fmul float %53, %45
  %56 = fsub float -0.000000e+00, %55
  %57 = tail call float @llvm.fma.f32(float %45, float %53, float %56) #5
  %58 = tail call float @llvm.fma.f32(float %52, float %53, float %57) #5
  %59 = tail call float @llvm.fma.f32(float %45, float %54, float %58) #5
  %60 = fadd float %55, 1.000000e+00
  %61 = fsub float %60, %55
  %62 = fsub float %60, %61
  %63 = fsub float %55, %62
  %64 = fsub float 1.000000e+00, %61
  %65 = fadd float %64, %63
  %66 = fadd float %65, %59
  %67 = select i1 %22, float %55, float %60
  %68 = select i1 %22, float %59, float %66
  %69 = shl i64 %11, 61
  %70 = ashr i64 %69, 63
  %71 = bitcast float %67 to i32
  %72 = trunc i64 %70 to i32
  %73 = and i32 %72, -2147483648
  %74 = xor i32 %73, %71
  %75 = bitcast i32 %74 to float
  %76 = bitcast float %68 to i32
  %77 = xor i32 %73, %76
  %78 = bitcast i32 %77 to float
  %79 = fadd float %75, %78
  %80 = bitcast float %0 to i32
  %81 = icmp eq i32 %80, -2147483648
  %82 = and i32 %80, 2147483647
  %83 = bitcast i32 %82 to float
  %84 = fcmp ogt float %83, 8.000000e+06
  %85 = fcmp oeq float %0, 0x7FF0000000000000
  %86 = fcmp oeq float %0, 0xFFF0000000000000
  %87 = or i1 %85, %86
  %88 = select i1 %81, float -0.000000e+00, float %79
  %89 = select i1 %84, float 0.000000e+00, float %88
  %90 = select i1 %87, float 0xFFFFFFFFE0000000, float %89
  ret float %90
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_cospif1_u05purecfma(float) local_unnamed_addr #1 {
  %2 = fmul float %0, 4.000000e+00
  %3 = tail call float @llvm.trunc.f32(float %2) #5
  %4 = fptosi float %3 to i32
  %5 = sext i32 %4 to i64
  %6 = lshr i32 %4, 31
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 32
  %9 = or i64 %8, %7
  %10 = xor i64 %9, 1
  %11 = add nsw i64 %10, %5
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, -2
  %14 = sitofp i32 %13 to float
  %15 = fsub float %2, %14
  %16 = fmul float %15, %15
  %17 = fsub float -0.000000e+00, %16
  %18 = tail call float @llvm.fma.f32(float %15, float %15, float %17) #5
  %19 = and i64 %11, 2
  %20 = icmp ne i64 %19, 0
  %21 = select i1 %20, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %22 = select i1 %20, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %23 = tail call float @llvm.fma.f32(float %21, float %16, float %22) #5
  %24 = select i1 %20, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %25 = tail call float @llvm.fma.f32(float %23, float %16, float %24) #5
  %26 = fmul float %16, %25
  %27 = select i1 %20, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %28 = select i1 %20, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %29 = fadd float %27, %26
  %30 = fsub float %29, %26
  %31 = fsub float %29, %30
  %32 = fsub float %26, %31
  %33 = fsub float %27, %30
  %34 = fadd float %33, %32
  %35 = fadd float %28, %34
  %36 = fmul float %16, %29
  %37 = fsub float -0.000000e+00, %36
  %38 = tail call float @llvm.fma.f32(float %16, float %29, float %37) #5
  %39 = tail call float @llvm.fma.f32(float %18, float %29, float %38) #5
  %40 = tail call float @llvm.fma.f32(float %16, float %35, float %39) #5
  %41 = select i1 %20, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %42 = select i1 %20, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %43 = fadd float %41, %36
  %44 = fsub float %43, %36
  %45 = fsub float %43, %44
  %46 = fsub float %36, %45
  %47 = fsub float %41, %44
  %48 = fadd float %47, %46
  %49 = fadd float %42, %40
  %50 = fadd float %48, %49
  %51 = select i1 %20, float %15, float %16
  %52 = select i1 %20, float 0.000000e+00, float %18
  %53 = fmul float %51, %43
  %54 = fsub float -0.000000e+00, %53
  %55 = tail call float @llvm.fma.f32(float %43, float %51, float %54) #5
  %56 = tail call float @llvm.fma.f32(float %50, float %51, float %55) #5
  %57 = tail call float @llvm.fma.f32(float %43, float %52, float %56) #5
  %58 = fadd float %53, 1.000000e+00
  %59 = fsub float %58, %53
  %60 = fsub float %58, %59
  %61 = fsub float %53, %60
  %62 = fsub float 1.000000e+00, %59
  %63 = fadd float %62, %61
  %64 = fadd float %63, %57
  %65 = select i1 %20, float %53, float %58
  %66 = select i1 %20, float %57, float %64
  %67 = bitcast float %65 to i32
  %68 = shl i32 %13, 29
  %69 = add i32 %68, 1073741824
  %70 = and i32 %69, -2147483648
  %71 = xor i32 %70, %67
  %72 = bitcast i32 %71 to float
  %73 = bitcast float %66 to i32
  %74 = xor i32 %70, %73
  %75 = bitcast i32 %74 to float
  %76 = fadd float %72, %75
  %77 = bitcast float %0 to i32
  %78 = and i32 %77, 2147483647
  %79 = bitcast i32 %78 to float
  %80 = fcmp ule float %79, 8.000000e+06
  %81 = fcmp oeq float %0, 0x7FF0000000000000
  %82 = fcmp oeq float %0, 0xFFF0000000000000
  %83 = or i1 %81, %82
  %84 = select i1 %80, float %76, float 1.000000e+00
  %85 = select i1 %83, float 0xFFFFFFFFE0000000, float %84
  ret float %85
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_tgammaf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_tgammaf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_lgammaf1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_lgammaf1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_erff1_u10purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_erff1_u10purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_erfcf1_u15purecfma(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_erfcf1_u15purecfma(float %0)
  ret float %2
}

; Function Attrs: nounwind readnone uwtable
define float @Sleef_finz_fastpowf1_u3500purecfma(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp uge float %5, 0x3810000000000000
  %7 = fmul float %5, 0x43F0000000000000
  %8 = select i1 %6, float %5, float %7
  %9 = fmul float %8, 0x3FF5555560000000
  %10 = bitcast float %9 to i32
  %11 = lshr i32 %10, 23
  %12 = and i32 %11, 255
  %13 = bitcast float %8 to i32
  %14 = shl nuw nsw i32 %12, 23
  %15 = add i32 %13, 1065353216
  %16 = sub i32 %15, %14
  %17 = bitcast i32 %16 to float
  %18 = select i1 %6, i32 -127, i32 -191
  %19 = add nsw i32 %12, %18
  %20 = fadd float %17, -1.000000e+00
  %21 = fadd float %17, 1.000000e+00
  %22 = fdiv float %20, %21
  %23 = fmul float %22, %22
  %24 = tail call float @llvm.fma.f32(float %23, float 0x3FCEA0D200000000, float 0x3FD2406C80000000) #5
  %25 = tail call float @llvm.fma.f32(float %24, float %23, float 0x3FD999B240000000) #5
  %26 = tail call float @llvm.fma.f32(float %25, float %23, float 0x3FE5555560000000) #5
  %27 = tail call float @llvm.fma.f32(float %26, float %23, float 2.000000e+00) #5
  %28 = sitofp i32 %19 to float
  %29 = fmul float %28, 0x3FE62E4300000000
  %30 = tail call float @llvm.fma.f32(float %22, float %27, float %29) #5
  %31 = fmul float %30, %1
  %32 = fmul float %31, 0x3FF7154760000000
  %33 = tail call float @llvm.rint.f32(float %32) #5
  %34 = fptosi float %33 to i32
  %35 = sitofp i32 %34 to float
  %36 = tail call float @llvm.fma.f32(float %35, float 0xBFE62E4000000000, float %31) #5
  %37 = tail call float @llvm.fma.f32(float %35, float 0xBEB7F7D1C0000000, float %36) #5
  %38 = tail call float @llvm.fma.f32(float %37, float 0x3F2A057B40000000, float 0x3F56D2D920000000) #5
  %39 = tail call float @llvm.fma.f32(float %38, float %37, float 0x3F811114C0000000) #5
  %40 = tail call float @llvm.fma.f32(float %39, float %37, float 0x3FA5554F40000000) #5
  %41 = tail call float @llvm.fma.f32(float %40, float %37, float 0x3FC5555560000000) #5
  %42 = tail call float @llvm.fma.f32(float %41, float %37, float 5.000000e-01) #5
  %43 = fmul float %37, %37
  %44 = fadd float %37, 1.000000e+00
  %45 = tail call float @llvm.fma.f32(float %43, float %42, float %44) #5
  %46 = ashr i32 %34, 1
  %47 = shl i32 %46, 23
  %48 = add i32 %47, 1065353216
  %49 = bitcast i32 %48 to float
  %50 = fmul float %45, %49
  %51 = sub i32 %34, %46
  %52 = shl i32 %51, 23
  %53 = add i32 %52, 1065353216
  %54 = bitcast i32 %53 to float
  %55 = fmul float %50, %54
  %56 = fcmp uge float %31, -1.040000e+02
  %57 = select i1 %56, float %55, float 0.000000e+00
  %58 = tail call float @llvm.trunc.f32(float %1) #5
  %59 = fcmp oeq float %58, %1
  %60 = bitcast float %1 to i32
  %61 = and i32 %60, 2147483647
  %62 = bitcast i32 %61 to float
  %63 = fcmp ogt float %62, 0x4170000000000000
  %64 = or i1 %59, %63
  %65 = fptosi float %58 to i32
  %66 = shl i32 %65, 31
  %67 = ashr exact i32 %66, 31
  %68 = fcmp olt float %62, 0x4170000000000000
  %69 = and i1 %68, %64
  %70 = select i1 %69, i32 %67, i32 0
  %71 = ashr i32 %3, 31
  %72 = and i32 %70, %71
  %73 = fsub float -0.000000e+00, %57
  %74 = icmp eq i32 %72, 0
  %75 = select i1 %74, float %57, float %73
  %76 = fcmp une float %0, 0.000000e+00
  %77 = select i1 %76, float %75, float 0.000000e+00
  %78 = fcmp une float %1, 0.000000e+00
  %79 = select i1 %78, float %77, float 1.000000e+00
  ret float %79
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @Sleef_getIntf1_purecfma(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 10
  %4 = sext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define i8* @Sleef_getPtrf1_purecfma(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* null
  ret i8* %3
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.rint.f32(float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fma.f32(float, float, float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind
declare float @sqrtf(float) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !4, i64 0}
!4 = !{!"float", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
