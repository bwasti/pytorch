; ModuleID = '/home/bwasti/pytorch/sleef/src/libm/sleefsimdsp.c'
source_filename = "/home/bwasti/pytorch/sleef/src/libm/sleefsimdsp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"Pure C scalar\00", align 1
@rempitabsp = external local_unnamed_addr constant [0 x float], align 4

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @Sleef_ilogbf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = zext i32 %10 to i64
  %12 = select i1 %5, i64 127, i64 191
  %13 = sub nsw i64 %11, %12
  %14 = and i64 %13, 4294967295
  %15 = fcmp une float %0, 0.000000e+00
  %16 = select i1 %15, i64 %14, i64 -2147483648
  %17 = fcmp ord float %0, 0.000000e+00
  %18 = fcmp une float %0, 0x7FF0000000000000
  %19 = fcmp une float %0, 0xFFF0000000000000
  %20 = and i1 %19, %18
  %21 = and i1 %17, %20
  %22 = select i1 %21, i64 %16, i64 2147483647
  ret i64 %22
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_ldexpf1_purec(float, i64) local_unnamed_addr #0 {
  %3 = trunc i64 %1 to i32
  %4 = ashr i32 %3, 31
  %5 = zext i32 %4 to i64
  %6 = add i32 %4, %3
  %7 = ashr i32 %6, 6
  %8 = zext i32 %7 to i64
  %9 = sub nsw i64 %8, %5
  %10 = shl nsw i64 %9, 4
  %11 = shl nsw i64 %9, 6
  %12 = sub i64 %1, %11
  %13 = add nsw i64 %10, 127
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %15, i64 4294967295, i64 0
  %17 = and i64 %16, %13
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, 255
  %20 = select i1 %19, i64 4294967295, i64 0
  %21 = xor i64 %20, 511
  %22 = and i64 %21, %17
  %23 = and i64 %20, 255
  %24 = or i64 %22, %23
  %25 = trunc i64 %24 to i32
  %26 = shl i32 %25, 23
  %27 = bitcast i32 %26 to float
  %28 = fmul float %27, %0
  %29 = fmul float %28, %27
  %30 = fmul float %29, %27
  %31 = fmul float %30, %27
  %32 = trunc i64 %12 to i32
  %33 = shl i32 %32, 23
  %34 = add i32 %33, 1065353216
  %35 = bitcast i32 %34 to float
  %36 = fmul float %31, %35
  ret float %36
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %24, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fcmp ogt float %7, 0.000000e+00
  %9 = select i1 %8, float 5.000000e-01, float -5.000000e-01
  %10 = fadd float %7, %9
  %11 = bitcast float %10 to i32
  %12 = fptosi float %10 to i32
  %13 = and i32 %12, 1
  %14 = sub i32 %11, %13
  %15 = bitcast i32 %14 to float
  %16 = fptosi float %15 to i32
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, 0x400921C000000000
  %19 = fsub float %0, %18
  %20 = fmul float %17, 0x3F1DAA0000000000
  %21 = fsub float %19, %20
  %22 = fmul float %17, 0x3E210B4620000000
  %23 = fsub float %21, %22
  br label %256

; <label>:24:                                     ; preds = %1
  %25 = fcmp uge float %4, 3.900000e+04
  br i1 %25, label %46, label %26, !prof !2

; <label>:26:                                     ; preds = %24
  %27 = fmul float %0, 0x3FD45F3060000000
  %28 = fcmp ogt float %27, 0.000000e+00
  %29 = select i1 %28, float 5.000000e-01, float -5.000000e-01
  %30 = fadd float %27, %29
  %31 = bitcast float %30 to i32
  %32 = fptosi float %30 to i32
  %33 = and i32 %32, 1
  %34 = sub i32 %31, %33
  %35 = bitcast i32 %34 to float
  %36 = fptosi float %35 to i32
  %37 = sitofp i32 %36 to float
  %38 = fmul float %37, 0x4009200000000000
  %39 = fsub float %0, %38
  %40 = fmul float %37, 0x3F4FB00000000000
  %41 = fsub float %39, %40
  %42 = fmul float %37, 0x3EA5100000000000
  %43 = fsub float %41, %42
  %44 = fmul float %37, 0x3DE0B46120000000
  %45 = fsub float %43, %44
  br label %256

; <label>:46:                                     ; preds = %24
  %47 = lshr i32 %2, 23
  %48 = and i32 %47, 255
  %49 = add nsw i32 %48, -152
  %50 = icmp ugt i32 %48, 217
  %51 = select i1 %50, i32 -536870912, i32 0
  %52 = add i32 %51, %2
  %53 = bitcast i32 %52 to float
  %54 = ashr i32 %49, 31
  %55 = xor i32 %54, 1073741823
  %56 = and i32 %55, %49
  %57 = shl i32 %56, 2
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %58
  %60 = and i32 %52, -4096
  %61 = bitcast i32 %60 to float
  %62 = fsub float %53, %61
  %63 = bitcast float* %59 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 4, !tbaa !3
  %65 = insertelement <2 x float> undef, float %53, i32 0
  %66 = shufflevector <2 x float> %65, <2 x float> undef, <2 x i32> zeroinitializer
  %67 = fmul <2 x float> %64, %66
  %68 = extractelement <2 x float> %67, i32 0
  %69 = bitcast float %68 to i32
  %70 = and i32 %69, -2147483648
  %71 = or i32 %70, 1258291200
  %72 = bitcast i32 %71 to float
  %73 = fmul float %68, 4.000000e+00
  %74 = bitcast float %73 to i32
  %75 = and i32 %74, 2147483647
  %76 = bitcast i32 %75 to float
  %77 = fcmp ule float %76, 0x4160000000000000
  %78 = fadd float %73, %72
  %79 = fsub float %78, %72
  %80 = bitcast float %79 to i32
  %81 = or i32 %70, %80
  %82 = bitcast i32 %81 to float
  %83 = select i1 %77, float %82, float %73
  %84 = and i32 %69, 2147483647
  %85 = bitcast i32 %84 to float
  %86 = fcmp ule float %85, 0x4160000000000000
  %87 = fadd float %68, %72
  %88 = fsub float %87, %72
  %89 = bitcast float %88 to i32
  %90 = or i32 %70, %89
  %91 = bitcast i32 %90 to float
  %92 = select i1 %86, float %91, float %68
  %93 = fmul float %83, 2.500000e-01
  %94 = fsub float %68, %93
  %95 = fmul float %92, 4.000000e+00
  %96 = fsub float %83, %95
  %97 = fptosi float %96 to i64
  %98 = bitcast <2 x float> %64 to <2 x i32>
  %99 = and <2 x i32> %98, <i32 -4096, i32 -4096>
  %100 = bitcast <2 x i32> %99 to <2 x float>
  %101 = fsub <2 x float> %64, %100
  %102 = insertelement <2 x float> undef, float %61, i32 0
  %103 = shufflevector <2 x float> %102, <2 x float> undef, <2 x i32> zeroinitializer
  %104 = fmul <2 x float> %103, %100
  %105 = fsub <2 x float> %104, %67
  %106 = insertelement <2 x float> undef, float %62, i32 0
  %107 = shufflevector <2 x float> %106, <2 x float> undef, <2 x i32> zeroinitializer
  %108 = fmul <2 x float> %107, %100
  %109 = fadd <2 x float> %108, %105
  %110 = fmul <2 x float> %101, %103
  %111 = fadd <2 x float> %110, %109
  %112 = fmul <2 x float> %107, %101
  %113 = fadd <2 x float> %112, %111
  %114 = extractelement <2 x float> %113, i32 0
  %115 = fadd float %114, %94
  %116 = fsub float %94, %115
  %117 = fadd float %114, %116
  %118 = extractelement <2 x float> %67, i32 1
  %119 = fadd float %118, %115
  %120 = fsub float %119, %115
  %121 = fsub float %119, %120
  %122 = fsub float %118, %120
  %123 = extractelement <2 x float> %113, i32 1
  %124 = fadd float %123, %117
  %125 = bitcast float %119 to i32
  %126 = and i32 %125, -2147483648
  %127 = or i32 %126, 1258291200
  %128 = bitcast i32 %127 to float
  %129 = fmul float %119, 4.000000e+00
  %130 = bitcast float %129 to i32
  %131 = and i32 %130, 2147483647
  %132 = bitcast i32 %131 to float
  %133 = fcmp ule float %132, 0x4160000000000000
  %134 = fadd float %129, %128
  %135 = fsub float %134, %128
  %136 = bitcast float %135 to i32
  %137 = or i32 %126, %136
  %138 = bitcast i32 %137 to float
  %139 = select i1 %133, float %138, float %129
  %140 = and i32 %125, 2147483647
  %141 = bitcast i32 %140 to float
  %142 = fcmp ule float %141, 0x4160000000000000
  %143 = fadd float %119, %128
  %144 = fsub float %143, %128
  %145 = bitcast float %144 to i32
  %146 = or i32 %126, %145
  %147 = bitcast i32 %146 to float
  %148 = select i1 %142, float %147, float %119
  %149 = fmul float %139, 2.500000e-01
  %150 = fsub float %119, %149
  %151 = fmul float %148, 4.000000e+00
  %152 = fsub float %139, %151
  %153 = fptosi float %152 to i64
  %154 = add i64 %153, %97
  %155 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %58
  %156 = load float, float* %155, align 4, !tbaa !3
  %157 = bitcast float %156 to i32
  %158 = and i32 %157, -4096
  %159 = bitcast i32 %158 to float
  %160 = fsub float %156, %159
  %161 = fmul float %156, %53
  %162 = fmul float %61, %159
  %163 = insertelement <2 x float> undef, float %162, i32 0
  %164 = insertelement <2 x float> %163, float %115, i32 1
  %165 = insertelement <2 x float> undef, float %161, i32 0
  %166 = insertelement <2 x float> %165, float %121, i32 1
  %167 = fsub <2 x float> %164, %166
  %168 = fmul float %160, %61
  %169 = insertelement <2 x float> undef, float %168, i32 0
  %170 = insertelement <2 x float> %169, float %122, i32 1
  %171 = fadd <2 x float> %170, %167
  %172 = fmul float %62, %159
  %173 = insertelement <2 x float> undef, float %172, i32 0
  %174 = insertelement <2 x float> %173, float %124, i32 1
  %175 = fadd <2 x float> %174, %171
  %176 = extractelement <2 x float> %175, i32 1
  %177 = fadd float %176, %150
  %178 = fsub float %150, %177
  %179 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %58
  %180 = load float, float* %179, align 4, !tbaa !3
  %181 = fmul float %62, %160
  %182 = insertelement <2 x float> undef, float %181, i32 0
  %183 = insertelement <2 x float> %182, float %178, i32 1
  %184 = fadd <2 x float> %183, %175
  %185 = fmul float %180, %53
  %186 = extractelement <2 x float> %184, i32 0
  %187 = fadd float %185, %186
  %188 = fadd float %161, %177
  %189 = fsub float %188, %177
  %190 = fsub float %188, %189
  %191 = fsub float %177, %190
  %192 = fsub float %161, %189
  %193 = fadd float %192, %191
  %194 = extractelement <2 x float> %184, i32 1
  %195 = fadd float %187, %194
  %196 = fadd float %195, %193
  %197 = fadd float %188, %196
  %198 = fsub float %188, %197
  %199 = fadd float %196, %198
  %200 = bitcast float %197 to i32
  %201 = and i32 %200, -4096
  %202 = bitcast i32 %201 to float
  %203 = fsub float %197, %202
  %204 = fmul float %197, 0x401921FB60000000
  %205 = fmul float %202, 6.281250e+00
  %206 = fsub float %205, %204
  %207 = fmul float %203, 6.281250e+00
  %208 = fadd float %207, %206
  %209 = fmul float %202, 0x3F5FB60000000000
  %210 = fadd float %209, %208
  %211 = fmul float %203, 0x3F5FB60000000000
  %212 = fadd float %211, %210
  %213 = fmul float %197, 0x3E8777A5C0000000
  %214 = fsub float %212, %213
  %215 = fmul float %199, 0x401921FB60000000
  %216 = fadd float %215, %214
  %217 = and i32 %52, 2147483647
  %218 = bitcast i32 %217 to float
  %219 = fcmp uge float %218, 0x3FE6666660000000
  %220 = select i1 %219, float %204, float %53
  %221 = select i1 %219, float %216, float 0.000000e+00
  %222 = shl i64 %154, 1
  %223 = and i64 %222, 6
  %224 = fcmp ule float %220, 0.000000e+00
  %225 = select i1 %224, i64 1, i64 2
  %226 = add nuw nsw i64 %225, %223
  %227 = trunc i64 %226 to i32
  %228 = lshr i32 %227, 2
  %229 = shl i64 %154, 63
  %230 = ashr exact i64 %229, 63
  %231 = trunc i64 %230 to i32
  %232 = bitcast float %220 to i32
  %233 = and i32 %232, -2147483648
  %234 = xor i32 %233, -1077342245
  %235 = bitcast i32 %234 to float
  %236 = or i32 %233, 859553070
  %237 = bitcast i32 %236 to float
  %238 = fadd float %220, %235
  %239 = fsub float %238, %220
  %240 = fsub float %238, %239
  %241 = fsub float %220, %240
  %242 = fsub float %235, %239
  %243 = fadd float %242, %241
  %244 = fadd float %221, %237
  %245 = fadd float %243, %244
  %246 = icmp eq i32 %231, 0
  %247 = select i1 %246, float %220, float %238
  %248 = select i1 %246, float %221, float %245
  %249 = fadd float %247, %248
  %250 = fcmp oeq float %0, 0x7FF0000000000000
  %251 = fcmp oeq float %0, 0xFFF0000000000000
  %252 = or i1 %250, %251
  %253 = fcmp uno float %0, 0.000000e+00
  %254 = or i1 %253, %252
  %255 = select i1 %254, float 0xFFFFFFFFE0000000, float %249
  br label %256

; <label>:256:                                    ; preds = %26, %46, %6
  %257 = phi i32 [ %16, %6 ], [ %36, %26 ], [ %228, %46 ]
  %258 = phi float [ %23, %6 ], [ %45, %26 ], [ %255, %46 ]
  %259 = fmul float %258, %258
  %260 = shl i32 %257, 31
  %261 = bitcast float %258 to i32
  %262 = xor i32 %260, %261
  %263 = bitcast i32 %262 to float
  %264 = fmul float %259, 0x3EC5E150E0000000
  %265 = fadd float %264, 0xBF29F75D60000000
  %266 = fmul float %259, %265
  %267 = fadd float %266, 0x3F8110EEE0000000
  %268 = fmul float %259, %267
  %269 = fadd float %268, 0xBFC55554C0000000
  %270 = fmul float %269, %263
  %271 = fmul float %259, %270
  %272 = fadd float %271, %263
  %273 = icmp eq i32 %2, -2147483648
  %274 = select i1 %273, float %0, float %272
  ret float %274
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cosf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %31, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fadd float %7, -5.000000e-01
  %9 = fcmp ogt float %8, 0.000000e+00
  %10 = select i1 %9, float 5.000000e-01, float -5.000000e-01
  %11 = fadd float %8, %10
  %12 = bitcast float %11 to i32
  %13 = fptosi float %11 to i32
  %14 = and i32 %13, 1
  %15 = sub i32 %12, %14
  %16 = bitcast i32 %15 to float
  %17 = fptosi float %16 to i32
  %18 = sext i32 %17 to i64
  %19 = shl nsw i64 %18, 1
  %20 = and i64 %19, 4294967294
  %21 = or i64 %20, 1
  %22 = trunc i64 %19 to i32
  %23 = or i32 %22, 1
  %24 = sitofp i32 %23 to float
  %25 = fmul float %24, 0x3FF921C000000000
  %26 = fsub float %0, %25
  %27 = fmul float %24, 0x3F0DAA0000000000
  %28 = fsub float %26, %27
  %29 = fmul float %24, 0x3E110B4620000000
  %30 = fsub float %28, %29
  br label %266

; <label>:31:                                     ; preds = %1
  %32 = fcmp uge float %4, 3.900000e+04
  br i1 %32, label %60, label %33, !prof !2

; <label>:33:                                     ; preds = %31
  %34 = fmul float %0, 0x3FD45F3060000000
  %35 = fadd float %34, -5.000000e-01
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = select i1 %36, float 5.000000e-01, float -5.000000e-01
  %38 = fadd float %35, %37
  %39 = bitcast float %38 to i32
  %40 = fptosi float %38 to i32
  %41 = and i32 %40, 1
  %42 = sub i32 %39, %41
  %43 = bitcast i32 %42 to float
  %44 = fptosi float %43 to i32
  %45 = sext i32 %44 to i64
  %46 = shl nsw i64 %45, 1
  %47 = and i64 %46, 4294967294
  %48 = or i64 %47, 1
  %49 = trunc i64 %46 to i32
  %50 = or i32 %49, 1
  %51 = sitofp i32 %50 to float
  %52 = fmul float %51, 0x3FF9200000000000
  %53 = fsub float %0, %52
  %54 = fmul float %51, 0x3F3FB00000000000
  %55 = fsub float %53, %54
  %56 = fmul float %51, 0x3E95100000000000
  %57 = fsub float %55, %56
  %58 = fmul float %51, 0x3DD0B46120000000
  %59 = fsub float %57, %58
  br label %266

; <label>:60:                                     ; preds = %31
  %61 = lshr i32 %2, 23
  %62 = and i32 %61, 255
  %63 = add nsw i32 %62, -152
  %64 = icmp ugt i32 %62, 217
  %65 = select i1 %64, i32 -536870912, i32 0
  %66 = add i32 %65, %2
  %67 = bitcast i32 %66 to float
  %68 = ashr i32 %63, 31
  %69 = xor i32 %68, 1073741823
  %70 = and i32 %69, %63
  %71 = shl i32 %70, 2
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %72
  %74 = and i32 %66, -4096
  %75 = bitcast i32 %74 to float
  %76 = fsub float %67, %75
  %77 = bitcast float* %73 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 4, !tbaa !3
  %79 = insertelement <2 x float> undef, float %67, i32 0
  %80 = shufflevector <2 x float> %79, <2 x float> undef, <2 x i32> zeroinitializer
  %81 = fmul <2 x float> %78, %80
  %82 = extractelement <2 x float> %81, i32 0
  %83 = bitcast float %82 to i32
  %84 = and i32 %83, -2147483648
  %85 = or i32 %84, 1258291200
  %86 = bitcast i32 %85 to float
  %87 = fmul float %82, 4.000000e+00
  %88 = bitcast float %87 to i32
  %89 = and i32 %88, 2147483647
  %90 = bitcast i32 %89 to float
  %91 = fcmp ule float %90, 0x4160000000000000
  %92 = fadd float %87, %86
  %93 = fsub float %92, %86
  %94 = bitcast float %93 to i32
  %95 = or i32 %84, %94
  %96 = bitcast i32 %95 to float
  %97 = select i1 %91, float %96, float %87
  %98 = and i32 %83, 2147483647
  %99 = bitcast i32 %98 to float
  %100 = fcmp ule float %99, 0x4160000000000000
  %101 = fadd float %82, %86
  %102 = fsub float %101, %86
  %103 = bitcast float %102 to i32
  %104 = or i32 %84, %103
  %105 = bitcast i32 %104 to float
  %106 = select i1 %100, float %105, float %82
  %107 = fmul float %97, 2.500000e-01
  %108 = fsub float %82, %107
  %109 = fmul float %106, 4.000000e+00
  %110 = fsub float %97, %109
  %111 = fptosi float %110 to i64
  %112 = bitcast <2 x float> %78 to <2 x i32>
  %113 = and <2 x i32> %112, <i32 -4096, i32 -4096>
  %114 = bitcast <2 x i32> %113 to <2 x float>
  %115 = fsub <2 x float> %78, %114
  %116 = insertelement <2 x float> undef, float %75, i32 0
  %117 = shufflevector <2 x float> %116, <2 x float> undef, <2 x i32> zeroinitializer
  %118 = fmul <2 x float> %117, %114
  %119 = fsub <2 x float> %118, %81
  %120 = insertelement <2 x float> undef, float %76, i32 0
  %121 = shufflevector <2 x float> %120, <2 x float> undef, <2 x i32> zeroinitializer
  %122 = fmul <2 x float> %121, %114
  %123 = fadd <2 x float> %122, %119
  %124 = fmul <2 x float> %115, %117
  %125 = fadd <2 x float> %124, %123
  %126 = fmul <2 x float> %121, %115
  %127 = fadd <2 x float> %126, %125
  %128 = extractelement <2 x float> %127, i32 0
  %129 = fadd float %128, %108
  %130 = fsub float %108, %129
  %131 = fadd float %128, %130
  %132 = extractelement <2 x float> %81, i32 1
  %133 = fadd float %132, %129
  %134 = fsub float %133, %129
  %135 = fsub float %133, %134
  %136 = fsub float %132, %134
  %137 = extractelement <2 x float> %127, i32 1
  %138 = fadd float %137, %131
  %139 = bitcast float %133 to i32
  %140 = and i32 %139, -2147483648
  %141 = or i32 %140, 1258291200
  %142 = bitcast i32 %141 to float
  %143 = fmul float %133, 4.000000e+00
  %144 = bitcast float %143 to i32
  %145 = and i32 %144, 2147483647
  %146 = bitcast i32 %145 to float
  %147 = fcmp ule float %146, 0x4160000000000000
  %148 = fadd float %143, %142
  %149 = fsub float %148, %142
  %150 = bitcast float %149 to i32
  %151 = or i32 %140, %150
  %152 = bitcast i32 %151 to float
  %153 = select i1 %147, float %152, float %143
  %154 = and i32 %139, 2147483647
  %155 = bitcast i32 %154 to float
  %156 = fcmp ule float %155, 0x4160000000000000
  %157 = fadd float %133, %142
  %158 = fsub float %157, %142
  %159 = bitcast float %158 to i32
  %160 = or i32 %140, %159
  %161 = bitcast i32 %160 to float
  %162 = select i1 %156, float %161, float %133
  %163 = fmul float %153, 2.500000e-01
  %164 = fsub float %133, %163
  %165 = fmul float %162, 4.000000e+00
  %166 = fsub float %153, %165
  %167 = fptosi float %166 to i64
  %168 = add i64 %167, %111
  %169 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %72
  %170 = load float, float* %169, align 4, !tbaa !3
  %171 = bitcast float %170 to i32
  %172 = and i32 %171, -4096
  %173 = bitcast i32 %172 to float
  %174 = fsub float %170, %173
  %175 = fmul float %170, %67
  %176 = fmul float %75, %173
  %177 = insertelement <2 x float> undef, float %176, i32 0
  %178 = insertelement <2 x float> %177, float %129, i32 1
  %179 = insertelement <2 x float> undef, float %175, i32 0
  %180 = insertelement <2 x float> %179, float %135, i32 1
  %181 = fsub <2 x float> %178, %180
  %182 = fmul float %174, %75
  %183 = insertelement <2 x float> undef, float %182, i32 0
  %184 = insertelement <2 x float> %183, float %136, i32 1
  %185 = fadd <2 x float> %184, %181
  %186 = fmul float %76, %173
  %187 = insertelement <2 x float> undef, float %186, i32 0
  %188 = insertelement <2 x float> %187, float %138, i32 1
  %189 = fadd <2 x float> %188, %185
  %190 = extractelement <2 x float> %189, i32 1
  %191 = fadd float %190, %164
  %192 = fsub float %164, %191
  %193 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %72
  %194 = load float, float* %193, align 4, !tbaa !3
  %195 = fmul float %76, %174
  %196 = insertelement <2 x float> undef, float %195, i32 0
  %197 = insertelement <2 x float> %196, float %192, i32 1
  %198 = fadd <2 x float> %197, %189
  %199 = fmul float %194, %67
  %200 = extractelement <2 x float> %198, i32 0
  %201 = fadd float %199, %200
  %202 = fadd float %175, %191
  %203 = fsub float %202, %191
  %204 = fsub float %202, %203
  %205 = fsub float %191, %204
  %206 = fsub float %175, %203
  %207 = fadd float %206, %205
  %208 = extractelement <2 x float> %198, i32 1
  %209 = fadd float %201, %208
  %210 = fadd float %209, %207
  %211 = fadd float %202, %210
  %212 = fsub float %202, %211
  %213 = fadd float %210, %212
  %214 = bitcast float %211 to i32
  %215 = and i32 %214, -4096
  %216 = bitcast i32 %215 to float
  %217 = fsub float %211, %216
  %218 = fmul float %211, 0x401921FB60000000
  %219 = fmul float %216, 6.281250e+00
  %220 = fsub float %219, %218
  %221 = fmul float %217, 6.281250e+00
  %222 = fadd float %221, %220
  %223 = fmul float %216, 0x3F5FB60000000000
  %224 = fadd float %223, %222
  %225 = fmul float %217, 0x3F5FB60000000000
  %226 = fadd float %225, %224
  %227 = fmul float %211, 0x3E8777A5C0000000
  %228 = fsub float %226, %227
  %229 = fmul float %213, 0x401921FB60000000
  %230 = fadd float %229, %228
  %231 = and i32 %66, 2147483647
  %232 = bitcast i32 %231 to float
  %233 = fcmp uge float %232, 0x3FE6666660000000
  %234 = select i1 %233, float %218, float %67
  %235 = select i1 %233, float %230, float 0.000000e+00
  %236 = shl i64 %168, 1
  %237 = and i64 %236, 6
  %238 = fcmp ule float %234, 0.000000e+00
  %239 = select i1 %238, i64 7, i64 8
  %240 = add nuw nsw i64 %239, %237
  %241 = lshr i64 %240, 1
  %242 = select i1 %238, i32 -2147483648, i32 0
  %243 = xor i32 %242, -1077342245
  %244 = bitcast i32 %243 to float
  %245 = or i32 %242, 859553070
  %246 = bitcast i32 %245 to float
  %247 = fadd float %234, %244
  %248 = fsub float %247, %234
  %249 = fsub float %247, %248
  %250 = fsub float %234, %249
  %251 = fsub float %244, %248
  %252 = fadd float %251, %250
  %253 = fadd float %235, %246
  %254 = fadd float %252, %253
  %255 = and i64 %168, 1
  %256 = icmp ne i64 %255, 0
  %257 = select i1 %256, float %234, float %247
  %258 = select i1 %256, float %235, float %254
  %259 = fadd float %257, %258
  %260 = fcmp oeq float %0, 0x7FF0000000000000
  %261 = fcmp oeq float %0, 0xFFF0000000000000
  %262 = or i1 %260, %261
  %263 = fcmp uno float %0, 0.000000e+00
  %264 = or i1 %263, %262
  %265 = select i1 %264, float 0xFFFFFFFFE0000000, float %259
  br label %266

; <label>:266:                                    ; preds = %33, %60, %6
  %267 = phi i64 [ %21, %6 ], [ %48, %33 ], [ %241, %60 ]
  %268 = phi float [ %30, %6 ], [ %59, %33 ], [ %265, %60 ]
  %269 = fmul float %268, %268
  %270 = lshr i64 %267, 1
  %271 = bitcast float %268 to i32
  %272 = trunc i64 %270 to i32
  %273 = and i32 %272, 1
  %274 = add nsw i32 %273, -1
  %275 = and i32 %274, -2147483648
  %276 = xor i32 %275, %271
  %277 = bitcast i32 %276 to float
  %278 = fmul float %269, 0x3EC5E150E0000000
  %279 = fadd float %278, 0xBF29F75D60000000
  %280 = fmul float %269, %279
  %281 = fadd float %280, 0x3F8110EEE0000000
  %282 = fmul float %269, %281
  %283 = fadd float %282, 0xBFC55554C0000000
  %284 = fmul float %283, %277
  %285 = fmul float %269, %284
  %286 = fadd float %285, %277
  ret float %286
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 6.250000e+01
  br i1 %5, label %25, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp ogt float %7, 0.000000e+00
  %9 = select i1 %8, float 5.000000e-01, float -5.000000e-01
  %10 = fadd float %7, %9
  %11 = bitcast float %10 to i32
  %12 = fptosi float %10 to i32
  %13 = and i32 %12, 1
  %14 = sub i32 %11, %13
  %15 = bitcast i32 %14 to float
  %16 = fptosi float %15 to i32
  %17 = sext i32 %16 to i64
  %18 = sitofp i32 %16 to float
  %19 = fmul float %18, 0x3FF921C000000000
  %20 = fsub float %0, %19
  %21 = fmul float %18, 0x3F0DAA0000000000
  %22 = fsub float %20, %21
  %23 = fmul float %18, 0x3E110B4620000000
  %24 = fsub float %22, %23
  br label %229

; <label>:25:                                     ; preds = %1
  %26 = fcmp uge float %4, 3.900000e+04
  br i1 %26, label %48, label %27, !prof !2

; <label>:27:                                     ; preds = %25
  %28 = fmul float %0, 0x3FE45F3060000000
  %29 = fcmp ogt float %28, 0.000000e+00
  %30 = select i1 %29, float 5.000000e-01, float -5.000000e-01
  %31 = fadd float %28, %30
  %32 = bitcast float %31 to i32
  %33 = fptosi float %31 to i32
  %34 = and i32 %33, 1
  %35 = sub i32 %32, %34
  %36 = bitcast i32 %35 to float
  %37 = fptosi float %36 to i32
  %38 = sext i32 %37 to i64
  %39 = sitofp i32 %37 to float
  %40 = fmul float %39, 0x3FF9200000000000
  %41 = fsub float %0, %40
  %42 = fmul float %39, 0x3F3FB00000000000
  %43 = fsub float %41, %42
  %44 = fmul float %39, 0x3E95100000000000
  %45 = fsub float %43, %44
  %46 = fmul float %39, 0x3DD0B46120000000
  %47 = fsub float %45, %46
  br label %229

; <label>:48:                                     ; preds = %25
  %49 = lshr i32 %2, 23
  %50 = and i32 %49, 255
  %51 = add nsw i32 %50, -152
  %52 = icmp ugt i32 %50, 217
  %53 = select i1 %52, i32 -536870912, i32 0
  %54 = add i32 %53, %2
  %55 = bitcast i32 %54 to float
  %56 = ashr i32 %51, 31
  %57 = xor i32 %56, 1073741823
  %58 = and i32 %57, %51
  %59 = shl i32 %58, 2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !3
  %63 = and i32 %54, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %55, %64
  %66 = bitcast float %62 to i32
  %67 = and i32 %66, -4096
  %68 = bitcast i32 %67 to float
  %69 = fsub float %62, %68
  %70 = fmul float %62, %55
  %71 = fmul float %64, %68
  %72 = fsub float %71, %70
  %73 = fmul float %65, %68
  %74 = fadd float %73, %72
  %75 = fmul float %69, %64
  %76 = fadd float %75, %74
  %77 = fmul float %65, %69
  %78 = fadd float %77, %76
  %79 = bitcast float %70 to i32
  %80 = and i32 %79, -2147483648
  %81 = or i32 %80, 1258291200
  %82 = bitcast i32 %81 to float
  %83 = fmul float %70, 4.000000e+00
  %84 = bitcast float %83 to i32
  %85 = and i32 %84, 2147483647
  %86 = bitcast i32 %85 to float
  %87 = fcmp ule float %86, 0x4160000000000000
  %88 = fadd float %83, %82
  %89 = fsub float %88, %82
  %90 = bitcast float %89 to i32
  %91 = or i32 %80, %90
  %92 = bitcast i32 %91 to float
  %93 = select i1 %87, float %92, float %83
  %94 = and i32 %79, 2147483647
  %95 = bitcast i32 %94 to float
  %96 = fcmp ule float %95, 0x4160000000000000
  %97 = fadd float %70, %82
  %98 = fsub float %97, %82
  %99 = bitcast float %98 to i32
  %100 = or i32 %80, %99
  %101 = bitcast i32 %100 to float
  %102 = select i1 %96, float %101, float %70
  %103 = fmul float %93, 2.500000e-01
  %104 = fsub float %70, %103
  %105 = fmul float %102, 4.000000e+00
  %106 = fsub float %93, %105
  %107 = fptosi float %106 to i64
  %108 = fadd float %78, %104
  %109 = fsub float %104, %108
  %110 = fadd float %78, %109
  %111 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %60
  %112 = load float, float* %111, align 4, !tbaa !3
  %113 = bitcast float %112 to i32
  %114 = and i32 %113, -4096
  %115 = bitcast i32 %114 to float
  %116 = fsub float %112, %115
  %117 = fmul float %112, %55
  %118 = fmul float %64, %115
  %119 = fsub float %118, %117
  %120 = fmul float %65, %115
  %121 = fadd float %120, %119
  %122 = fmul float %116, %64
  %123 = fadd float %122, %121
  %124 = fmul float %65, %116
  %125 = fadd float %124, %123
  %126 = fadd float %117, %108
  %127 = fsub float %126, %108
  %128 = fsub float %126, %127
  %129 = fsub float %108, %128
  %130 = fsub float %117, %127
  %131 = fadd float %130, %129
  %132 = fadd float %125, %110
  %133 = fadd float %132, %131
  %134 = bitcast float %126 to i32
  %135 = and i32 %134, -2147483648
  %136 = or i32 %135, 1258291200
  %137 = bitcast i32 %136 to float
  %138 = fmul float %126, 4.000000e+00
  %139 = bitcast float %138 to i32
  %140 = and i32 %139, 2147483647
  %141 = bitcast i32 %140 to float
  %142 = fcmp ule float %141, 0x4160000000000000
  %143 = fadd float %138, %137
  %144 = fsub float %143, %137
  %145 = bitcast float %144 to i32
  %146 = or i32 %135, %145
  %147 = bitcast i32 %146 to float
  %148 = select i1 %142, float %147, float %138
  %149 = and i32 %134, 2147483647
  %150 = bitcast i32 %149 to float
  %151 = fcmp ule float %150, 0x4160000000000000
  %152 = fadd float %126, %137
  %153 = fsub float %152, %137
  %154 = bitcast float %153 to i32
  %155 = or i32 %135, %154
  %156 = bitcast i32 %155 to float
  %157 = select i1 %151, float %156, float %126
  %158 = fmul float %148, 2.500000e-01
  %159 = fsub float %126, %158
  %160 = fmul float %157, 4.000000e+00
  %161 = fsub float %148, %160
  %162 = fptosi float %161 to i64
  %163 = add i64 %162, %107
  %164 = and i64 %163, 4294967295
  %165 = fadd float %133, %159
  %166 = fsub float %159, %165
  %167 = fadd float %133, %166
  %168 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %60
  %169 = load float, float* %168, align 4, !tbaa !3
  %170 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %60
  %171 = load float, float* %170, align 4, !tbaa !3
  %172 = bitcast float %169 to i32
  %173 = and i32 %172, -4096
  %174 = bitcast i32 %173 to float
  %175 = fsub float %169, %174
  %176 = fmul float %169, %55
  %177 = fmul float %64, %174
  %178 = fsub float %177, %176
  %179 = fmul float %175, %64
  %180 = fadd float %179, %178
  %181 = fmul float %65, %174
  %182 = fadd float %181, %180
  %183 = fmul float %65, %175
  %184 = fadd float %183, %182
  %185 = fmul float %171, %55
  %186 = fadd float %185, %184
  %187 = fadd float %176, %165
  %188 = fsub float %187, %165
  %189 = fsub float %187, %188
  %190 = fsub float %165, %189
  %191 = fsub float %176, %188
  %192 = fadd float %191, %190
  %193 = fadd float %186, %167
  %194 = fadd float %193, %192
  %195 = fadd float %187, %194
  %196 = fsub float %187, %195
  %197 = fadd float %194, %196
  %198 = bitcast float %195 to i32
  %199 = and i32 %198, -4096
  %200 = bitcast i32 %199 to float
  %201 = fsub float %195, %200
  %202 = fmul float %195, 0x401921FB60000000
  %203 = fmul float %200, 6.281250e+00
  %204 = fsub float %203, %202
  %205 = fmul float %201, 6.281250e+00
  %206 = fadd float %205, %204
  %207 = fmul float %200, 0x3F5FB60000000000
  %208 = fadd float %207, %206
  %209 = fmul float %201, 0x3F5FB60000000000
  %210 = fadd float %209, %208
  %211 = fmul float %195, 0x3E8777A5C0000000
  %212 = fsub float %210, %211
  %213 = fmul float %197, 0x401921FB60000000
  %214 = fadd float %213, %212
  %215 = and i32 %54, 2147483647
  %216 = bitcast i32 %215 to float
  %217 = fcmp uge float %216, 0x3FE6666660000000
  %218 = select i1 %217, float %202, float %55
  %219 = select i1 %217, float %214, float 0.000000e+00
  %220 = fadd float %218, %219
  %221 = fcmp oeq float %0, 0x7FF0000000000000
  %222 = fcmp oeq float %0, 0xFFF0000000000000
  %223 = or i1 %221, %222
  %224 = fcmp uno float %0, 0.000000e+00
  %225 = or i1 %224, %223
  %226 = select i1 %225, float 0xFFFFFFFFE0000000, float %220
  %227 = icmp eq i32 %2, -2147483648
  %228 = select i1 %227, float %0, float %226
  br label %229

; <label>:229:                                    ; preds = %27, %48, %6
  %230 = phi float [ %24, %6 ], [ %47, %27 ], [ %228, %48 ]
  %231 = phi i64 [ %17, %6 ], [ %38, %27 ], [ %164, %48 ]
  %232 = fmul float %230, %230
  %233 = shl i64 %231, 63
  %234 = ashr exact i64 %233, 63
  %235 = trunc i64 %234 to i32
  %236 = bitcast float %230 to i32
  %237 = and i32 %235, -2147483648
  %238 = xor i32 %237, %236
  %239 = bitcast i32 %238 to float
  %240 = fmul float %232, %232
  %241 = fmul float %240, %240
  %242 = fmul float %232, 0x3F82FD7040000000
  %243 = fadd float %242, 0x3F6B323AE0000000
  %244 = fmul float %232, 0x3F98E20C80000000
  %245 = fadd float %244, 0x3FAB5DBCA0000000
  %246 = fmul float %232, 0x3FC112B1C0000000
  %247 = fadd float %246, 0x3FD5554F20000000
  %248 = fmul float %240, %245
  %249 = fadd float %247, %248
  %250 = fmul float %241, %243
  %251 = fadd float %250, %249
  %252 = fmul float %251, %239
  %253 = fmul float %232, %252
  %254 = fadd float %253, %239
  %255 = fdiv float 1.000000e+00, %254
  %256 = icmp eq i32 %235, 0
  %257 = select i1 %256, float %254, float %255
  ret float %257
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %43, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fcmp ogt float %7, 0.000000e+00
  %9 = select i1 %8, float 5.000000e-01, float -5.000000e-01
  %10 = fadd float %7, %9
  %11 = bitcast float %10 to i32
  %12 = fptosi float %10 to i32
  %13 = and i32 %12, 1
  %14 = sub i32 %11, %13
  %15 = bitcast i32 %14 to float
  %16 = fptosi float %15 to i32
  %17 = sitofp i32 %16 to float
  %18 = icmp sgt i32 %16, 0
  %19 = select i1 %18, float 5.000000e-01, float -5.000000e-01
  %20 = fadd float %19, %17
  %21 = bitcast float %20 to i32
  %22 = fptosi float %20 to i32
  %23 = and i32 %22, 1
  %24 = sub i32 %21, %23
  %25 = bitcast i32 %24 to float
  %26 = fptosi float %25 to i32
  %27 = fmul float %17, 0x400921C000000000
  %28 = fsub float %0, %27
  %29 = fmul float %17, 0xBF1DAA0000000000
  %30 = fadd float %29, %28
  %31 = fsub float %30, %28
  %32 = fsub float %30, %31
  %33 = fsub float %28, %32
  %34 = fsub float %29, %31
  %35 = fadd float %34, %33
  %36 = fmul float %17, 0xBE210B4620000000
  %37 = fadd float %36, %30
  %38 = fsub float %30, %37
  %39 = fadd float %36, %38
  %40 = fadd float %39, %35
  %41 = insertelement <2 x float> undef, float %37, i32 0
  %42 = insertelement <2 x float> %41, float %40, i32 1
  br label %257

; <label>:43:                                     ; preds = %1
  %44 = lshr i32 %2, 23
  %45 = and i32 %44, 255
  %46 = add nsw i32 %45, -152
  %47 = icmp ugt i32 %45, 217
  %48 = select i1 %47, i32 -536870912, i32 0
  %49 = add i32 %48, %2
  %50 = bitcast i32 %49 to float
  %51 = ashr i32 %46, 31
  %52 = xor i32 %51, 1073741823
  %53 = and i32 %52, %46
  %54 = shl i32 %53, 2
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %55
  %57 = and i32 %49, -4096
  %58 = bitcast i32 %57 to float
  %59 = fsub float %50, %58
  %60 = bitcast float* %56 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 4, !tbaa !3
  %62 = insertelement <2 x float> undef, float %50, i32 0
  %63 = shufflevector <2 x float> %62, <2 x float> undef, <2 x i32> zeroinitializer
  %64 = fmul <2 x float> %61, %63
  %65 = extractelement <2 x float> %64, i32 0
  %66 = bitcast float %65 to i32
  %67 = and i32 %66, -2147483648
  %68 = or i32 %67, 1258291200
  %69 = bitcast i32 %68 to float
  %70 = fmul float %65, 4.000000e+00
  %71 = bitcast float %70 to i32
  %72 = and i32 %71, 2147483647
  %73 = bitcast i32 %72 to float
  %74 = fcmp ule float %73, 0x4160000000000000
  %75 = fadd float %70, %69
  %76 = fsub float %75, %69
  %77 = bitcast float %76 to i32
  %78 = or i32 %67, %77
  %79 = bitcast i32 %78 to float
  %80 = select i1 %74, float %79, float %70
  %81 = and i32 %66, 2147483647
  %82 = bitcast i32 %81 to float
  %83 = fcmp ule float %82, 0x4160000000000000
  %84 = fadd float %65, %69
  %85 = fsub float %84, %69
  %86 = bitcast float %85 to i32
  %87 = or i32 %67, %86
  %88 = bitcast i32 %87 to float
  %89 = select i1 %83, float %88, float %65
  %90 = fmul float %80, 2.500000e-01
  %91 = fsub float %65, %90
  %92 = fmul float %89, 4.000000e+00
  %93 = fsub float %80, %92
  %94 = fptosi float %93 to i64
  %95 = bitcast <2 x float> %61 to <2 x i32>
  %96 = and <2 x i32> %95, <i32 -4096, i32 -4096>
  %97 = bitcast <2 x i32> %96 to <2 x float>
  %98 = fsub <2 x float> %61, %97
  %99 = insertelement <2 x float> undef, float %58, i32 0
  %100 = shufflevector <2 x float> %99, <2 x float> undef, <2 x i32> zeroinitializer
  %101 = fmul <2 x float> %100, %97
  %102 = fsub <2 x float> %101, %64
  %103 = insertelement <2 x float> undef, float %59, i32 0
  %104 = shufflevector <2 x float> %103, <2 x float> undef, <2 x i32> zeroinitializer
  %105 = fmul <2 x float> %104, %97
  %106 = fadd <2 x float> %105, %102
  %107 = fmul <2 x float> %98, %100
  %108 = fadd <2 x float> %107, %106
  %109 = fmul <2 x float> %104, %98
  %110 = fadd <2 x float> %109, %108
  %111 = extractelement <2 x float> %110, i32 0
  %112 = fadd float %111, %91
  %113 = fsub float %91, %112
  %114 = fadd float %111, %113
  %115 = extractelement <2 x float> %64, i32 1
  %116 = fadd float %115, %112
  %117 = fsub float %116, %112
  %118 = fsub float %116, %117
  %119 = fsub float %115, %117
  %120 = extractelement <2 x float> %110, i32 1
  %121 = fadd float %120, %114
  %122 = bitcast float %116 to i32
  %123 = and i32 %122, -2147483648
  %124 = or i32 %123, 1258291200
  %125 = bitcast i32 %124 to float
  %126 = fmul float %116, 4.000000e+00
  %127 = bitcast float %126 to i32
  %128 = and i32 %127, 2147483647
  %129 = bitcast i32 %128 to float
  %130 = fcmp ule float %129, 0x4160000000000000
  %131 = fadd float %126, %125
  %132 = fsub float %131, %125
  %133 = bitcast float %132 to i32
  %134 = or i32 %123, %133
  %135 = bitcast i32 %134 to float
  %136 = select i1 %130, float %135, float %126
  %137 = and i32 %122, 2147483647
  %138 = bitcast i32 %137 to float
  %139 = fcmp ule float %138, 0x4160000000000000
  %140 = fadd float %116, %125
  %141 = fsub float %140, %125
  %142 = bitcast float %141 to i32
  %143 = or i32 %123, %142
  %144 = bitcast i32 %143 to float
  %145 = select i1 %139, float %144, float %116
  %146 = fmul float %136, 2.500000e-01
  %147 = fsub float %116, %146
  %148 = fmul float %145, 4.000000e+00
  %149 = fsub float %136, %148
  %150 = fptosi float %149 to i64
  %151 = add i64 %150, %94
  %152 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %55
  %153 = load float, float* %152, align 4, !tbaa !3
  %154 = bitcast float %153 to i32
  %155 = and i32 %154, -4096
  %156 = bitcast i32 %155 to float
  %157 = fsub float %153, %156
  %158 = fmul float %153, %50
  %159 = fmul float %58, %156
  %160 = insertelement <2 x float> undef, float %159, i32 0
  %161 = insertelement <2 x float> %160, float %112, i32 1
  %162 = insertelement <2 x float> undef, float %158, i32 0
  %163 = insertelement <2 x float> %162, float %118, i32 1
  %164 = fsub <2 x float> %161, %163
  %165 = fmul float %157, %58
  %166 = insertelement <2 x float> undef, float %165, i32 0
  %167 = insertelement <2 x float> %166, float %119, i32 1
  %168 = fadd <2 x float> %167, %164
  %169 = fmul float %59, %156
  %170 = insertelement <2 x float> undef, float %169, i32 0
  %171 = insertelement <2 x float> %170, float %121, i32 1
  %172 = fadd <2 x float> %171, %168
  %173 = extractelement <2 x float> %172, i32 1
  %174 = fadd float %173, %147
  %175 = fsub float %147, %174
  %176 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %55
  %177 = load float, float* %176, align 4, !tbaa !3
  %178 = fmul float %59, %157
  %179 = insertelement <2 x float> undef, float %178, i32 0
  %180 = insertelement <2 x float> %179, float %175, i32 1
  %181 = fadd <2 x float> %180, %172
  %182 = fmul float %177, %50
  %183 = extractelement <2 x float> %181, i32 0
  %184 = fadd float %182, %183
  %185 = fadd float %158, %174
  %186 = fsub float %185, %174
  %187 = fsub float %185, %186
  %188 = fsub float %174, %187
  %189 = fsub float %158, %186
  %190 = fadd float %189, %188
  %191 = extractelement <2 x float> %181, i32 1
  %192 = fadd float %184, %191
  %193 = fadd float %192, %190
  %194 = fadd float %185, %193
  %195 = fsub float %185, %194
  %196 = fadd float %193, %195
  %197 = bitcast float %194 to i32
  %198 = and i32 %197, -4096
  %199 = bitcast i32 %198 to float
  %200 = fsub float %194, %199
  %201 = fmul float %194, 0x401921FB60000000
  %202 = fmul float %199, 6.281250e+00
  %203 = fsub float %202, %201
  %204 = fmul float %200, 6.281250e+00
  %205 = fadd float %204, %203
  %206 = fmul float %199, 0x3F5FB60000000000
  %207 = fadd float %206, %205
  %208 = fmul float %200, 0x3F5FB60000000000
  %209 = fadd float %208, %207
  %210 = fmul float %194, 0x3E8777A5C0000000
  %211 = fsub float %209, %210
  %212 = fmul float %196, 0x401921FB60000000
  %213 = fadd float %212, %211
  %214 = and i32 %49, 2147483647
  %215 = bitcast i32 %214 to float
  %216 = fcmp uge float %215, 0x3FE6666660000000
  %217 = select i1 %216, float %201, float %50
  %218 = select i1 %216, float %213, float 0.000000e+00
  %219 = shl i64 %151, 1
  %220 = and i64 %219, 6
  %221 = fcmp ule float %217, 0.000000e+00
  %222 = select i1 %221, i64 1, i64 2
  %223 = add nuw nsw i64 %222, %220
  %224 = trunc i64 %223 to i32
  %225 = lshr i32 %224, 2
  %226 = shl i64 %151, 63
  %227 = ashr exact i64 %226, 63
  %228 = trunc i64 %227 to i32
  %229 = bitcast float %217 to i32
  %230 = and i32 %229, -2147483648
  %231 = xor i32 %230, -1077342245
  %232 = bitcast i32 %231 to float
  %233 = or i32 %230, 859553070
  %234 = bitcast i32 %233 to float
  %235 = fadd float %217, %232
  %236 = fsub float %235, %217
  %237 = fsub float %235, %236
  %238 = fsub float %217, %237
  %239 = fsub float %232, %236
  %240 = fadd float %239, %238
  %241 = fadd float %218, %234
  %242 = fadd float %240, %241
  %243 = icmp eq i32 %228, 0
  %244 = select i1 %243, float %217, float %235
  %245 = select i1 %243, float %218, float %242
  %246 = fadd float %244, %245
  %247 = fsub float %244, %246
  %248 = fadd float %245, %247
  %249 = insertelement <2 x float> undef, float %248, i32 1
  %250 = fcmp oeq float %0, 0x7FF0000000000000
  %251 = fcmp oeq float %0, 0xFFF0000000000000
  %252 = or i1 %250, %251
  %253 = fcmp uno float %0, 0.000000e+00
  %254 = or i1 %253, %252
  %255 = select i1 %254, float 0xFFFFFFFFE0000000, float %246
  %256 = insertelement <2 x float> %249, float %255, i32 0
  br label %257

; <label>:257:                                    ; preds = %43, %6
  %258 = phi <2 x float> [ %42, %6 ], [ %256, %43 ]
  %259 = phi i32 [ %26, %6 ], [ %225, %43 ]
  %260 = extractelement <2 x float> %258, i32 0
  %261 = bitcast float %260 to i32
  %262 = and i32 %261, -4096
  %263 = bitcast i32 %262 to float
  %264 = fsub float %260, %263
  %265 = fmul float %260, %260
  %266 = fmul float %263, %263
  %267 = fsub float %266, %265
  %268 = fadd float %263, %263
  %269 = fmul float %268, %264
  %270 = fadd float %269, %267
  %271 = fmul float %264, %264
  %272 = fadd float %271, %270
  %273 = extractelement <2 x float> %258, i32 1
  %274 = fadd float %273, %273
  %275 = fmul float %260, %274
  %276 = fadd float %275, %272
  %277 = fmul float %265, 0x3EC5E150E0000000
  %278 = fadd float %277, 0xBF29F75D60000000
  %279 = fmul float %265, %278
  %280 = fadd float %279, 0x3F8110EEE0000000
  %281 = fmul float %265, %280
  %282 = fadd float %281, 0xBFC55554C0000000
  %283 = fsub float 0xBFC55554C0000000, %282
  %284 = fadd float %281, %283
  %285 = bitcast float %282 to i32
  %286 = and i32 %285, -4096
  %287 = bitcast i32 %286 to float
  %288 = fsub float %282, %287
  %289 = bitcast float %265 to i32
  %290 = and i32 %289, -4096
  %291 = bitcast i32 %290 to float
  %292 = fsub float %265, %291
  %293 = fmul float %265, %282
  %294 = fmul float %291, %287
  %295 = fsub float %294, %293
  %296 = fmul float %288, %291
  %297 = fadd float %296, %295
  %298 = fmul float %292, %287
  %299 = fadd float %298, %297
  %300 = fmul float %292, %288
  %301 = fadd float %300, %299
  %302 = fmul float %282, %276
  %303 = fadd float %302, %301
  %304 = fmul float %265, %284
  %305 = fadd float %304, %303
  %306 = fadd float %293, 1.000000e+00
  %307 = fsub float 1.000000e+00, %306
  %308 = fadd float %293, %307
  %309 = fadd float %308, %305
  %310 = bitcast float %306 to i32
  %311 = and i32 %310, -4096
  %312 = bitcast i32 %311 to float
  %313 = fsub float %306, %312
  %314 = fmul float %273, %312
  %315 = fmul float %309, %263
  %316 = fmul float %264, %313
  %317 = fmul float %313, %263
  %318 = fmul float %264, %312
  %319 = fmul float %263, %312
  %320 = fadd float %314, %315
  %321 = fadd float %316, %320
  %322 = fadd float %317, %321
  %323 = fadd float %318, %322
  %324 = fadd float %319, %323
  %325 = shl i32 %259, 31
  %326 = bitcast float %324 to i32
  %327 = xor i32 %325, %326
  %328 = bitcast i32 %327 to float
  %329 = icmp eq i32 %2, -2147483648
  %330 = select i1 %329, float %0, float %328
  ret float %330
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cosf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %55, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fadd float %7, -5.000000e-01
  %9 = fcmp ogt float %8, 0.000000e+00
  %10 = select i1 %9, float 5.000000e-01, float -5.000000e-01
  %11 = fadd float %8, %10
  %12 = bitcast float %11 to i32
  %13 = fptosi float %11 to i32
  %14 = and i32 %13, 1
  %15 = sub i32 %12, %14
  %16 = bitcast i32 %15 to float
  %17 = fptosi float %16 to i32
  %18 = sitofp i32 %17 to float
  %19 = fmul float %18, 2.000000e+00
  %20 = fadd float %19, 1.000000e+00
  %21 = fcmp ogt float %20, 0.000000e+00
  %22 = select i1 %21, float 5.000000e-01, float -5.000000e-01
  %23 = fadd float %20, %22
  %24 = bitcast float %23 to i32
  %25 = fptosi float %23 to i32
  %26 = and i32 %25, 1
  %27 = sub i32 %24, %26
  %28 = bitcast i32 %27 to float
  %29 = fptosi float %28 to i32
  %30 = fmul float %20, 0xBFF921C000000000
  %31 = fadd float %30, %0
  %32 = fsub float %31, %0
  %33 = fsub float %31, %32
  %34 = fsub float %0, %33
  %35 = fsub float %30, %32
  %36 = fadd float %35, %34
  %37 = fmul float %20, 0xBF0DAA0000000000
  %38 = fadd float %37, %31
  %39 = fsub float %38, %31
  %40 = fsub float %38, %39
  %41 = fsub float %31, %40
  %42 = fsub float %37, %39
  %43 = fadd float %42, %41
  %44 = fadd float %36, %43
  %45 = fmul float %20, 0xBE110B4620000000
  %46 = fadd float %45, %38
  %47 = fsub float %46, %38
  %48 = fsub float %46, %47
  %49 = fsub float %38, %48
  %50 = fsub float %45, %47
  %51 = fadd float %50, %49
  %52 = fadd float %44, %51
  %53 = insertelement <2 x float> undef, float %46, i32 0
  %54 = insertelement <2 x float> %53, float %52, i32 1
  br label %266

; <label>:55:                                     ; preds = %1
  %56 = lshr i32 %2, 23
  %57 = and i32 %56, 255
  %58 = add nsw i32 %57, -152
  %59 = icmp ugt i32 %57, 217
  %60 = select i1 %59, i32 -536870912, i32 0
  %61 = add i32 %60, %2
  %62 = bitcast i32 %61 to float
  %63 = ashr i32 %58, 31
  %64 = xor i32 %63, 1073741823
  %65 = and i32 %64, %58
  %66 = shl i32 %65, 2
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %67
  %69 = and i32 %61, -4096
  %70 = bitcast i32 %69 to float
  %71 = fsub float %62, %70
  %72 = bitcast float* %68 to <2 x float>*
  %73 = load <2 x float>, <2 x float>* %72, align 4, !tbaa !3
  %74 = insertelement <2 x float> undef, float %62, i32 0
  %75 = shufflevector <2 x float> %74, <2 x float> undef, <2 x i32> zeroinitializer
  %76 = fmul <2 x float> %73, %75
  %77 = extractelement <2 x float> %76, i32 0
  %78 = bitcast float %77 to i32
  %79 = and i32 %78, -2147483648
  %80 = or i32 %79, 1258291200
  %81 = bitcast i32 %80 to float
  %82 = fmul float %77, 4.000000e+00
  %83 = bitcast float %82 to i32
  %84 = and i32 %83, 2147483647
  %85 = bitcast i32 %84 to float
  %86 = fcmp ule float %85, 0x4160000000000000
  %87 = fadd float %82, %81
  %88 = fsub float %87, %81
  %89 = bitcast float %88 to i32
  %90 = or i32 %79, %89
  %91 = bitcast i32 %90 to float
  %92 = select i1 %86, float %91, float %82
  %93 = and i32 %78, 2147483647
  %94 = bitcast i32 %93 to float
  %95 = fcmp ule float %94, 0x4160000000000000
  %96 = fadd float %77, %81
  %97 = fsub float %96, %81
  %98 = bitcast float %97 to i32
  %99 = or i32 %79, %98
  %100 = bitcast i32 %99 to float
  %101 = select i1 %95, float %100, float %77
  %102 = fmul float %92, 2.500000e-01
  %103 = fsub float %77, %102
  %104 = fmul float %101, 4.000000e+00
  %105 = fsub float %92, %104
  %106 = fptosi float %105 to i64
  %107 = bitcast <2 x float> %73 to <2 x i32>
  %108 = and <2 x i32> %107, <i32 -4096, i32 -4096>
  %109 = bitcast <2 x i32> %108 to <2 x float>
  %110 = fsub <2 x float> %73, %109
  %111 = insertelement <2 x float> undef, float %70, i32 0
  %112 = shufflevector <2 x float> %111, <2 x float> undef, <2 x i32> zeroinitializer
  %113 = fmul <2 x float> %112, %109
  %114 = fsub <2 x float> %113, %76
  %115 = insertelement <2 x float> undef, float %71, i32 0
  %116 = shufflevector <2 x float> %115, <2 x float> undef, <2 x i32> zeroinitializer
  %117 = fmul <2 x float> %116, %109
  %118 = fadd <2 x float> %117, %114
  %119 = fmul <2 x float> %110, %112
  %120 = fadd <2 x float> %119, %118
  %121 = fmul <2 x float> %116, %110
  %122 = fadd <2 x float> %121, %120
  %123 = extractelement <2 x float> %122, i32 0
  %124 = fadd float %123, %103
  %125 = fsub float %103, %124
  %126 = fadd float %123, %125
  %127 = extractelement <2 x float> %76, i32 1
  %128 = fadd float %127, %124
  %129 = fsub float %128, %124
  %130 = fsub float %128, %129
  %131 = fsub float %127, %129
  %132 = extractelement <2 x float> %122, i32 1
  %133 = fadd float %132, %126
  %134 = bitcast float %128 to i32
  %135 = and i32 %134, -2147483648
  %136 = or i32 %135, 1258291200
  %137 = bitcast i32 %136 to float
  %138 = fmul float %128, 4.000000e+00
  %139 = bitcast float %138 to i32
  %140 = and i32 %139, 2147483647
  %141 = bitcast i32 %140 to float
  %142 = fcmp ule float %141, 0x4160000000000000
  %143 = fadd float %138, %137
  %144 = fsub float %143, %137
  %145 = bitcast float %144 to i32
  %146 = or i32 %135, %145
  %147 = bitcast i32 %146 to float
  %148 = select i1 %142, float %147, float %138
  %149 = and i32 %134, 2147483647
  %150 = bitcast i32 %149 to float
  %151 = fcmp ule float %150, 0x4160000000000000
  %152 = fadd float %128, %137
  %153 = fsub float %152, %137
  %154 = bitcast float %153 to i32
  %155 = or i32 %135, %154
  %156 = bitcast i32 %155 to float
  %157 = select i1 %151, float %156, float %128
  %158 = fmul float %148, 2.500000e-01
  %159 = fsub float %128, %158
  %160 = fmul float %157, 4.000000e+00
  %161 = fsub float %148, %160
  %162 = fptosi float %161 to i64
  %163 = add i64 %162, %106
  %164 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %67
  %165 = load float, float* %164, align 4, !tbaa !3
  %166 = bitcast float %165 to i32
  %167 = and i32 %166, -4096
  %168 = bitcast i32 %167 to float
  %169 = fsub float %165, %168
  %170 = fmul float %165, %62
  %171 = fmul float %70, %168
  %172 = insertelement <2 x float> undef, float %171, i32 0
  %173 = insertelement <2 x float> %172, float %124, i32 1
  %174 = insertelement <2 x float> undef, float %170, i32 0
  %175 = insertelement <2 x float> %174, float %130, i32 1
  %176 = fsub <2 x float> %173, %175
  %177 = fmul float %169, %70
  %178 = insertelement <2 x float> undef, float %177, i32 0
  %179 = insertelement <2 x float> %178, float %131, i32 1
  %180 = fadd <2 x float> %179, %176
  %181 = fmul float %71, %168
  %182 = insertelement <2 x float> undef, float %181, i32 0
  %183 = insertelement <2 x float> %182, float %133, i32 1
  %184 = fadd <2 x float> %183, %180
  %185 = extractelement <2 x float> %184, i32 1
  %186 = fadd float %185, %159
  %187 = fsub float %159, %186
  %188 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %67
  %189 = load float, float* %188, align 4, !tbaa !3
  %190 = fmul float %71, %169
  %191 = insertelement <2 x float> undef, float %190, i32 0
  %192 = insertelement <2 x float> %191, float %187, i32 1
  %193 = fadd <2 x float> %192, %184
  %194 = fmul float %189, %62
  %195 = extractelement <2 x float> %193, i32 0
  %196 = fadd float %194, %195
  %197 = fadd float %170, %186
  %198 = fsub float %197, %186
  %199 = fsub float %197, %198
  %200 = fsub float %186, %199
  %201 = fsub float %170, %198
  %202 = fadd float %201, %200
  %203 = extractelement <2 x float> %193, i32 1
  %204 = fadd float %196, %203
  %205 = fadd float %204, %202
  %206 = fadd float %197, %205
  %207 = fsub float %197, %206
  %208 = fadd float %205, %207
  %209 = bitcast float %206 to i32
  %210 = and i32 %209, -4096
  %211 = bitcast i32 %210 to float
  %212 = fsub float %206, %211
  %213 = fmul float %206, 0x401921FB60000000
  %214 = fmul float %211, 6.281250e+00
  %215 = fsub float %214, %213
  %216 = fmul float %212, 6.281250e+00
  %217 = fadd float %216, %215
  %218 = fmul float %211, 0x3F5FB60000000000
  %219 = fadd float %218, %217
  %220 = fmul float %212, 0x3F5FB60000000000
  %221 = fadd float %220, %219
  %222 = fmul float %206, 0x3E8777A5C0000000
  %223 = fsub float %221, %222
  %224 = fmul float %208, 0x401921FB60000000
  %225 = fadd float %224, %223
  %226 = and i32 %61, 2147483647
  %227 = bitcast i32 %226 to float
  %228 = fcmp uge float %227, 0x3FE6666660000000
  %229 = select i1 %228, float %213, float %62
  %230 = select i1 %228, float %225, float 0.000000e+00
  %231 = shl i64 %163, 1
  %232 = and i64 %231, 6
  %233 = fcmp ule float %229, 0.000000e+00
  %234 = select i1 %233, i64 7, i64 8
  %235 = add nuw nsw i64 %234, %232
  %236 = trunc i64 %235 to i32
  %237 = lshr i32 %236, 1
  %238 = select i1 %233, i32 -2147483648, i32 0
  %239 = xor i32 %238, -1077342245
  %240 = bitcast i32 %239 to float
  %241 = or i32 %238, 859553070
  %242 = bitcast i32 %241 to float
  %243 = fadd float %229, %240
  %244 = fsub float %243, %229
  %245 = fsub float %243, %244
  %246 = fsub float %229, %245
  %247 = fsub float %240, %244
  %248 = fadd float %247, %246
  %249 = fadd float %230, %242
  %250 = fadd float %248, %249
  %251 = and i64 %163, 1
  %252 = icmp ne i64 %251, 0
  %253 = select i1 %252, float %229, float %243
  %254 = select i1 %252, float %230, float %250
  %255 = fadd float %253, %254
  %256 = fsub float %253, %255
  %257 = fadd float %254, %256
  %258 = insertelement <2 x float> undef, float %257, i32 1
  %259 = fcmp oeq float %0, 0x7FF0000000000000
  %260 = fcmp oeq float %0, 0xFFF0000000000000
  %261 = or i1 %259, %260
  %262 = fcmp uno float %0, 0.000000e+00
  %263 = or i1 %262, %261
  %264 = select i1 %263, float 0xFFFFFFFFE0000000, float %255
  %265 = insertelement <2 x float> %258, float %264, i32 0
  br label %266

; <label>:266:                                    ; preds = %55, %6
  %267 = phi <2 x float> [ %54, %6 ], [ %265, %55 ]
  %268 = phi i32 [ %29, %6 ], [ %237, %55 ]
  %269 = extractelement <2 x float> %267, i32 0
  %270 = bitcast float %269 to i32
  %271 = and i32 %270, -4096
  %272 = bitcast i32 %271 to float
  %273 = fsub float %269, %272
  %274 = fmul float %269, %269
  %275 = fadd float %272, %272
  %276 = extractelement <2 x float> %267, i32 1
  %277 = fmul float %274, 0x3EC5E150E0000000
  %278 = fadd float %277, 0xBF29F75D60000000
  %279 = fmul float %274, %278
  %280 = fadd float %279, 0x3F8110EEE0000000
  %281 = fmul float %274, %280
  %282 = fadd float %281, 0xBFC55554C0000000
  %283 = fsub float 0xBFC55554C0000000, %282
  %284 = fadd float %281, %283
  %285 = bitcast float %282 to i32
  %286 = and i32 %285, -4096
  %287 = bitcast i32 %286 to float
  %288 = shufflevector <2 x float> %267, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %289 = insertelement <2 x float> %288, float %282, i32 1
  %290 = insertelement <2 x float> %288, float %287, i32 1
  %291 = fadd <2 x float> %289, %290
  %292 = fsub <2 x float> %289, %290
  %293 = shufflevector <2 x float> %291, <2 x float> %292, <2 x i32> <i32 0, i32 3>
  %294 = bitcast float %274 to i32
  %295 = and i32 %294, -4096
  %296 = bitcast i32 %295 to float
  %297 = fsub float %274, %296
  %298 = fmul float %274, %282
  %299 = insertelement <2 x float> undef, float %272, i32 0
  %300 = insertelement <2 x float> %299, float %296, i32 1
  %301 = insertelement <2 x float> %299, float %287, i32 1
  %302 = fmul <2 x float> %300, %301
  %303 = insertelement <2 x float> undef, float %274, i32 0
  %304 = insertelement <2 x float> %303, float %298, i32 1
  %305 = fsub <2 x float> %302, %304
  %306 = insertelement <2 x float> undef, float %275, i32 0
  %307 = insertelement <2 x float> %306, float %296, i32 1
  %308 = insertelement <2 x float> undef, float %273, i32 0
  %309 = shufflevector <2 x float> %308, <2 x float> %292, <2 x i32> <i32 0, i32 3>
  %310 = fmul <2 x float> %307, %309
  %311 = fadd <2 x float> %310, %305
  %312 = insertelement <2 x float> %308, float %297, i32 1
  %313 = insertelement <2 x float> %308, float %287, i32 1
  %314 = fmul <2 x float> %312, %313
  %315 = fadd <2 x float> %314, %311
  %316 = insertelement <2 x float> undef, float %269, i32 0
  %317 = insertelement <2 x float> %316, float %297, i32 1
  %318 = fmul <2 x float> %317, %293
  %319 = fadd <2 x float> %318, %315
  %320 = extractelement <2 x float> %319, i32 0
  %321 = fmul float %282, %320
  %322 = extractelement <2 x float> %319, i32 1
  %323 = fadd float %321, %322
  %324 = fmul float %274, %284
  %325 = fadd float %324, %323
  %326 = fadd float %298, 1.000000e+00
  %327 = fsub float 1.000000e+00, %326
  %328 = fadd float %298, %327
  %329 = fadd float %328, %325
  %330 = bitcast float %326 to i32
  %331 = and i32 %330, -4096
  %332 = bitcast i32 %331 to float
  %333 = fsub float %326, %332
  %334 = fmul float %276, %332
  %335 = fmul float %329, %272
  %336 = fmul float %273, %333
  %337 = fmul float %333, %272
  %338 = fmul float %273, %332
  %339 = fmul float %272, %332
  %340 = fadd float %334, %335
  %341 = fadd float %336, %340
  %342 = fadd float %337, %341
  %343 = fadd float %338, %342
  %344 = fadd float %339, %343
  %345 = lshr i32 %268, 1
  %346 = and i32 %345, 1
  %347 = add nsw i32 %346, -1
  %348 = and i32 %347, -2147483648
  %349 = bitcast float %344 to i32
  %350 = xor i32 %348, %349
  %351 = bitcast i32 %350 to float
  ret float %351
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fastsinf1_u3500purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FD45F3060000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fmul float %12, 0x400921FB60000000
  %14 = fsub float %0, %13
  %15 = fmul float %14, %14
  %16 = fmul float %15, 0x3F28AA1960000000
  %17 = fsub float 0x3F810BE9A0000000, %16
  %18 = fmul float %15, %17
  %19 = fadd float %18, 0xBFC5554880000000
  %20 = fmul float %14, %15
  %21 = fmul float %20, %19
  %22 = fadd float %14, %21
  %23 = shl i32 %11, 31
  %24 = bitcast float %22 to i32
  %25 = xor i32 %23, %24
  %26 = bitcast i32 %25 to float
  %27 = bitcast float %0 to i32
  %28 = and i32 %27, 2147483647
  %29 = bitcast i32 %28 to float
  %30 = fcmp uge float %29, 3.000000e+01
  br i1 %30, label %31, label %33, !prof !2

; <label>:31:                                     ; preds = %1
  %32 = tail call float @Sleef_sinf1_u35purec(float %0)
  br label %33

; <label>:33:                                     ; preds = %1, %31
  %34 = phi float [ %32, %31 ], [ %26, %1 ]
  ret float %34
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fastcosf1_u3500purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FD45F3060000000
  %3 = fadd float %2, -5.000000e-01
  %4 = fcmp ogt float %3, 0.000000e+00
  %5 = select i1 %4, float 5.000000e-01, float -5.000000e-01
  %6 = fadd float %3, %5
  %7 = bitcast float %6 to i32
  %8 = fptosi float %6 to i32
  %9 = and i32 %8, 1
  %10 = sub i32 %7, %9
  %11 = bitcast i32 %10 to float
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fadd float %0, 0xBFF921FB60000000
  %15 = fmul float %13, 0x400921FB60000000
  %16 = fsub float %14, %15
  %17 = fmul float %16, %16
  %18 = fmul float %17, 0x3F28AA1960000000
  %19 = fsub float 0x3F810BE9A0000000, %18
  %20 = fmul float %17, %19
  %21 = fadd float %20, 0xBFC5554880000000
  %22 = fmul float %16, %17
  %23 = fmul float %22, %21
  %24 = fadd float %16, %23
  %25 = and i32 %12, 1
  %26 = add nsw i32 %25, -1
  %27 = and i32 %26, -2147483648
  %28 = bitcast float %24 to i32
  %29 = xor i32 %27, %28
  %30 = bitcast i32 %29 to float
  %31 = bitcast float %0 to i32
  %32 = and i32 %31, 2147483647
  %33 = bitcast i32 %32 to float
  %34 = fcmp uge float %33, 3.000000e+01
  br i1 %34, label %35, label %37, !prof !2

; <label>:35:                                     ; preds = %1
  %36 = tail call float @Sleef_cosf1_u35purec(float %0)
  br label %37

; <label>:37:                                     ; preds = %1, %35
  %38 = phi float [ %36, %35 ], [ %30, %1 ]
  ret float %38
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincosf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %25, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp ogt float %7, 0.000000e+00
  %9 = select i1 %8, float 5.000000e-01, float -5.000000e-01
  %10 = fadd float %7, %9
  %11 = bitcast float %10 to i32
  %12 = fptosi float %10 to i32
  %13 = and i32 %12, 1
  %14 = sub i32 %11, %13
  %15 = bitcast i32 %14 to float
  %16 = fptosi float %15 to i32
  %17 = sext i32 %16 to i64
  %18 = sitofp i32 %16 to float
  %19 = fmul float %18, 0x3FF921C000000000
  %20 = fsub float %0, %19
  %21 = fmul float %18, 0x3F0DAA0000000000
  %22 = fsub float %20, %21
  %23 = fmul float %18, 0x3E110B4620000000
  %24 = fsub float %22, %23
  br label %227

; <label>:25:                                     ; preds = %1
  %26 = fcmp uge float %4, 3.900000e+04
  br i1 %26, label %48, label %27, !prof !2

; <label>:27:                                     ; preds = %25
  %28 = fmul float %0, 0x3FE45F3060000000
  %29 = fcmp ogt float %28, 0.000000e+00
  %30 = select i1 %29, float 5.000000e-01, float -5.000000e-01
  %31 = fadd float %28, %30
  %32 = bitcast float %31 to i32
  %33 = fptosi float %31 to i32
  %34 = and i32 %33, 1
  %35 = sub i32 %32, %34
  %36 = bitcast i32 %35 to float
  %37 = fptosi float %36 to i32
  %38 = sext i32 %37 to i64
  %39 = sitofp i32 %37 to float
  %40 = fmul float %39, 0x3FF9200000000000
  %41 = fsub float %0, %40
  %42 = fmul float %39, 0x3F3FB00000000000
  %43 = fsub float %41, %42
  %44 = fmul float %39, 0x3E95100000000000
  %45 = fsub float %43, %44
  %46 = fmul float %39, 0x3DD0B46120000000
  %47 = fsub float %45, %46
  br label %227

; <label>:48:                                     ; preds = %25
  %49 = lshr i32 %2, 23
  %50 = and i32 %49, 255
  %51 = add nsw i32 %50, -152
  %52 = icmp ugt i32 %50, 217
  %53 = select i1 %52, i32 -536870912, i32 0
  %54 = add i32 %53, %2
  %55 = bitcast i32 %54 to float
  %56 = ashr i32 %51, 31
  %57 = xor i32 %56, 1073741823
  %58 = and i32 %57, %51
  %59 = shl i32 %58, 2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !3
  %63 = and i32 %54, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %55, %64
  %66 = bitcast float %62 to i32
  %67 = and i32 %66, -4096
  %68 = bitcast i32 %67 to float
  %69 = fsub float %62, %68
  %70 = fmul float %62, %55
  %71 = fmul float %64, %68
  %72 = fsub float %71, %70
  %73 = fmul float %65, %68
  %74 = fadd float %73, %72
  %75 = fmul float %69, %64
  %76 = fadd float %75, %74
  %77 = fmul float %65, %69
  %78 = fadd float %77, %76
  %79 = bitcast float %70 to i32
  %80 = and i32 %79, -2147483648
  %81 = or i32 %80, 1258291200
  %82 = bitcast i32 %81 to float
  %83 = fmul float %70, 4.000000e+00
  %84 = bitcast float %83 to i32
  %85 = and i32 %84, 2147483647
  %86 = bitcast i32 %85 to float
  %87 = fcmp ule float %86, 0x4160000000000000
  %88 = fadd float %83, %82
  %89 = fsub float %88, %82
  %90 = bitcast float %89 to i32
  %91 = or i32 %80, %90
  %92 = bitcast i32 %91 to float
  %93 = select i1 %87, float %92, float %83
  %94 = and i32 %79, 2147483647
  %95 = bitcast i32 %94 to float
  %96 = fcmp ule float %95, 0x4160000000000000
  %97 = fadd float %70, %82
  %98 = fsub float %97, %82
  %99 = bitcast float %98 to i32
  %100 = or i32 %80, %99
  %101 = bitcast i32 %100 to float
  %102 = select i1 %96, float %101, float %70
  %103 = fmul float %93, 2.500000e-01
  %104 = fsub float %70, %103
  %105 = fmul float %102, 4.000000e+00
  %106 = fsub float %93, %105
  %107 = fptosi float %106 to i64
  %108 = fadd float %78, %104
  %109 = fsub float %104, %108
  %110 = fadd float %78, %109
  %111 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %60
  %112 = load float, float* %111, align 4, !tbaa !3
  %113 = bitcast float %112 to i32
  %114 = and i32 %113, -4096
  %115 = bitcast i32 %114 to float
  %116 = fsub float %112, %115
  %117 = fmul float %112, %55
  %118 = fmul float %64, %115
  %119 = fsub float %118, %117
  %120 = fmul float %65, %115
  %121 = fadd float %120, %119
  %122 = fmul float %116, %64
  %123 = fadd float %122, %121
  %124 = fmul float %65, %116
  %125 = fadd float %124, %123
  %126 = fadd float %117, %108
  %127 = fsub float %126, %108
  %128 = fsub float %126, %127
  %129 = fsub float %108, %128
  %130 = fsub float %117, %127
  %131 = fadd float %130, %129
  %132 = fadd float %125, %110
  %133 = fadd float %132, %131
  %134 = bitcast float %126 to i32
  %135 = and i32 %134, -2147483648
  %136 = or i32 %135, 1258291200
  %137 = bitcast i32 %136 to float
  %138 = fmul float %126, 4.000000e+00
  %139 = bitcast float %138 to i32
  %140 = and i32 %139, 2147483647
  %141 = bitcast i32 %140 to float
  %142 = fcmp ule float %141, 0x4160000000000000
  %143 = fadd float %138, %137
  %144 = fsub float %143, %137
  %145 = bitcast float %144 to i32
  %146 = or i32 %135, %145
  %147 = bitcast i32 %146 to float
  %148 = select i1 %142, float %147, float %138
  %149 = and i32 %134, 2147483647
  %150 = bitcast i32 %149 to float
  %151 = fcmp ule float %150, 0x4160000000000000
  %152 = fadd float %126, %137
  %153 = fsub float %152, %137
  %154 = bitcast float %153 to i32
  %155 = or i32 %135, %154
  %156 = bitcast i32 %155 to float
  %157 = select i1 %151, float %156, float %126
  %158 = fmul float %148, 2.500000e-01
  %159 = fsub float %126, %158
  %160 = fmul float %157, 4.000000e+00
  %161 = fsub float %148, %160
  %162 = fptosi float %161 to i64
  %163 = add i64 %162, %107
  %164 = and i64 %163, 4294967295
  %165 = fadd float %133, %159
  %166 = fsub float %159, %165
  %167 = fadd float %133, %166
  %168 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %60
  %169 = load float, float* %168, align 4, !tbaa !3
  %170 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %60
  %171 = load float, float* %170, align 4, !tbaa !3
  %172 = bitcast float %169 to i32
  %173 = and i32 %172, -4096
  %174 = bitcast i32 %173 to float
  %175 = fsub float %169, %174
  %176 = fmul float %169, %55
  %177 = fmul float %64, %174
  %178 = fsub float %177, %176
  %179 = fmul float %175, %64
  %180 = fadd float %179, %178
  %181 = fmul float %65, %174
  %182 = fadd float %181, %180
  %183 = fmul float %65, %175
  %184 = fadd float %183, %182
  %185 = fmul float %171, %55
  %186 = fadd float %185, %184
  %187 = fadd float %176, %165
  %188 = fsub float %187, %165
  %189 = fsub float %187, %188
  %190 = fsub float %165, %189
  %191 = fsub float %176, %188
  %192 = fadd float %191, %190
  %193 = fadd float %186, %167
  %194 = fadd float %193, %192
  %195 = fadd float %187, %194
  %196 = fsub float %187, %195
  %197 = fadd float %194, %196
  %198 = bitcast float %195 to i32
  %199 = and i32 %198, -4096
  %200 = bitcast i32 %199 to float
  %201 = fsub float %195, %200
  %202 = fmul float %195, 0x401921FB60000000
  %203 = fmul float %200, 6.281250e+00
  %204 = fsub float %203, %202
  %205 = fmul float %201, 6.281250e+00
  %206 = fadd float %205, %204
  %207 = fmul float %200, 0x3F5FB60000000000
  %208 = fadd float %207, %206
  %209 = fmul float %201, 0x3F5FB60000000000
  %210 = fadd float %209, %208
  %211 = fmul float %195, 0x3E8777A5C0000000
  %212 = fsub float %210, %211
  %213 = fmul float %197, 0x401921FB60000000
  %214 = fadd float %213, %212
  %215 = and i32 %54, 2147483647
  %216 = bitcast i32 %215 to float
  %217 = fcmp uge float %216, 0x3FE6666660000000
  %218 = select i1 %217, float %202, float %55
  %219 = select i1 %217, float %214, float 0.000000e+00
  %220 = fadd float %218, %219
  %221 = fcmp oeq float %0, 0x7FF0000000000000
  %222 = fcmp oeq float %0, 0xFFF0000000000000
  %223 = or i1 %221, %222
  %224 = fcmp uno float %0, 0.000000e+00
  %225 = or i1 %224, %223
  %226 = select i1 %225, float 0xFFFFFFFFE0000000, float %220
  br label %227

; <label>:227:                                    ; preds = %27, %48, %6
  %228 = phi float [ %24, %6 ], [ %47, %27 ], [ %226, %48 ]
  %229 = phi i64 [ %17, %6 ], [ %38, %27 ], [ %164, %48 ]
  %230 = fmul float %228, %228
  %231 = fmul float %230, 0x3F2994CB60000000
  %232 = fsub float 0x3F81107340000000, %231
  %233 = fmul float %230, %232
  %234 = fadd float %233, 0xBFC5555440000000
  %235 = fmul float %230, %234
  %236 = fmul float %228, %235
  %237 = fadd float %228, %236
  %238 = icmp eq i32 %2, -2147483648
  %239 = select i1 %238, float -0.000000e+00, float %237
  %240 = fmul float %230, 0x3E923DB120000000
  %241 = fsub float 0x3EFA00F160000000, %240
  %242 = fmul float %230, %241
  %243 = fadd float %242, 0xBF56C16B00000000
  %244 = fmul float %230, %243
  %245 = fadd float %244, 0x3FA5555540000000
  %246 = fmul float %230, %245
  %247 = fadd float %246, -5.000000e-01
  %248 = fmul float %230, %247
  %249 = fadd float %248, 1.000000e+00
  %250 = and i64 %229, 1
  %251 = icmp ne i64 %250, 0
  %252 = select i1 %251, float %249, float %239
  %253 = select i1 %251, float %239, float %249
  %254 = shl i64 %229, 62
  %255 = ashr i64 %254, 63
  %256 = bitcast float %252 to i32
  %257 = trunc i64 %255 to i32
  %258 = and i32 %257, -2147483648
  %259 = xor i32 %258, %256
  %260 = bitcast i32 %259 to float
  %261 = add i64 %254, 4611686018427387904
  %262 = ashr i64 %261, 63
  %263 = bitcast float %253 to i32
  %264 = trunc i64 %262 to i32
  %265 = and i32 %264, -2147483648
  %266 = xor i32 %265, %263
  %267 = bitcast i32 %266 to float
  %268 = insertelement <2 x float> undef, float %260, i32 0
  %269 = insertelement <2 x float> %268, float %267, i32 1
  ret <2 x float> %269
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincosf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %44, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp ogt float %7, 0.000000e+00
  %9 = select i1 %8, float 5.000000e-01, float -5.000000e-01
  %10 = fadd float %7, %9
  %11 = bitcast float %10 to i32
  %12 = fptosi float %10 to i32
  %13 = and i32 %12, 1
  %14 = sub i32 %11, %13
  %15 = bitcast i32 %14 to float
  %16 = fptosi float %15 to i32
  %17 = sitofp i32 %16 to float
  %18 = icmp sgt i32 %16, 0
  %19 = select i1 %18, float 5.000000e-01, float -5.000000e-01
  %20 = fadd float %19, %17
  %21 = bitcast float %20 to i32
  %22 = fptosi float %20 to i32
  %23 = and i32 %22, 1
  %24 = sub i32 %21, %23
  %25 = bitcast i32 %24 to float
  %26 = fptosi float %25 to i32
  %27 = sext i32 %26 to i64
  %28 = fmul float %17, 0x3FF921C000000000
  %29 = fsub float %0, %28
  %30 = fmul float %17, 0xBF0DAA0000000000
  %31 = fadd float %30, %29
  %32 = fsub float %31, %29
  %33 = fsub float %31, %32
  %34 = fsub float %29, %33
  %35 = fsub float %30, %32
  %36 = fadd float %35, %34
  %37 = fmul float %17, 0xBE110B4620000000
  %38 = fadd float %37, %31
  %39 = fsub float %31, %38
  %40 = fadd float %37, %39
  %41 = fadd float %40, %36
  %42 = insertelement <2 x float> undef, float %38, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  br label %224

; <label>:44:                                     ; preds = %1
  %45 = lshr i32 %2, 23
  %46 = and i32 %45, 255
  %47 = add nsw i32 %46, -152
  %48 = icmp ugt i32 %46, 217
  %49 = select i1 %48, i32 -536870912, i32 0
  %50 = add i32 %49, %2
  %51 = bitcast i32 %50 to float
  %52 = ashr i32 %47, 31
  %53 = xor i32 %52, 1073741823
  %54 = and i32 %53, %47
  %55 = shl i32 %54, 2
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !3
  %59 = and i32 %50, -4096
  %60 = bitcast i32 %59 to float
  %61 = fsub float %51, %60
  %62 = bitcast float %58 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %58, %64
  %66 = fmul float %58, %51
  %67 = fmul float %60, %64
  %68 = fsub float %67, %66
  %69 = fmul float %61, %64
  %70 = fadd float %69, %68
  %71 = fmul float %65, %60
  %72 = fadd float %71, %70
  %73 = fmul float %61, %65
  %74 = fadd float %73, %72
  %75 = bitcast float %66 to i32
  %76 = and i32 %75, -2147483648
  %77 = or i32 %76, 1258291200
  %78 = bitcast i32 %77 to float
  %79 = fmul float %66, 4.000000e+00
  %80 = bitcast float %79 to i32
  %81 = and i32 %80, 2147483647
  %82 = bitcast i32 %81 to float
  %83 = fcmp ule float %82, 0x4160000000000000
  %84 = fadd float %79, %78
  %85 = fsub float %84, %78
  %86 = bitcast float %85 to i32
  %87 = or i32 %76, %86
  %88 = bitcast i32 %87 to float
  %89 = select i1 %83, float %88, float %79
  %90 = and i32 %75, 2147483647
  %91 = bitcast i32 %90 to float
  %92 = fcmp ule float %91, 0x4160000000000000
  %93 = fadd float %66, %78
  %94 = fsub float %93, %78
  %95 = bitcast float %94 to i32
  %96 = or i32 %76, %95
  %97 = bitcast i32 %96 to float
  %98 = select i1 %92, float %97, float %66
  %99 = fmul float %89, 2.500000e-01
  %100 = fsub float %66, %99
  %101 = fmul float %98, 4.000000e+00
  %102 = fsub float %89, %101
  %103 = fptosi float %102 to i64
  %104 = fadd float %74, %100
  %105 = fsub float %100, %104
  %106 = fadd float %74, %105
  %107 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %56
  %108 = load float, float* %107, align 4, !tbaa !3
  %109 = bitcast float %108 to i32
  %110 = and i32 %109, -4096
  %111 = bitcast i32 %110 to float
  %112 = fsub float %108, %111
  %113 = fmul float %108, %51
  %114 = fmul float %60, %111
  %115 = fsub float %114, %113
  %116 = fmul float %61, %111
  %117 = fadd float %116, %115
  %118 = fmul float %112, %60
  %119 = fadd float %118, %117
  %120 = fmul float %61, %112
  %121 = fadd float %120, %119
  %122 = fadd float %113, %104
  %123 = fsub float %122, %104
  %124 = fsub float %122, %123
  %125 = fsub float %104, %124
  %126 = fsub float %113, %123
  %127 = fadd float %126, %125
  %128 = fadd float %121, %106
  %129 = fadd float %128, %127
  %130 = bitcast float %122 to i32
  %131 = and i32 %130, -2147483648
  %132 = or i32 %131, 1258291200
  %133 = bitcast i32 %132 to float
  %134 = fmul float %122, 4.000000e+00
  %135 = bitcast float %134 to i32
  %136 = and i32 %135, 2147483647
  %137 = bitcast i32 %136 to float
  %138 = fcmp ule float %137, 0x4160000000000000
  %139 = fadd float %134, %133
  %140 = fsub float %139, %133
  %141 = bitcast float %140 to i32
  %142 = or i32 %131, %141
  %143 = bitcast i32 %142 to float
  %144 = select i1 %138, float %143, float %134
  %145 = and i32 %130, 2147483647
  %146 = bitcast i32 %145 to float
  %147 = fcmp ule float %146, 0x4160000000000000
  %148 = fadd float %122, %133
  %149 = fsub float %148, %133
  %150 = bitcast float %149 to i32
  %151 = or i32 %131, %150
  %152 = bitcast i32 %151 to float
  %153 = select i1 %147, float %152, float %122
  %154 = fmul float %144, 2.500000e-01
  %155 = fsub float %122, %154
  %156 = fmul float %153, 4.000000e+00
  %157 = fsub float %144, %156
  %158 = fptosi float %157 to i64
  %159 = add i64 %158, %103
  %160 = and i64 %159, 4294967295
  %161 = fadd float %129, %155
  %162 = fsub float %155, %161
  %163 = fadd float %129, %162
  %164 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %56
  %165 = load float, float* %164, align 4, !tbaa !3
  %166 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %56
  %167 = load float, float* %166, align 4, !tbaa !3
  %168 = bitcast float %165 to i32
  %169 = and i32 %168, -4096
  %170 = bitcast i32 %169 to float
  %171 = fsub float %165, %170
  %172 = fmul float %165, %51
  %173 = fmul float %60, %170
  %174 = fsub float %173, %172
  %175 = fmul float %171, %60
  %176 = fadd float %175, %174
  %177 = fmul float %61, %170
  %178 = fadd float %177, %176
  %179 = fmul float %61, %171
  %180 = fadd float %179, %178
  %181 = fmul float %167, %51
  %182 = fadd float %181, %180
  %183 = fadd float %172, %161
  %184 = fsub float %183, %161
  %185 = fsub float %183, %184
  %186 = fsub float %161, %185
  %187 = fsub float %172, %184
  %188 = fadd float %187, %186
  %189 = fadd float %182, %163
  %190 = fadd float %189, %188
  %191 = fadd float %183, %190
  %192 = fsub float %183, %191
  %193 = fadd float %190, %192
  %194 = bitcast float %191 to i32
  %195 = and i32 %194, -4096
  %196 = bitcast i32 %195 to float
  %197 = fsub float %191, %196
  %198 = fmul float %191, 0x401921FB60000000
  %199 = fmul float %196, 6.281250e+00
  %200 = fsub float %199, %198
  %201 = fmul float %197, 6.281250e+00
  %202 = fadd float %201, %200
  %203 = fmul float %196, 0x3F5FB60000000000
  %204 = fadd float %203, %202
  %205 = fmul float %197, 0x3F5FB60000000000
  %206 = fadd float %205, %204
  %207 = fmul float %191, 0x3E8777A5C0000000
  %208 = fsub float %206, %207
  %209 = fmul float %193, 0x401921FB60000000
  %210 = fadd float %209, %208
  %211 = and i32 %50, 2147483647
  %212 = bitcast i32 %211 to float
  %213 = fcmp uge float %212, 0x3FE6666660000000
  %214 = select i1 %213, float %198, float %51
  %215 = select i1 %213, float %210, float 0.000000e+00
  %216 = insertelement <2 x float> undef, float %215, i32 1
  %217 = fcmp oeq float %0, 0x7FF0000000000000
  %218 = fcmp oeq float %0, 0xFFF0000000000000
  %219 = or i1 %217, %218
  %220 = fcmp uno float %0, 0.000000e+00
  %221 = or i1 %220, %219
  %222 = select i1 %221, float 0xFFFFFFFFE0000000, float %214
  %223 = insertelement <2 x float> %216, float %222, i32 0
  br label %224

; <label>:224:                                    ; preds = %44, %6
  %225 = phi <2 x float> [ %43, %6 ], [ %223, %44 ]
  %226 = phi i64 [ %27, %6 ], [ %160, %44 ]
  %227 = extractelement <2 x float> %225, i32 0
  %228 = bitcast float %227 to i32
  %229 = and i32 %228, -4096
  %230 = bitcast i32 %229 to float
  %231 = fsub float %227, %230
  %232 = extractelement <2 x float> %225, i32 1
  %233 = fmul float %232, %230
  %234 = fmul float %231, %231
  %235 = fmul float %231, %230
  %236 = fadd float %235, %235
  %237 = fmul float %230, %230
  %238 = fadd float %233, %233
  %239 = fadd float %238, %234
  %240 = fadd float %239, %236
  %241 = fadd float %237, %240
  %242 = fmul float %241, 0x3F2994CB60000000
  %243 = fsub float 0x3F81107340000000, %242
  %244 = fmul float %241, %243
  %245 = fadd float %244, 0xBFC5555440000000
  %246 = fmul float %227, %241
  %247 = fmul float %246, %245
  %248 = fadd float %227, %247
  %249 = fsub float %227, %248
  %250 = fadd float %247, %249
  %251 = fadd float %232, %250
  %252 = fadd float %248, %251
  %253 = icmp eq i32 %2, -2147483648
  %254 = select i1 %253, float -0.000000e+00, float %252
  %255 = fmul float %241, 0x3E923DB120000000
  %256 = fsub float 0x3EFA00F160000000, %255
  %257 = fmul float %241, %256
  %258 = fadd float %257, 0xBF56C16B00000000
  %259 = fmul float %241, %258
  %260 = fadd float %259, 0x3FA5555540000000
  %261 = fmul float %241, %260
  %262 = fadd float %261, -5.000000e-01
  %263 = bitcast float %241 to i32
  %264 = and i32 %263, -4096
  %265 = bitcast i32 %264 to float
  %266 = fsub float %241, %265
  %267 = bitcast float %262 to i32
  %268 = and i32 %267, -4096
  %269 = bitcast i32 %268 to float
  %270 = fsub float %262, %269
  %271 = fmul float %241, %262
  %272 = fmul float %265, %269
  %273 = fsub float %272, %271
  %274 = fmul float %266, %269
  %275 = fadd float %274, %273
  %276 = fmul float %270, %265
  %277 = fadd float %276, %275
  %278 = fmul float %266, %270
  %279 = fadd float %278, %277
  %280 = fadd float %271, 1.000000e+00
  %281 = fsub float 1.000000e+00, %280
  %282 = fadd float %271, %281
  %283 = fadd float %282, %279
  %284 = fadd float %280, %283
  %285 = and i64 %226, 1
  %286 = icmp ne i64 %285, 0
  %287 = select i1 %286, float %284, float %254
  %288 = select i1 %286, float %254, float %284
  %289 = shl i64 %226, 62
  %290 = ashr i64 %289, 63
  %291 = bitcast float %287 to i32
  %292 = trunc i64 %290 to i32
  %293 = and i32 %292, -2147483648
  %294 = xor i32 %293, %291
  %295 = bitcast i32 %294 to float
  %296 = add i64 %289, 4611686018427387904
  %297 = ashr i64 %296, 63
  %298 = bitcast float %288 to i32
  %299 = trunc i64 %297 to i32
  %300 = and i32 %299, -2147483648
  %301 = xor i32 %300, %298
  %302 = bitcast i32 %301 to float
  %303 = insertelement <2 x float> undef, float %295, i32 0
  %304 = insertelement <2 x float> %303, float %302, i32 1
  ret <2 x float> %304
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincospif1_u05purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i64
  %4 = lshr i64 %3, 63
  %5 = lshr i64 %3, 31
  %6 = shl nuw nsw i64 %4, 32
  %7 = and i64 %5, 1
  %8 = or i64 %6, %7
  %9 = xor i64 %8, 1
  %10 = add i64 %9, %3
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, -2
  %13 = sitofp i32 %12 to float
  %14 = fsub float %2, %13
  %15 = fmul float %14, %14
  %16 = fmul float %15, 0x3E94C32E20000000
  %17 = fadd float %16, 0xBF032CC140000000
  %18 = fmul float %15, %17
  %19 = fadd float %18, 0x3F6466BBE0000000
  %20 = fmul float %15, %19
  %21 = fadd float %20, 0xBFB4ABBCE0000000
  %22 = fsub float %21, %20
  %23 = fsub float %21, %22
  %24 = fsub float %20, %23
  %25 = fsub float 0xBFB4ABBCE0000000, %22
  %26 = fadd float %25, %24
  %27 = fadd float %26, 0xBE16F9CCE0000000
  %28 = insertelement <2 x float> undef, float %14, i32 0
  %29 = insertelement <2 x float> %28, float %15, i32 1
  %30 = bitcast <2 x float> %29 to <2 x i32>
  %31 = and <2 x i32> %30, <i32 -4096, i32 -4096>
  %32 = bitcast <2 x i32> %31 to <2 x float>
  %33 = fsub <2 x float> %29, %32
  %34 = bitcast float %21 to i32
  %35 = and i32 %34, -4096
  %36 = bitcast i32 %35 to float
  %37 = fsub float %21, %36
  %38 = fmul float %15, %21
  %39 = extractelement <2 x float> %32, i32 1
  %40 = fmul float %39, %36
  %41 = fsub float %40, %38
  %42 = extractelement <2 x float> %33, i32 1
  %43 = fmul float %42, %36
  %44 = fadd float %43, %41
  %45 = fmul float %37, %39
  %46 = fadd float %45, %44
  %47 = fmul float %42, %37
  %48 = fadd float %47, %46
  %49 = fmul float %15, %27
  %50 = fadd float %49, %48
  %51 = fmul float %15, 0x3E5A193700000000
  %52 = fsub float 0x3ECE1EB4A0000000, %51
  %53 = fmul float %15, %52
  %54 = fadd float %53, 0xBF355D3C00000000
  %55 = fmul float %15, %54
  %56 = fadd float %55, 0x3F903C1F00000000
  %57 = fmul float %15, %56
  %58 = fadd float %57, 0xBFD3BD3CC0000000
  %59 = bitcast float %58 to i32
  %60 = and i32 %59, -4096
  %61 = bitcast i32 %60 to float
  %62 = fsub float %58, %61
  %63 = fmul float %15, %58
  %64 = extractelement <2 x float> %32, i32 0
  %65 = insertelement <2 x float> undef, float %64, i32 0
  %66 = insertelement <2 x float> %65, float %61, i32 1
  %67 = fmul <2 x float> %66, %32
  %68 = insertelement <2 x float> undef, float %15, i32 0
  %69 = insertelement <2 x float> %68, float %63, i32 1
  %70 = fsub <2 x float> %67, %69
  %71 = fmul float %62, %39
  %72 = fmul <2 x float> %33, %66
  %73 = extractelement <2 x float> %72, i32 0
  %74 = insertelement <2 x float> undef, float %73, i32 0
  %75 = insertelement <2 x float> %74, float %71, i32 1
  %76 = fadd <2 x float> %75, %70
  %77 = fadd <2 x float> %72, %76
  %78 = extractelement <2 x float> %33, i32 0
  %79 = insertelement <2 x float> undef, float %78, i32 0
  %80 = insertelement <2 x float> %79, float %62, i32 1
  %81 = fmul <2 x float> %33, %80
  %82 = fadd <2 x float> %81, %77
  %83 = extractelement <2 x float> %82, i32 0
  %84 = fmul float %21, %83
  %85 = fadd float %84, %50
  %86 = fadd float %38, 0x3FE921FB60000000
  %87 = fsub float %86, %38
  %88 = fsub float %86, %87
  %89 = fsub float %38, %88
  %90 = fsub float 0x3FE921FB60000000, %87
  %91 = fadd float %90, %89
  %92 = fadd float %85, 0xBE57781980000000
  %93 = fadd float %91, %92
  %94 = bitcast float %86 to i32
  %95 = and i32 %94, -4096
  %96 = bitcast i32 %95 to float
  %97 = fsub float %86, %96
  %98 = fmul float %14, %86
  %99 = fmul float %64, %96
  %100 = fsub float %99, %98
  %101 = fmul float %97, %64
  %102 = fadd float %101, %100
  %103 = fmul float %78, %96
  %104 = fadd float %103, %102
  %105 = fmul float %78, %97
  %106 = fadd float %105, %104
  %107 = fmul float %14, %93
  %108 = fadd float %106, %107
  %109 = fadd float %98, %108
  %110 = bitcast float %0 to i32
  %111 = icmp eq i32 %110, -2147483648
  %112 = select i1 %111, float -0.000000e+00, float %109
  %113 = fsub float %56, %55
  %114 = fsub float %56, %113
  %115 = fsub float %55, %114
  %116 = fsub float 0x3F903C1F00000000, %113
  %117 = fadd float %116, %115
  %118 = fadd float %117, 0x3DFEE1F000000000
  %119 = bitcast float %56 to i32
  %120 = and i32 %119, -4096
  %121 = bitcast i32 %120 to float
  %122 = fsub float %56, %121
  %123 = fmul float %39, %121
  %124 = fsub float %123, %57
  %125 = fmul float %42, %121
  %126 = fadd float %125, %124
  %127 = fmul float %122, %39
  %128 = fadd float %127, %126
  %129 = fmul float %42, %122
  %130 = fadd float %129, %128
  %131 = fmul float %15, %118
  %132 = fadd float %131, %130
  %133 = fmul float %56, %83
  %134 = fadd float %133, %132
  %135 = fsub float %58, %57
  %136 = fsub float %58, %135
  %137 = fsub float %57, %136
  %138 = fsub float 0xBFD3BD3CC0000000, %135
  %139 = fadd float %138, %137
  %140 = fadd float %134, 0xBE437BD7E0000000
  %141 = fadd float %139, %140
  %142 = fmul float %83, %58
  %143 = extractelement <2 x float> %82, i32 1
  %144 = fadd float %142, %143
  %145 = fmul float %15, %141
  %146 = fadd float %144, %145
  %147 = fadd float %63, 1.000000e+00
  %148 = fsub float %147, %63
  %149 = fsub float %147, %148
  %150 = fsub float %63, %149
  %151 = fsub float 1.000000e+00, %148
  %152 = fadd float %151, %150
  %153 = fadd float %152, %146
  %154 = fadd float %147, %153
  %155 = and i64 %10, 2
  %156 = icmp ne i64 %155, 0
  %157 = select i1 %156, float %154, float %112
  %158 = select i1 %156, float %112, float %154
  %159 = shl i64 %10, 61
  %160 = ashr i64 %159, 63
  %161 = bitcast float %157 to i32
  %162 = trunc i64 %160 to i32
  %163 = and i32 %162, -2147483648
  %164 = xor i32 %163, %161
  %165 = shl i32 %12, 29
  %166 = add i32 %165, 1073741824
  %167 = and i32 %166, -2147483648
  %168 = bitcast float %158 to i32
  %169 = xor i32 %167, %168
  %170 = and i32 %110, 2147483647
  %171 = bitcast i32 %170 to float
  %172 = fcmp ule float %171, 1.000000e+07
  %173 = sext i1 %172 to i32
  %174 = and i32 %164, %173
  %175 = and i32 %169, %173
  %176 = fcmp oeq float %0, 0x7FF0000000000000
  %177 = fcmp oeq float %0, 0xFFF0000000000000
  %178 = or i1 %176, %177
  %179 = sext i1 %178 to i32
  %180 = or i32 %174, %179
  %181 = bitcast i32 %180 to float
  %182 = or i32 %175, %179
  %183 = bitcast i32 %182 to float
  %184 = insertelement <2 x float> undef, float %181, i32 0
  %185 = insertelement <2 x float> %184, float %183, i32 1
  ret <2 x float> %185
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincospif1_u35purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i64
  %4 = lshr i64 %3, 63
  %5 = lshr i64 %3, 31
  %6 = shl nuw nsw i64 %4, 32
  %7 = and i64 %5, 1
  %8 = or i64 %6, %7
  %9 = xor i64 %8, 1
  %10 = add i64 %9, %3
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, -2
  %13 = sitofp i32 %12 to float
  %14 = fsub float %2, %13
  %15 = fmul float %14, %14
  %16 = fmul float %15, 0x3F02E11480000000
  %17 = fsub float 0x3F646617E0000000, %16
  %18 = fmul float %15, %17
  %19 = fadd float %18, 0xBFB4ABBCE0000000
  %20 = fmul float %15, %19
  %21 = fadd float %20, 0x3FE921FB60000000
  %22 = fmul float %14, %21
  %23 = fmul float %15, 0x3ECDB1B200000000
  %24 = fadd float %23, 0xBF355CA860000000
  %25 = fmul float %15, %24
  %26 = fadd float %25, 0x3F903C1D20000000
  %27 = fmul float %15, %26
  %28 = fadd float %27, 0xBFD3BD3CC0000000
  %29 = fmul float %15, %28
  %30 = fadd float %29, 1.000000e+00
  %31 = and i64 %10, 2
  %32 = icmp ne i64 %31, 0
  %33 = select i1 %32, float %30, float %22
  %34 = select i1 %32, float %22, float %30
  %35 = shl i64 %10, 61
  %36 = ashr i64 %35, 63
  %37 = bitcast float %33 to i32
  %38 = trunc i64 %36 to i32
  %39 = and i32 %38, -2147483648
  %40 = xor i32 %39, %37
  %41 = shl i32 %12, 29
  %42 = add i32 %41, 1073741824
  %43 = and i32 %42, -2147483648
  %44 = bitcast float %34 to i32
  %45 = xor i32 %43, %44
  %46 = bitcast float %0 to i32
  %47 = and i32 %46, 2147483647
  %48 = bitcast i32 %47 to float
  %49 = fcmp ule float %48, 1.000000e+07
  %50 = sext i1 %49 to i32
  %51 = and i32 %40, %50
  %52 = and i32 %45, %50
  %53 = fcmp oeq float %0, 0x7FF0000000000000
  %54 = fcmp oeq float %0, 0xFFF0000000000000
  %55 = or i1 %53, %54
  %56 = sext i1 %55 to i32
  %57 = or i32 %51, %56
  %58 = bitcast i32 %57 to float
  %59 = or i32 %52, %56
  %60 = bitcast i32 %59 to float
  %61 = insertelement <2 x float> undef, float %58, i32 0
  %62 = insertelement <2 x float> %61, float %60, i32 1
  ret <2 x float> %62
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_modff1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = bitcast float %0 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp ule float %8, 0x4160000000000000
  %10 = select i1 %9, float %5, float 0.000000e+00
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = and i32 %6, -2147483648
  %14 = or i32 %12, %13
  %15 = bitcast i32 %14 to float
  %16 = fsub float %0, %10
  %17 = bitcast float %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = or i32 %18, %13
  %20 = bitcast i32 %19 to float
  %21 = insertelement <2 x float> undef, float %15, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  ret <2 x float> %22
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.250000e+02
  br i1 %5, label %44, label %6, !prof !2

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp ogt float %7, 0.000000e+00
  %9 = select i1 %8, float 5.000000e-01, float -5.000000e-01
  %10 = fadd float %7, %9
  %11 = bitcast float %10 to i32
  %12 = fptosi float %10 to i32
  %13 = and i32 %12, 1
  %14 = sub i32 %11, %13
  %15 = bitcast i32 %14 to float
  %16 = fptosi float %15 to i32
  %17 = sitofp i32 %16 to float
  %18 = icmp sgt i32 %16, 0
  %19 = select i1 %18, float 5.000000e-01, float -5.000000e-01
  %20 = fadd float %19, %17
  %21 = bitcast float %20 to i32
  %22 = fptosi float %20 to i32
  %23 = and i32 %22, 1
  %24 = sub i32 %21, %23
  %25 = bitcast i32 %24 to float
  %26 = fptosi float %25 to i32
  %27 = sext i32 %26 to i64
  %28 = fmul float %17, 0x3FF921C000000000
  %29 = fsub float %0, %28
  %30 = fmul float %17, 0xBF0DAA0000000000
  %31 = fadd float %30, %29
  %32 = fsub float %31, %29
  %33 = fsub float %31, %32
  %34 = fsub float %29, %33
  %35 = fsub float %30, %32
  %36 = fadd float %35, %34
  %37 = fmul float %17, 0xBE110B4620000000
  %38 = fadd float %37, %31
  %39 = fsub float %31, %38
  %40 = fadd float %37, %39
  %41 = fadd float %40, %36
  %42 = insertelement <2 x float> undef, float %38, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  br label %233

; <label>:44:                                     ; preds = %1
  %45 = lshr i32 %2, 23
  %46 = and i32 %45, 255
  %47 = add nsw i32 %46, -152
  %48 = icmp ugt i32 %46, 217
  %49 = select i1 %48, i32 -536870912, i32 0
  %50 = add i32 %49, %2
  %51 = bitcast i32 %50 to float
  %52 = ashr i32 %47, 31
  %53 = xor i32 %52, 1073741823
  %54 = and i32 %53, %47
  %55 = shl i32 %54, 2
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !3
  %59 = and i32 %50, -4096
  %60 = bitcast i32 %59 to float
  %61 = fsub float %51, %60
  %62 = bitcast float %58 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %58, %64
  %66 = fmul float %58, %51
  %67 = fmul float %60, %64
  %68 = fsub float %67, %66
  %69 = fmul float %61, %64
  %70 = fadd float %69, %68
  %71 = fmul float %65, %60
  %72 = fadd float %71, %70
  %73 = fmul float %61, %65
  %74 = fadd float %73, %72
  %75 = bitcast float %66 to i32
  %76 = and i32 %75, -2147483648
  %77 = or i32 %76, 1258291200
  %78 = bitcast i32 %77 to float
  %79 = fmul float %66, 4.000000e+00
  %80 = bitcast float %79 to i32
  %81 = and i32 %80, 2147483647
  %82 = bitcast i32 %81 to float
  %83 = fcmp ule float %82, 0x4160000000000000
  %84 = fadd float %79, %78
  %85 = fsub float %84, %78
  %86 = bitcast float %85 to i32
  %87 = or i32 %76, %86
  %88 = bitcast i32 %87 to float
  %89 = select i1 %83, float %88, float %79
  %90 = and i32 %75, 2147483647
  %91 = bitcast i32 %90 to float
  %92 = fcmp ule float %91, 0x4160000000000000
  %93 = fadd float %66, %78
  %94 = fsub float %93, %78
  %95 = bitcast float %94 to i32
  %96 = or i32 %76, %95
  %97 = bitcast i32 %96 to float
  %98 = select i1 %92, float %97, float %66
  %99 = fmul float %89, 2.500000e-01
  %100 = fsub float %66, %99
  %101 = fmul float %98, 4.000000e+00
  %102 = fsub float %89, %101
  %103 = fptosi float %102 to i64
  %104 = fadd float %74, %100
  %105 = fsub float %100, %104
  %106 = fadd float %74, %105
  %107 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 1), i64 %56
  %108 = load float, float* %107, align 4, !tbaa !3
  %109 = bitcast float %108 to i32
  %110 = and i32 %109, -4096
  %111 = bitcast i32 %110 to float
  %112 = fsub float %108, %111
  %113 = fmul float %108, %51
  %114 = fmul float %60, %111
  %115 = fsub float %114, %113
  %116 = fmul float %61, %111
  %117 = fadd float %116, %115
  %118 = fmul float %112, %60
  %119 = fadd float %118, %117
  %120 = fmul float %61, %112
  %121 = fadd float %120, %119
  %122 = fadd float %113, %104
  %123 = fsub float %122, %104
  %124 = fsub float %122, %123
  %125 = fsub float %104, %124
  %126 = fsub float %113, %123
  %127 = fadd float %126, %125
  %128 = fadd float %121, %106
  %129 = fadd float %128, %127
  %130 = bitcast float %122 to i32
  %131 = and i32 %130, -2147483648
  %132 = or i32 %131, 1258291200
  %133 = bitcast i32 %132 to float
  %134 = fmul float %122, 4.000000e+00
  %135 = bitcast float %134 to i32
  %136 = and i32 %135, 2147483647
  %137 = bitcast i32 %136 to float
  %138 = fcmp ule float %137, 0x4160000000000000
  %139 = fadd float %134, %133
  %140 = fsub float %139, %133
  %141 = bitcast float %140 to i32
  %142 = or i32 %131, %141
  %143 = bitcast i32 %142 to float
  %144 = select i1 %138, float %143, float %134
  %145 = and i32 %130, 2147483647
  %146 = bitcast i32 %145 to float
  %147 = fcmp ule float %146, 0x4160000000000000
  %148 = fadd float %122, %133
  %149 = fsub float %148, %133
  %150 = bitcast float %149 to i32
  %151 = or i32 %131, %150
  %152 = bitcast i32 %151 to float
  %153 = select i1 %147, float %152, float %122
  %154 = fmul float %144, 2.500000e-01
  %155 = fsub float %122, %154
  %156 = fmul float %153, 4.000000e+00
  %157 = fsub float %144, %156
  %158 = fptosi float %157 to i64
  %159 = add i64 %158, %103
  %160 = and i64 %159, 4294967295
  %161 = fadd float %129, %155
  %162 = fsub float %155, %161
  %163 = fadd float %129, %162
  %164 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 2), i64 %56
  %165 = load float, float* %164, align 4, !tbaa !3
  %166 = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @rempitabsp, i64 0, i64 3), i64 %56
  %167 = load float, float* %166, align 4, !tbaa !3
  %168 = bitcast float %165 to i32
  %169 = and i32 %168, -4096
  %170 = bitcast i32 %169 to float
  %171 = fsub float %165, %170
  %172 = fmul float %165, %51
  %173 = fmul float %60, %170
  %174 = fsub float %173, %172
  %175 = fmul float %171, %60
  %176 = fadd float %175, %174
  %177 = fmul float %61, %170
  %178 = fadd float %177, %176
  %179 = fmul float %61, %171
  %180 = fadd float %179, %178
  %181 = fmul float %167, %51
  %182 = fadd float %181, %180
  %183 = fadd float %172, %161
  %184 = fsub float %183, %161
  %185 = fsub float %183, %184
  %186 = fsub float %161, %185
  %187 = fsub float %172, %184
  %188 = fadd float %187, %186
  %189 = fadd float %182, %163
  %190 = fadd float %189, %188
  %191 = fadd float %183, %190
  %192 = fsub float %183, %191
  %193 = fadd float %190, %192
  %194 = bitcast float %191 to i32
  %195 = and i32 %194, -4096
  %196 = bitcast i32 %195 to float
  %197 = fsub float %191, %196
  %198 = fmul float %191, 0x401921FB60000000
  %199 = fmul float %196, 6.281250e+00
  %200 = fsub float %199, %198
  %201 = fmul float %197, 6.281250e+00
  %202 = fadd float %201, %200
  %203 = fmul float %196, 0x3F5FB60000000000
  %204 = fadd float %203, %202
  %205 = fmul float %197, 0x3F5FB60000000000
  %206 = fadd float %205, %204
  %207 = fmul float %191, 0x3E8777A5C0000000
  %208 = fsub float %206, %207
  %209 = fmul float %193, 0x401921FB60000000
  %210 = fadd float %209, %208
  %211 = and i32 %50, 2147483647
  %212 = bitcast i32 %211 to float
  %213 = fcmp uge float %212, 0x3FE6666660000000
  %214 = select i1 %213, float %198, float %51
  %215 = fcmp oeq float %0, 0x7FF0000000000000
  %216 = fcmp oeq float %0, 0xFFF0000000000000
  %217 = or i1 %215, %216
  %218 = fcmp uno float %0, 0.000000e+00
  %219 = or i1 %218, %217
  %220 = bitcast float %214 to i32
  %221 = select i1 %219, i64 4294967295, i64 0
  %222 = trunc i64 %221 to i32
  %223 = or i32 %220, %222
  %224 = bitcast i32 %223 to float
  %225 = insertelement <2 x float> undef, float %224, i32 0
  %226 = bitcast float %210 to i32
  %227 = zext i32 %226 to i64
  %228 = select i1 %213, i64 %227, i64 0
  %229 = or i64 %228, %221
  %230 = trunc i64 %229 to i32
  %231 = bitcast i32 %230 to float
  %232 = insertelement <2 x float> %225, float %231, i32 1
  br label %233

; <label>:233:                                    ; preds = %44, %6
  %234 = phi <2 x float> [ %43, %6 ], [ %232, %44 ]
  %235 = phi i64 [ %27, %6 ], [ %160, %44 ]
  %236 = shl i64 %235, 63
  %237 = ashr exact i64 %236, 63
  %238 = trunc i64 %237 to i32
  %239 = bitcast <2 x float> %234 to <2 x i32>
  %240 = extractelement <2 x i32> %239, i32 0
  %241 = trunc i64 %237 to i32
  %242 = and i32 %241, -2147483648
  %243 = xor i32 %240, %242
  %244 = bitcast i32 %243 to float
  %245 = extractelement <2 x i32> %239, i32 1
  %246 = xor i32 %245, %242
  %247 = bitcast i32 %246 to float
  %248 = and i32 %243, -4096
  %249 = bitcast i32 %248 to float
  %250 = fsub float %244, %249
  %251 = fmul float %244, %244
  %252 = fmul float %249, %249
  %253 = fsub float %252, %251
  %254 = fadd float %249, %249
  %255 = fmul float %254, %250
  %256 = fadd float %255, %253
  %257 = fmul float %250, %250
  %258 = fadd float %257, %256
  %259 = fadd float %247, %247
  %260 = fmul float %259, %244
  %261 = fadd float %260, %258
  %262 = fadd float %251, %261
  %263 = fsub float %251, %262
  %264 = fadd float %261, %263
  %265 = fmul float %262, 0x3F724B52A0000000
  %266 = fadd float %265, 0xBF15FFC9C0000000
  %267 = fmul float %262, %266
  %268 = fadd float %267, 0x3F86744100000000
  %269 = fmul float %262, %268
  %270 = fadd float %269, 0x3F95BEE5E0000000
  %271 = fmul float %262, %270
  %272 = fadd float %271, 0x3FABAEE500000000
  %273 = fmul float %262, %272
  %274 = fadd float %273, 0x3FC110D0C0000000
  %275 = fsub float 0x3FC110D0C0000000, %274
  %276 = fadd float %273, %275
  %277 = bitcast float %262 to i32
  %278 = and i32 %277, -4096
  %279 = bitcast i32 %278 to float
  %280 = fsub float %262, %279
  %281 = bitcast float %274 to i32
  %282 = and i32 %281, -4096
  %283 = bitcast i32 %282 to float
  %284 = fsub float %274, %283
  %285 = fmul float %262, %274
  %286 = fmul float %279, %283
  %287 = fsub float %286, %285
  %288 = fmul float %280, %283
  %289 = fadd float %288, %287
  %290 = fmul float %284, %279
  %291 = fadd float %290, %289
  %292 = fmul float %280, %284
  %293 = fadd float %292, %291
  %294 = fmul float %262, %276
  %295 = fadd float %294, %293
  %296 = fmul float %264, %274
  %297 = fadd float %296, %295
  %298 = fadd float %285, 0x3FD5555680000000
  %299 = fsub float 0x3FD5555680000000, %298
  %300 = fadd float %285, %299
  %301 = fadd float %300, %297
  %302 = bitcast float %298 to i32
  %303 = and i32 %302, -4096
  %304 = bitcast i32 %303 to float
  %305 = fsub float %298, %304
  %306 = fmul float %262, %298
  %307 = fmul float %279, %304
  %308 = fsub float %307, %306
  %309 = fmul float %305, %279
  %310 = fadd float %309, %308
  %311 = fmul float %280, %304
  %312 = fadd float %311, %310
  %313 = fmul float %280, %305
  %314 = fadd float %313, %312
  %315 = fmul float %264, %298
  %316 = fadd float %315, %314
  %317 = fmul float %262, %301
  %318 = fadd float %316, %317
  %319 = fadd float %306, 1.000000e+00
  %320 = fsub float 1.000000e+00, %319
  %321 = fadd float %306, %320
  %322 = fadd float %321, %318
  %323 = bitcast float %319 to i32
  %324 = and i32 %323, -4096
  %325 = bitcast i32 %324 to float
  %326 = fsub float %319, %325
  %327 = fmul float %319, %244
  %328 = fmul float %249, %325
  %329 = fsub float %328, %327
  %330 = fmul float %250, %325
  %331 = fadd float %330, %329
  %332 = fdiv float 1.000000e+00, %327
  %333 = bitcast float %327 to i32
  %334 = and i32 %333, -4096
  %335 = bitcast i32 %334 to float
  %336 = fsub float %327, %335
  %337 = bitcast float %332 to i32
  %338 = and i32 %337, -4096
  %339 = bitcast i32 %338 to float
  %340 = fsub float %332, %339
  %341 = insertelement <2 x float> undef, float %335, i32 0
  %342 = insertelement <2 x float> %341, float %326, i32 1
  %343 = insertelement <2 x float> undef, float %339, i32 0
  %344 = insertelement <2 x float> %343, float %249, i32 1
  %345 = fmul <2 x float> %342, %344
  %346 = insertelement <2 x float> <float -1.000000e+00, float undef>, float %331, i32 1
  %347 = fadd <2 x float> %346, %345
  %348 = insertelement <2 x float> undef, float %340, i32 0
  %349 = insertelement <2 x float> %348, float %250, i32 1
  %350 = fmul <2 x float> %349, %342
  %351 = fadd <2 x float> %350, %347
  %352 = insertelement <2 x float> undef, float %336, i32 0
  %353 = insertelement <2 x float> %352, float %322, i32 1
  %354 = insertelement <2 x float> %343, float %244, i32 1
  %355 = fmul <2 x float> %353, %354
  %356 = fadd <2 x float> %355, %351
  %357 = insertelement <2 x float> %352, float %319, i32 1
  %358 = insertelement <2 x float> %348, float %247, i32 1
  %359 = fmul <2 x float> %357, %358
  %360 = fadd <2 x float> %359, %356
  %361 = extractelement <2 x float> %360, i32 1
  %362 = fmul float %332, %361
  %363 = extractelement <2 x float> %360, i32 0
  %364 = fadd float %363, %362
  %365 = fmul float %332, %364
  %366 = fsub float -0.000000e+00, %365
  %367 = icmp eq i32 %238, 0
  %368 = select i1 %367, float %327, float %332
  %369 = select i1 %367, float %361, float %366
  %370 = fadd float %368, %369
  %371 = icmp eq i32 %2, -2147483648
  %372 = select i1 %371, float %0, float %370
  ret float %372
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atanf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = fdiv float 1.000000e+00, %4
  %8 = select i1 %6, float %4, float %7
  %9 = fmul float %8, %8
  %10 = fmul float %9, %9
  %11 = fmul float %10, %10
  %12 = insertelement <2 x float> undef, float %9, i32 0
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, <float 0x3FBB399E40000000, float 0x3F672199A0000000>
  %15 = fadd <2 x float> %14, <float 0xBFC22DF3E0000000, float 0xBF905701A0000000>
  %16 = fmul <2 x float> %13, <float 0x3FC99734E0000000, float 0x3FA5C336C0000000>
  %17 = fadd <2 x float> %16, <float 0xBFD5554BA0000000, float 0xBFB32BFF40000000>
  %18 = insertelement <2 x float> undef, float %10, i32 0
  %19 = shufflevector <2 x float> %18, <2 x float> undef, <2 x i32> zeroinitializer
  %20 = fmul <2 x float> %19, %15
  %21 = fadd <2 x float> %17, %20
  %22 = extractelement <2 x float> %21, i32 1
  %23 = fmul float %11, %22
  %24 = extractelement <2 x float> %21, i32 0
  %25 = fadd float %24, %23
  %26 = fmul float %9, %25
  %27 = fmul float %8, %26
  %28 = fadd float %8, %27
  %29 = fsub float 0x3FF921FB60000000, %28
  %30 = select i1 %5, float %29, float %28
  %31 = and i32 %2, -2147483648
  %32 = bitcast float %30 to i32
  %33 = xor i32 %31, %32
  %34 = bitcast i32 %33 to float
  ret float %34
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atan2f1_u35purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = ashr i32 %6, 31
  %8 = and i32 %7, -2
  %9 = and i32 %6, 2147483647
  %10 = bitcast i32 %9 to float
  %11 = or i32 %7, 1
  %12 = fcmp uge float %10, %5
  %13 = select i1 %12, i32 %8, i32 %11
  %14 = fsub float -0.000000e+00, %10
  %15 = select i1 %12, float %5, float %14
  %16 = fcmp ogt float %10, %5
  %17 = select i1 %16, float %10, float %5
  %18 = fdiv float %15, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, %19
  %21 = fmul float %20, %20
  %22 = fmul float %19, 0x3F672199A0000000
  %23 = fadd float %22, 0xBF905701A0000000
  %24 = fmul float %19, 0x3FA5C336C0000000
  %25 = fadd float %24, 0xBFB32BFF40000000
  %26 = fmul float %20, %23
  %27 = fadd float %25, %26
  %28 = fmul float %19, 0x3FBB399E40000000
  %29 = fadd float %28, 0xBFC22DF3E0000000
  %30 = fmul float %19, 0x3FC99734E0000000
  %31 = fadd float %30, 0xBFD5554BA0000000
  %32 = fmul float %20, %29
  %33 = fadd float %31, %32
  %34 = fmul float %21, %27
  %35 = fadd float %33, %34
  %36 = fmul float %19, %35
  %37 = fmul float %18, %36
  %38 = fadd float %18, %37
  %39 = sitofp i32 %13 to float
  %40 = fmul float %39, 0x3FF921FB60000000
  %41 = fadd float %40, %38
  %42 = bitcast float %41 to i32
  %43 = and i32 %6, -2147483648
  %44 = xor i32 %43, %42
  %45 = bitcast i32 %44 to float
  %46 = fcmp oeq float %1, 0x7FF0000000000000
  %47 = fcmp oeq float %1, 0xFFF0000000000000
  %48 = or i1 %46, %47
  %49 = fcmp oeq float %1, 0.000000e+00
  %50 = or i1 %49, %48
  %51 = or i32 %43, 1070141403
  %52 = bitcast i32 %51 to float
  %53 = fsub float 0x3FF921FB60000000, %52
  %54 = select i1 %48, float %53, float 0x3FF921FB60000000
  %55 = select i1 %50, float %54, float %45
  %56 = fcmp une float %0, 0x7FF0000000000000
  %57 = fcmp une float %0, 0xFFF0000000000000
  %58 = or i32 %43, 1061752795
  %59 = bitcast i32 %58 to float
  %60 = fsub float 0x3FF921FB60000000, %59
  %61 = select i1 %48, float %60, float 0x3FF921FB60000000
  %62 = and i1 %57, %56
  %63 = select i1 %62, float %55, float %61
  %64 = fcmp une float %0, 0.000000e+00
  %65 = and i32 %7, 1078530011
  %66 = fcmp uno float %0, %1
  %67 = bitcast float %63 to i32
  %68 = select i1 %64, i32 %67, i32 %65
  %69 = and i32 %3, -2147483648
  %70 = xor i32 %68, %69
  %71 = bitcast i32 %70 to float
  %72 = select i1 %66, float 0xFFFFFFFFE0000000, float %71
  ret float %72
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinf1_u35purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #3
  %11 = select i1 %5, float %10, float %4
  %12 = fmul float %9, 0x3FA57DB020000000
  %13 = fadd float %12, 0x3F98D27DC0000000
  %14 = fmul float %9, %13
  %15 = fadd float %14, 0x3FA7486640000000
  %16 = fmul float %9, %15
  %17 = fadd float %16, 0x3FB32FF140000000
  %18 = fmul float %9, %17
  %19 = fadd float %18, 0x3FC5555E40000000
  %20 = fmul float %9, %11
  %21 = fmul float %19, %20
  %22 = fadd float %11, %21
  %23 = fmul float %22, 2.000000e+00
  %24 = fsub float 0x3FF921FB60000000, %23
  %25 = select i1 %5, float %24, float %22
  %26 = bitcast float %25 to i32
  %27 = and i32 %2, -2147483648
  %28 = xor i32 %27, %26
  %29 = bitcast i32 %28 to float
  ret float %29
}

; Function Attrs: nounwind uwtable
define float @Sleef_acosf1_u35purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #3
  %11 = select i1 %5, float %4, float %10
  %12 = fcmp une float %4, 1.000000e+00
  %13 = select i1 %12, float %11, float 0.000000e+00
  %14 = fmul float %9, 0x3FA57DB020000000
  %15 = fadd float %14, 0x3F98D27DC0000000
  %16 = fmul float %9, %15
  %17 = fadd float %16, 0x3FA7486640000000
  %18 = fmul float %9, %17
  %19 = fadd float %18, 0x3FB32FF140000000
  %20 = fmul float %9, %19
  %21 = fadd float %20, 0x3FC5555E40000000
  %22 = fmul float %9, %13
  %23 = fmul float %21, %22
  %24 = bitcast float %13 to i32
  %25 = and i32 %2, -2147483648
  %26 = xor i32 %25, %24
  %27 = bitcast i32 %26 to float
  %28 = bitcast float %23 to i32
  %29 = xor i32 %25, %28
  %30 = bitcast i32 %29 to float
  %31 = fadd float %27, %30
  %32 = fsub float 0x3FF921FB60000000, %31
  %33 = fadd float %13, %23
  %34 = fmul float %33, 2.000000e+00
  %35 = select i1 %5, float %32, float %34
  %36 = fcmp uge float %0, 0.000000e+00
  %37 = fsub float 0x400921FB60000000, %35
  %38 = or i1 %36, %5
  %39 = select i1 %38, float %35, float %37
  ret float %39
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atan2f1_u10purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %1 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp uge float %5, 0x37F0000080000000
  %7 = fmul float %1, 0x4170000000000000
  %8 = select i1 %6, float %1, float %7
  %9 = fmul float %0, 0x4170000000000000
  %10 = select i1 %6, float %0, float %9
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = bitcast i32 %12 to float
  %14 = fcmp uge float %8, 0.000000e+00
  %15 = select i1 %14, i32 0, i32 -2
  %16 = fcmp olt float %8, 0.000000e+00
  %17 = bitcast float %8 to i32
  %18 = select i1 %16, i32 -2147483648, i32 0
  %19 = xor i32 %18, %17
  %20 = bitcast i32 %19 to float
  %21 = bitcast i32 %18 to float
  %22 = fcmp ogt float %13, %20
  %23 = zext i1 %22 to i32
  %24 = or i32 %15, %23
  %25 = fcmp ule float %13, %20
  %26 = fsub float -0.000000e+00, %20
  %27 = fsub float -0.000000e+00, %21
  %28 = select i1 %25, float %13, float %26
  %29 = select i1 %25, float 0.000000e+00, float %27
  %30 = select i1 %25, float %20, float %13
  %31 = select i1 %25, float %21, float 0.000000e+00
  %32 = fdiv float 1.000000e+00, %30
  %33 = bitcast float %30 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %30, %35
  %37 = bitcast float %32 to i32
  %38 = and i32 %37, -4096
  %39 = bitcast i32 %38 to float
  %40 = fsub float %32, %39
  %41 = bitcast float %28 to i32
  %42 = and i32 %41, -4096
  %43 = bitcast i32 %42 to float
  %44 = fsub float %28, %43
  %45 = fmul float %28, %32
  %46 = fmul float %35, %39
  %47 = fadd float %46, -1.000000e+00
  %48 = fmul float %40, %35
  %49 = fadd float %48, %47
  %50 = fmul float %36, %39
  %51 = fadd float %50, %49
  %52 = fmul float %36, %40
  %53 = fadd float %52, %51
  %54 = fmul float %43, %39
  %55 = fsub float %54, %45
  %56 = fmul float %40, %43
  %57 = fadd float %56, %55
  %58 = fmul float %44, %39
  %59 = fadd float %58, %57
  %60 = fmul float %44, %40
  %61 = fadd float %60, %59
  %62 = fmul float %45, %53
  %63 = fsub float %61, %62
  %64 = fmul float %31, %45
  %65 = fsub float %29, %64
  %66 = fmul float %32, %65
  %67 = fadd float %66, %63
  %68 = bitcast float %45 to i32
  %69 = and i32 %68, -4096
  %70 = bitcast i32 %69 to float
  %71 = fsub float %45, %70
  %72 = fmul float %45, %45
  %73 = fmul float %70, %70
  %74 = fsub float %73, %72
  %75 = fadd float %70, %70
  %76 = fmul float %75, %71
  %77 = fadd float %76, %74
  %78 = fmul float %71, %71
  %79 = fadd float %78, %77
  %80 = fadd float %67, %67
  %81 = fmul float %45, %80
  %82 = fadd float %79, %81
  %83 = fadd float %72, %82
  %84 = fsub float %72, %83
  %85 = fadd float %82, %84
  %86 = fmul float %83, 0x3F5CE6AA20000000
  %87 = fsub float 0x3F86191D60000000, %86
  %88 = fmul float %83, %87
  %89 = fadd float %88, 0xBF9FB30CE0000000
  %90 = fmul float %83, %89
  %91 = fadd float %90, 0x3FAD8FA3C0000000
  %92 = fmul float %83, %91
  %93 = fadd float %92, 0xBFB57A25C0000000
  %94 = fmul float %83, %93
  %95 = fadd float %94, 0x3FBC05CDC0000000
  %96 = fmul float %83, %95
  %97 = fadd float %96, 0xBFC2419880000000
  %98 = fmul float %83, %97
  %99 = fadd float %98, 0x3FC9990CA0000000
  %100 = fmul float %83, %99
  %101 = fadd float %100, 0xBFD5555360000000
  %102 = fsub float 0xBFD5555360000000, %101
  %103 = fadd float %100, %102
  %104 = bitcast float %83 to i32
  %105 = and i32 %104, -4096
  %106 = bitcast i32 %105 to float
  %107 = fsub float %83, %106
  %108 = bitcast float %101 to i32
  %109 = and i32 %108, -4096
  %110 = bitcast i32 %109 to float
  %111 = fsub float %101, %110
  %112 = fmul float %83, %101
  %113 = fmul float %106, %110
  %114 = fsub float %113, %112
  %115 = fmul float %107, %110
  %116 = fadd float %115, %114
  %117 = fmul float %111, %106
  %118 = fadd float %117, %116
  %119 = fmul float %107, %111
  %120 = fadd float %119, %118
  %121 = fmul float %83, %103
  %122 = fadd float %121, %120
  %123 = fmul float %85, %101
  %124 = fadd float %123, %122
  %125 = fadd float %112, 1.000000e+00
  %126 = fsub float 1.000000e+00, %125
  %127 = fadd float %112, %126
  %128 = fadd float %127, %124
  %129 = bitcast float %125 to i32
  %130 = and i32 %129, -4096
  %131 = bitcast i32 %130 to float
  %132 = fsub float %125, %131
  %133 = fmul float %45, %125
  %134 = fmul float %70, %131
  %135 = fsub float %134, %133
  %136 = fmul float %71, %131
  %137 = fadd float %136, %135
  %138 = fmul float %132, %70
  %139 = fadd float %138, %137
  %140 = fmul float %71, %132
  %141 = fadd float %140, %139
  %142 = fmul float %45, %128
  %143 = fadd float %141, %142
  %144 = fmul float %67, %125
  %145 = fadd float %144, %143
  %146 = sitofp i32 %24 to float
  %147 = bitcast float %146 to i32
  %148 = and i32 %147, -4096
  %149 = bitcast i32 %148 to float
  %150 = fsub float %146, %149
  %151 = fmul float %146, 0x3FF921FB60000000
  %152 = fmul float %149, 0x3FF9200000000000
  %153 = fsub float %152, %151
  %154 = fmul float %149, 0x3F3FB60000000000
  %155 = fadd float %154, %153
  %156 = fmul float %150, 0x3FF9200000000000
  %157 = fadd float %156, %155
  %158 = fmul float %150, 0x3F3FB60000000000
  %159 = fadd float %158, %157
  %160 = fmul float %146, 0x3E6777A5C0000000
  %161 = fsub float %159, %160
  %162 = fadd float %151, %133
  %163 = fsub float %151, %162
  %164 = fadd float %133, %163
  %165 = fadd float %161, %164
  %166 = fadd float %165, %145
  %167 = fadd float %162, %166
  %168 = bitcast float %167 to i32
  %169 = and i32 %17, -2147483648
  %170 = xor i32 %169, %168
  %171 = bitcast i32 %170 to float
  %172 = fcmp oeq float %8, 0x7FF0000000000000
  %173 = fcmp oeq float %8, 0xFFF0000000000000
  %174 = or i1 %172, %173
  %175 = fcmp oeq float %8, 0.000000e+00
  %176 = or i1 %175, %174
  %177 = or i32 %169, 1070141403
  %178 = bitcast i32 %177 to float
  %179 = fsub float 0x3FF921FB60000000, %178
  %180 = select i1 %174, float %179, float 0x3FF921FB60000000
  %181 = select i1 %176, float %180, float %171
  %182 = fcmp une float %10, 0x7FF0000000000000
  %183 = fcmp une float %10, 0xFFF0000000000000
  %184 = or i32 %169, 1061752795
  %185 = bitcast i32 %184 to float
  %186 = fsub float 0x3FF921FB60000000, %185
  %187 = select i1 %174, float %186, float 0x3FF921FB60000000
  %188 = and i1 %183, %182
  %189 = select i1 %188, float %181, float %187
  %190 = fcmp une float %10, 0.000000e+00
  %191 = ashr i32 %17, 31
  %192 = and i32 %191, 1078530011
  %193 = fcmp uno float %10, %8
  %194 = bitcast float %189 to i32
  %195 = select i1 %190, i32 %194, i32 %192
  %196 = and i32 %11, -2147483648
  %197 = xor i32 %195, %196
  %198 = bitcast i32 %197 to float
  %199 = select i1 %193, float 0xFFFFFFFFE0000000, float %198
  ret float %199
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinf1_u10purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #3
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, -4096
  %13 = bitcast i32 %12 to float
  %14 = fsub float %10, %13
  %15 = fmul float %10, %10
  %16 = fmul float %13, %13
  %17 = fsub float %16, %15
  %18 = fmul float %14, %13
  %19 = fadd float %18, %17
  %20 = fadd float %18, %19
  %21 = fmul float %14, %14
  %22 = fadd float %21, %20
  %23 = fadd float %9, %15
  %24 = fsub float %23, %9
  %25 = fsub float %23, %24
  %26 = fsub float %9, %25
  %27 = fsub float %15, %24
  %28 = fadd float %27, %26
  %29 = fadd float %28, %22
  %30 = fdiv float 1.000000e+00, %10
  %31 = bitcast float %30 to i32
  %32 = and i32 %31, -4096
  %33 = bitcast i32 %32 to float
  %34 = fsub float %30, %33
  %35 = fmul float %13, %33
  %36 = fadd float %35, -1.000000e+00
  %37 = fmul float %34, %13
  %38 = fadd float %37, %36
  %39 = fmul float %14, %33
  %40 = fadd float %39, %38
  %41 = fmul float %14, %34
  %42 = fadd float %41, %40
  %43 = fmul float %30, %42
  %44 = bitcast float %23 to i32
  %45 = and i32 %44, -4096
  %46 = bitcast i32 %45 to float
  %47 = fsub float %23, %46
  %48 = fmul float %30, %23
  %49 = fmul float %33, %46
  %50 = fsub float %49, %48
  %51 = fmul float %47, %33
  %52 = fadd float %51, %50
  %53 = fmul float %34, %46
  %54 = fadd float %53, %52
  %55 = fmul float %34, %47
  %56 = fadd float %55, %54
  %57 = fmul float %23, %43
  %58 = fsub float %56, %57
  %59 = fmul float %30, %29
  %60 = fadd float %59, %58
  %61 = fmul float %48, 5.000000e-01
  %62 = fmul float %60, 5.000000e-01
  %63 = select i1 %5, float %61, float %4
  %64 = fcmp une float %4, 1.000000e+00
  %65 = select i1 %64, float %63, float 0.000000e+00
  %66 = and i1 %64, %5
  %67 = select i1 %66, float %62, float 0.000000e+00
  %68 = fmul float %9, 0x3FA57DB020000000
  %69 = fadd float %68, 0x3F98D27DC0000000
  %70 = fmul float %9, %69
  %71 = fadd float %70, 0x3FA7486640000000
  %72 = fmul float %9, %71
  %73 = fadd float %72, 0x3FB32FF140000000
  %74 = fmul float %9, %73
  %75 = fadd float %74, 0x3FC5555E40000000
  %76 = fmul float %9, %65
  %77 = fmul float %75, %76
  %78 = fsub float 0x3FE921FB60000000, %65
  %79 = fsub float 0x3FE921FB60000000, %78
  %80 = fsub float %79, %65
  %81 = fadd float %80, 0xBE5777A5C0000000
  %82 = fsub float %81, %67
  %83 = fsub float %78, %77
  %84 = fsub float %78, %83
  %85 = fsub float %84, %77
  %86 = fadd float %85, %82
  %87 = fadd float %65, %77
  %88 = fadd float %83, %86
  %89 = fmul float %88, 2.000000e+00
  %90 = select i1 %5, float %89, float %87
  %91 = bitcast float %90 to i32
  %92 = and i32 %2, -2147483648
  %93 = xor i32 %92, %91
  %94 = bitcast i32 %93 to float
  ret float %94
}

; Function Attrs: nounwind uwtable
define float @Sleef_acosf1_u10purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #3
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, -4096
  %13 = bitcast i32 %12 to float
  %14 = fsub float %10, %13
  %15 = fmul float %10, %10
  %16 = fmul float %13, %13
  %17 = fsub float %16, %15
  %18 = fmul float %14, %13
  %19 = fadd float %18, %17
  %20 = fadd float %18, %19
  %21 = fmul float %14, %14
  %22 = fadd float %21, %20
  %23 = fadd float %9, %15
  %24 = fsub float %23, %9
  %25 = fsub float %23, %24
  %26 = fsub float %9, %25
  %27 = fsub float %15, %24
  %28 = fadd float %27, %26
  %29 = fadd float %28, %22
  %30 = fdiv float 1.000000e+00, %10
  %31 = bitcast float %30 to i32
  %32 = and i32 %31, -4096
  %33 = bitcast i32 %32 to float
  %34 = fsub float %30, %33
  %35 = fmul float %13, %33
  %36 = fadd float %35, -1.000000e+00
  %37 = fmul float %34, %13
  %38 = fadd float %37, %36
  %39 = fmul float %14, %33
  %40 = fadd float %39, %38
  %41 = fmul float %14, %34
  %42 = fadd float %41, %40
  %43 = fmul float %30, %42
  %44 = bitcast float %23 to i32
  %45 = and i32 %44, -4096
  %46 = bitcast i32 %45 to float
  %47 = fsub float %23, %46
  %48 = fmul float %30, %23
  %49 = fmul float %33, %46
  %50 = fsub float %49, %48
  %51 = fmul float %47, %33
  %52 = fadd float %51, %50
  %53 = fmul float %34, %46
  %54 = fadd float %53, %52
  %55 = fmul float %34, %47
  %56 = fadd float %55, %54
  %57 = fmul float %23, %43
  %58 = fsub float %56, %57
  %59 = fmul float %30, %29
  %60 = fadd float %59, %58
  %61 = fmul float %48, 5.000000e-01
  %62 = fmul float %60, 5.000000e-01
  %63 = select i1 %5, float %4, float %61
  %64 = select i1 %5, float 0.000000e+00, float %62
  %65 = fcmp une float %4, 1.000000e+00
  %66 = select i1 %65, float %63, float 0.000000e+00
  %67 = select i1 %65, float %64, float 0.000000e+00
  %68 = fmul float %9, 0x3FA57DB020000000
  %69 = fadd float %68, 0x3F98D27DC0000000
  %70 = fmul float %9, %69
  %71 = fadd float %70, 0x3FA7486640000000
  %72 = fmul float %9, %71
  %73 = fadd float %72, 0x3FB32FF140000000
  %74 = fmul float %9, %73
  %75 = fadd float %74, 0x3FC5555E40000000
  %76 = fmul float %9, %66
  %77 = fmul float %75, %76
  %78 = bitcast float %66 to i32
  %79 = and i32 %2, -2147483648
  %80 = xor i32 %79, %78
  %81 = bitcast i32 %80 to float
  %82 = bitcast float %77 to i32
  %83 = xor i32 %79, %82
  %84 = bitcast i32 %83 to float
  %85 = fadd float %81, %84
  %86 = fsub float %81, %85
  %87 = fadd float %86, %84
  %88 = fsub float 0x3FF921FB60000000, %85
  %89 = fsub float 0x3FF921FB60000000, %88
  %90 = fsub float %89, %85
  %91 = fadd float %90, 0xBE6777A5C0000000
  %92 = fsub float %91, %87
  %93 = fadd float %66, %77
  %94 = fsub float %66, %93
  %95 = fadd float %77, %94
  %96 = fadd float %95, %67
  %97 = fmul float %93, 2.000000e+00
  %98 = fmul float %96, 2.000000e+00
  %99 = select i1 %5, float %88, float %97
  %100 = select i1 %5, float %92, float %98
  %101 = fcmp uge float %0, 0.000000e+00
  %102 = fsub float 0x400921FB60000000, %99
  %103 = fsub float 0x400921FB60000000, %102
  %104 = fsub float %103, %99
  %105 = fadd float %104, 0xBE7777A5C0000000
  %106 = fsub float %105, %100
  %107 = or i1 %101, %5
  %108 = select i1 %107, float %99, float %102
  %109 = select i1 %107, float %100, float %106
  %110 = fadd float %108, %109
  ret float %110
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atanf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = select i1 %6, float 0.000000e+00, float -0.000000e+00
  %8 = insertelement <2 x i1> undef, i1 %6, i32 0
  %9 = shufflevector <2 x i1> %8, <2 x i1> undef, <2 x i32> zeroinitializer
  %10 = insertelement <2 x float> <float undef, float 1.000000e+00>, float %4, i32 0
  %11 = insertelement <2 x float> <float -1.000000e+00, float undef>, float %4, i32 1
  %12 = select <2 x i1> %9, <2 x float> %10, <2 x float> %11
  %13 = extractelement <2 x float> %12, i32 1
  %14 = fdiv float 1.000000e+00, %13
  %15 = bitcast float %14 to i32
  %16 = and i32 %15, -4096
  %17 = bitcast i32 %16 to float
  %18 = fsub float %14, %17
  %19 = bitcast <2 x float> %12 to <2 x i32>
  %20 = and <2 x i32> %19, <i32 -4096, i32 -4096>
  %21 = bitcast <2 x i32> %20 to <2 x float>
  %22 = fsub <2 x float> %12, %21
  %23 = extractelement <2 x float> %12, i32 0
  %24 = fmul float %23, %14
  %25 = insertelement <2 x float> undef, float %17, i32 0
  %26 = shufflevector <2 x float> %25, <2 x float> undef, <2 x i32> zeroinitializer
  %27 = fmul <2 x float> %26, %21
  %28 = insertelement <2 x float> <float undef, float -1.000000e+00>, float %24, i32 0
  %29 = fsub <2 x float> %27, %28
  %30 = fadd <2 x float> %27, %28
  %31 = shufflevector <2 x float> %29, <2 x float> %30, <2 x i32> <i32 0, i32 3>
  %32 = insertelement <2 x float> undef, float %18, i32 0
  %33 = shufflevector <2 x float> %32, <2 x float> undef, <2 x i32> zeroinitializer
  %34 = fmul <2 x float> %33, %21
  %35 = fadd <2 x float> %34, %31
  %36 = fmul <2 x float> %22, %26
  %37 = fadd <2 x float> %36, %35
  %38 = fmul <2 x float> %22, %33
  %39 = fadd <2 x float> %38, %37
  %40 = extractelement <2 x float> %39, i32 1
  %41 = fmul float %24, %40
  %42 = extractelement <2 x float> %39, i32 0
  %43 = fsub float %42, %41
  %44 = fmul float %24, 0.000000e+00
  %45 = fsub float %7, %44
  %46 = fmul float %14, %45
  %47 = fadd float %46, %43
  %48 = bitcast float %24 to i32
  %49 = and i32 %48, -4096
  %50 = bitcast i32 %49 to float
  %51 = fsub float %24, %50
  %52 = fmul float %24, %24
  %53 = fmul float %50, %50
  %54 = fsub float %53, %52
  %55 = fadd float %50, %50
  %56 = fmul float %55, %51
  %57 = fadd float %56, %54
  %58 = fmul float %51, %51
  %59 = fadd float %58, %57
  %60 = fadd float %47, %47
  %61 = fmul float %24, %60
  %62 = fadd float %59, %61
  %63 = fadd float %52, %62
  %64 = fsub float %52, %63
  %65 = fadd float %62, %64
  %66 = fmul float %63, 0x3F5CE6AA20000000
  %67 = fsub float 0x3F86191D60000000, %66
  %68 = fmul float %63, %67
  %69 = fadd float %68, 0xBF9FB30CE0000000
  %70 = fmul float %63, %69
  %71 = fadd float %70, 0x3FAD8FA3C0000000
  %72 = fmul float %63, %71
  %73 = fadd float %72, 0xBFB57A25C0000000
  %74 = fmul float %63, %73
  %75 = fadd float %74, 0x3FBC05CDC0000000
  %76 = fmul float %63, %75
  %77 = fadd float %76, 0xBFC2419880000000
  %78 = fmul float %63, %77
  %79 = fadd float %78, 0x3FC9990CA0000000
  %80 = fmul float %63, %79
  %81 = fadd float %80, 0xBFD5555360000000
  %82 = fsub float 0xBFD5555360000000, %81
  %83 = fadd float %80, %82
  %84 = bitcast float %63 to i32
  %85 = and i32 %84, -4096
  %86 = bitcast i32 %85 to float
  %87 = fsub float %63, %86
  %88 = bitcast float %81 to i32
  %89 = and i32 %88, -4096
  %90 = bitcast i32 %89 to float
  %91 = fsub float %81, %90
  %92 = fmul float %63, %81
  %93 = fmul float %86, %90
  %94 = fsub float %93, %92
  %95 = fmul float %87, %90
  %96 = fadd float %95, %94
  %97 = fmul float %91, %86
  %98 = fadd float %97, %96
  %99 = fmul float %87, %91
  %100 = fadd float %99, %98
  %101 = fmul float %63, %83
  %102 = fadd float %101, %100
  %103 = fmul float %65, %81
  %104 = fadd float %103, %102
  %105 = fadd float %92, 1.000000e+00
  %106 = fsub float 1.000000e+00, %105
  %107 = fadd float %92, %106
  %108 = fadd float %107, %104
  %109 = bitcast float %105 to i32
  %110 = and i32 %109, -4096
  %111 = bitcast i32 %110 to float
  %112 = fsub float %105, %111
  %113 = fmul float %24, %105
  %114 = fmul float %50, %111
  %115 = fsub float %114, %113
  %116 = fmul float %51, %111
  %117 = fadd float %116, %115
  %118 = fmul float %112, %50
  %119 = fadd float %118, %117
  %120 = fmul float %51, %112
  %121 = fadd float %120, %119
  %122 = fmul float %24, %108
  %123 = fadd float %121, %122
  %124 = fmul float %47, %105
  %125 = fadd float %124, %123
  %126 = uitofp i1 %5 to float
  %127 = bitcast float %126 to i32
  %128 = and i32 %127, -4096
  %129 = bitcast i32 %128 to float
  %130 = fsub float %126, %129
  %131 = fmul float %126, 0x3FF921FB60000000
  %132 = fmul float %129, 0x3FF9200000000000
  %133 = fsub float %132, %131
  %134 = fmul float %129, 0x3F3FB60000000000
  %135 = fadd float %134, %133
  %136 = fmul float %130, 0x3FF9200000000000
  %137 = fadd float %136, %135
  %138 = fmul float %130, 0x3F3FB60000000000
  %139 = fadd float %138, %137
  %140 = fmul float %126, 0x3E6777A5C0000000
  %141 = fsub float %139, %140
  %142 = fadd float %131, %113
  %143 = fsub float %131, %142
  %144 = fadd float %113, %143
  %145 = fadd float %141, %144
  %146 = fadd float %145, %125
  %147 = fadd float %142, %146
  %148 = fcmp une float %0, 0x7FF0000000000000
  %149 = fcmp une float %0, 0xFFF0000000000000
  %150 = and i1 %149, %148
  %151 = bitcast float %147 to i32
  %152 = select i1 %150, i32 %151, i32 1070141403
  %153 = and i32 %2, -2147483648
  %154 = xor i32 %152, %153
  %155 = bitcast i32 %154 to float
  ret float %155
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_logf1_u35purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, 0x3FCEA0D200000000
  %21 = fadd float %20, 0x3FD2406C80000000
  %22 = fmul float %19, %21
  %23 = fadd float %22, 0x3FD999B240000000
  %24 = fmul float %19, %23
  %25 = fadd float %24, 0x3FE5555560000000
  %26 = fmul float %19, %25
  %27 = fadd float %26, 2.000000e+00
  %28 = sitofp i32 %15 to float
  %29 = fmul float %28, 0x3FE62E4300000000
  %30 = fmul float %18, %27
  %31 = fadd float %29, %30
  %32 = fcmp une float %4, 0x7FF0000000000000
  %33 = select i1 %32, float %31, float 0x7FF0000000000000
  %34 = fcmp oge float %4, 0.000000e+00
  %35 = select i1 %34, float %33, float 0x7FF8000000000000
  %36 = fcmp une float %4, 0.000000e+00
  %37 = select i1 %36, float %35, float 0xFFF0000000000000
  ret float %37
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_expf1_u10purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FF7154760000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fmul float %12, 0x3FE62E4000000000
  %14 = fsub float %0, %13
  %15 = fmul float %12, 0x3EB7F7D1C0000000
  %16 = fsub float %14, %15
  %17 = fmul float %16, 0x3F2A057B40000000
  %18 = fadd float %17, 0x3F56D2D920000000
  %19 = fmul float %16, %18
  %20 = fadd float %19, 0x3F811114C0000000
  %21 = fmul float %16, %20
  %22 = fadd float %21, 0x3FA5554F40000000
  %23 = fmul float %16, %22
  %24 = fadd float %23, 0x3FC5555560000000
  %25 = fmul float %16, %24
  %26 = fadd float %25, 5.000000e-01
  %27 = fmul float %16, %16
  %28 = fmul float %27, %26
  %29 = fadd float %16, %28
  %30 = fadd float %29, 1.000000e+00
  %31 = ashr i32 %11, 1
  %32 = shl i32 %31, 23
  %33 = add i32 %32, 1065353216
  %34 = bitcast i32 %33 to float
  %35 = fmul float %30, %34
  %36 = sub i32 %11, %31
  %37 = shl i32 %36, 23
  %38 = add i32 %37, 1065353216
  %39 = bitcast i32 %38 to float
  %40 = fmul float %35, %39
  %41 = fcmp uge float %0, -1.040000e+02
  %42 = select i1 %41, float %40, float 0.000000e+00
  %43 = fcmp ule float %0, 1.000000e+02
  %44 = select i1 %43, float %42, float 0x7FF0000000000000
  ret float %44
}

; Function Attrs: nounwind uwtable
define float @Sleef_sqrtf1_u35purec(float) local_unnamed_addr #1 {
  %2 = tail call float @sqrtf(float %0) #3
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cbrtf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 127, i32 191
  %12 = sub nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 1
  %25 = sitofp i32 %24 to float
  %26 = fadd float %25, 6.144000e+03
  %27 = fmul float %26, 0x3FD5555560000000
  %28 = fptosi float %27 to i64
  %29 = trunc i64 %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 3.000000e+00
  %32 = fsub float %26, %31
  %33 = fptosi float %32 to i64
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, 1
  %36 = select i1 %35, float 0x3FF428A300000000, float 1.000000e+00
  %37 = icmp eq i32 %34, 2
  %38 = select i1 %37, float 0x3FF965FEA0000000, float %36
  %39 = add i32 %29, -2048
  %40 = ashr i32 %39, 1
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %38, %43
  %45 = sub i32 %39, %40
  %46 = shl i32 %45, 23
  %47 = add i32 %46, 1065353216
  %48 = bitcast i32 %47 to float
  %49 = fmul float %44, %48
  %50 = bitcast float %49 to i32
  %51 = bitcast float %23 to i32
  %52 = and i32 %51, -2147483648
  %53 = xor i32 %52, %50
  %54 = bitcast i32 %53 to float
  %55 = and i32 %51, 2147483647
  %56 = bitcast i32 %55 to float
  %57 = fmul float %56, 0x3FE3400420000000
  %58 = fsub float 0x4006912E60000000, %57
  %59 = fmul float %58, %56
  %60 = fadd float %59, 0xC01620F460000000
  %61 = fmul float %60, %56
  %62 = fadd float %61, 0x401797D220000000
  %63 = fmul float %62, %56
  %64 = fadd float %63, 0xC00E79F100000000
  %65 = fmul float %64, %56
  %66 = fadd float %65, 0x4001CB0260000000
  %67 = fmul float %66, %56
  %68 = fmul float %66, %67
  %69 = fmul float %68, 0x3FE5555560000000
  %70 = fmul float %66, %68
  %71 = fadd float %70, -1.000000e+00
  %72 = fmul float %69, %71
  %73 = fsub float %68, %72
  %74 = fmul float %73, %54
  ret float %74
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cbrtf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 127, i32 191
  %12 = sub nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 1
  %25 = sitofp i32 %24 to float
  %26 = fadd float %25, 6.144000e+03
  %27 = fmul float %26, 0x3FD5555560000000
  %28 = fptosi float %27 to i64
  %29 = trunc i64 %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 3.000000e+00
  %32 = fsub float %26, %31
  %33 = fptosi float %32 to i64
  %34 = trunc i64 %33 to i32
  %35 = icmp ne i32 %34, 1
  %36 = icmp ne i32 %34, 2
  %37 = select i1 %35, i32 1065353216, i32 1067533592
  %38 = select i1 %36, i32 %37, i32 1070280693
  %39 = bitcast float %23 to i32
  %40 = and i32 %39, -2147483648
  %41 = or i32 %38, %40
  %42 = bitcast i32 %41 to float
  %43 = select i1 %35, i32 0, i32 -1295101521
  %44 = select i1 %36, i32 %43, i32 849849800
  %45 = xor i32 %44, %40
  %46 = and i32 %39, 2147483647
  %47 = insertelement <2 x i32> undef, i32 %46, i32 0
  %48 = insertelement <2 x i32> %47, i32 %45, i32 1
  %49 = bitcast <2 x i32> %48 to <2 x float>
  %50 = bitcast i32 %46 to float
  %51 = fmul float %50, 0x3FE3400420000000
  %52 = fsub float 0x4006912E60000000, %51
  %53 = fmul float %52, %50
  %54 = fadd float %53, 0xC01620F460000000
  %55 = fmul float %54, %50
  %56 = fadd float %55, 0x401797D220000000
  %57 = fmul float %56, %50
  %58 = fadd float %57, 0xC00E79F100000000
  %59 = fmul float %58, %50
  %60 = fadd float %59, 0x4001CB0260000000
  %61 = fmul float %60, %60
  %62 = fmul float %61, %61
  %63 = fmul float %62, %50
  %64 = fsub float %60, %63
  %65 = fmul float %64, 0x3FD5555560000000
  %66 = fadd float %60, %65
  %67 = bitcast float %66 to i32
  %68 = and i32 %67, -4096
  %69 = bitcast i32 %68 to float
  %70 = fsub float %66, %69
  %71 = fmul float %66, %66
  %72 = fmul float %69, %69
  %73 = fsub float %72, %71
  %74 = fmul float %70, %69
  %75 = fadd float %74, %73
  %76 = fadd float %74, %75
  %77 = fmul float %70, %70
  %78 = fadd float %77, %76
  %79 = bitcast float %71 to i32
  %80 = and i32 %79, -4096
  %81 = bitcast i32 %80 to float
  %82 = fsub float %71, %81
  %83 = fmul float %71, %71
  %84 = fmul float %81, %81
  %85 = fsub float %84, %83
  %86 = fmul float %82, %81
  %87 = fadd float %86, %85
  %88 = fadd float %86, %87
  %89 = fmul float %82, %82
  %90 = fadd float %89, %88
  %91 = fmul float %71, %78
  %92 = fadd float %91, %90
  %93 = fadd float %91, %92
  %94 = bitcast float %83 to i32
  %95 = and i32 %94, -4096
  %96 = bitcast i32 %95 to float
  %97 = fsub float %83, %96
  %98 = fmul float %83, %50
  %99 = insertelement <2 x i32> <i32 2147479552, i32 undef>, i32 %41, i32 1
  %100 = insertelement <2 x i32> <i32 undef, i32 -1075093504>, i32 %39, i32 0
  %101 = and <2 x i32> %99, %100
  %102 = bitcast <2 x i32> %101 to <2 x float>
  %103 = extractelement <2 x float> %102, i32 0
  %104 = fmul float %103, %96
  %105 = fsub float %104, %98
  %106 = fmul float %97, %103
  %107 = fadd float %106, %105
  %108 = insertelement <2 x float> undef, float %50, i32 0
  %109 = insertelement <2 x float> %108, float %42, i32 1
  %110 = fsub <2 x float> %109, %102
  %111 = extractelement <2 x float> %110, i32 0
  %112 = fmul float %111, %96
  %113 = fadd float %112, %107
  %114 = fmul float %111, %97
  %115 = fadd float %114, %113
  %116 = fmul float %93, %50
  %117 = fadd float %115, %116
  %118 = fsub float -0.000000e+00, %66
  %119 = fsub float %98, %66
  %120 = fsub float %119, %98
  %121 = fsub float %119, %120
  %122 = fsub float %98, %121
  %123 = fsub float %118, %120
  %124 = fadd float %123, %122
  %125 = fadd float %124, %117
  %126 = fadd float %119, %125
  %127 = fmul float %126, 0xBFE5555560000000
  %128 = fmul float %66, %127
  %129 = fadd float %71, %128
  %130 = fsub float %129, %71
  %131 = fsub float %129, %130
  %132 = fsub float %71, %131
  %133 = fsub float %128, %130
  %134 = fadd float %133, %132
  %135 = fadd float %78, %134
  %136 = fmul float %129, %50
  %137 = insertelement <2 x float> undef, float %129, i32 0
  %138 = insertelement <2 x float> %137, float %136, i32 1
  %139 = bitcast <2 x float> %138 to <2 x i32>
  %140 = and <2 x i32> %139, <i32 -4096, i32 -4096>
  %141 = bitcast <2 x i32> %140 to <2 x float>
  %142 = fsub <2 x float> %138, %141
  %143 = fmul float %136, %42
  %144 = fmul <2 x float> %102, %141
  %145 = insertelement <2 x float> undef, float %136, i32 0
  %146 = insertelement <2 x float> %145, float %143, i32 1
  %147 = fsub <2 x float> %144, %146
  %148 = fmul <2 x float> %142, %102
  %149 = fadd <2 x float> %148, %147
  %150 = fmul <2 x float> %110, %141
  %151 = fadd <2 x float> %150, %149
  %152 = fmul <2 x float> %110, %142
  %153 = fadd <2 x float> %152, %151
  %154 = insertelement <2 x float> undef, float %135, i32 0
  %155 = insertelement <2 x float> %154, float %136, i32 1
  %156 = fmul <2 x float> %155, %49
  %157 = fadd <2 x float> %156, %153
  %158 = extractelement <2 x float> %157, i32 0
  %159 = fmul float %158, %42
  %160 = extractelement <2 x float> %157, i32 1
  %161 = fadd float %159, %160
  %162 = fadd float %143, %161
  %163 = add i32 %29, -2048
  %164 = ashr i32 %163, 1
  %165 = shl i32 %164, 23
  %166 = add i32 %165, 1065353216
  %167 = bitcast i32 %166 to float
  %168 = fmul float %162, %167
  %169 = sub i32 %163, %164
  %170 = shl i32 %169, 23
  %171 = add i32 %170, 1065353216
  %172 = bitcast i32 %171 to float
  %173 = fmul float %168, %172
  %174 = fcmp une float %50, 0x7FF0000000000000
  %175 = fcmp une float %50, 0xFFF0000000000000
  %176 = or i32 %40, 2139095040
  %177 = bitcast i32 %176 to float
  %178 = and i1 %175, %174
  %179 = select i1 %178, float %173, float %177
  %180 = fcmp une float %50, 0.000000e+00
  %181 = bitcast i32 %40 to float
  %182 = select i1 %180, float %179, float %181
  ret float %182
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_logf1_u10purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = sitofp i32 %15 to float
  %17 = bitcast float %16 to i32
  %18 = and i32 %17, -4096
  %19 = bitcast i32 %18 to float
  %20 = fsub float %16, %19
  %21 = fmul float %19, 0x3FE62E0000000000
  %22 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %20, i32 1
  %23 = insertelement <2 x float> <float undef, float 0x3F00C00000000000>, float %16, i32 0
  %24 = fmul <2 x float> %22, %23
  %25 = extractelement <2 x float> %24, i32 0
  %26 = fsub float %21, %25
  %27 = fmul float %19, 0x3F00C00000000000
  %28 = fadd float %27, %26
  %29 = fmul float %20, 0x3FE62E0000000000
  %30 = fadd float %29, %28
  %31 = fmul float %16, 0x3E205C6100000000
  %32 = fadd float %13, -1.000000e+00
  %33 = fadd float %32, 1.000000e+00
  %34 = fsub float %32, %33
  %35 = fsub float -1.000000e+00, %34
  %36 = fsub float %13, %33
  %37 = fadd float %36, %35
  %38 = fadd float %13, 1.000000e+00
  %39 = fadd float %38, -1.000000e+00
  %40 = fsub float %38, %39
  %41 = fsub float 1.000000e+00, %40
  %42 = fsub float %13, %39
  %43 = fadd float %42, %41
  %44 = fdiv float 1.000000e+00, %38
  %45 = bitcast float %38 to i32
  %46 = and i32 %45, -4096
  %47 = bitcast i32 %46 to float
  %48 = fsub float %38, %47
  %49 = bitcast float %44 to i32
  %50 = and i32 %49, -4096
  %51 = bitcast i32 %50 to float
  %52 = fsub float %44, %51
  %53 = bitcast float %32 to i32
  %54 = and i32 %53, -4096
  %55 = bitcast i32 %54 to float
  %56 = fsub float %32, %55
  %57 = fmul float %32, %44
  %58 = fmul float %47, %51
  %59 = fadd float %58, -1.000000e+00
  %60 = fmul float %52, %47
  %61 = fadd float %60, %59
  %62 = fmul float %48, %51
  %63 = fadd float %62, %61
  %64 = fmul float %48, %52
  %65 = fadd float %64, %63
  %66 = fmul float %55, %51
  %67 = fsub float %66, %57
  %68 = fmul float %52, %55
  %69 = fadd float %68, %67
  %70 = fmul float %56, %51
  %71 = fadd float %70, %69
  %72 = fmul float %56, %52
  %73 = fadd float %72, %71
  %74 = fmul float %57, %65
  %75 = fsub float %73, %74
  %76 = fmul float %57, %43
  %77 = fsub float %37, %76
  %78 = fmul float %44, %77
  %79 = fadd float %78, %75
  %80 = fmul float %57, %57
  %81 = fmul float %80, 0x3FD35FEB80000000
  %82 = fadd float %81, 0x3FD9933940000000
  %83 = fmul float %80, %82
  %84 = fadd float %83, 0x3FE5555B40000000
  %85 = fmul float %57, 2.000000e+00
  %86 = fmul float %79, 2.000000e+00
  %87 = insertelement <2 x float> undef, float %85, i32 0
  %88 = insertelement <2 x float> %87, float %30, i32 1
  %89 = fadd <2 x float> %24, %88
  %90 = extractelement <2 x float> %89, i32 0
  %91 = fsub float %25, %90
  %92 = fadd float %85, %91
  %93 = fmul float %57, %80
  %94 = fmul float %93, %84
  %95 = fadd float %90, %94
  %96 = insertelement <2 x float> undef, float %95, i32 0
  %97 = insertelement <2 x float> %96, float %31, i32 1
  %98 = fsub <2 x float> %89, %97
  %99 = insertelement <2 x float> undef, float %94, i32 0
  %100 = insertelement <2 x float> %99, float %92, i32 1
  %101 = fadd <2 x float> %100, %98
  %102 = extractelement <2 x float> %101, i32 1
  %103 = fadd float %102, %86
  %104 = extractelement <2 x float> %101, i32 0
  %105 = fadd float %104, %103
  %106 = fadd float %95, %105
  %107 = fcmp une float %4, 0x7FF0000000000000
  %108 = select i1 %107, float %106, float 0x7FF0000000000000
  %109 = fcmp oge float %4, 0.000000e+00
  %110 = select i1 %109, float %108, float 0x7FF8000000000000
  %111 = fcmp une float %4, 0.000000e+00
  %112 = select i1 %111, float %110, float 0xFFF0000000000000
  ret float %112
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_powf1_u10purec(float, float) local_unnamed_addr #0 {
  %3 = fptosi float %1 to i64
  %4 = trunc i64 %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = fcmp oeq float %5, %1
  %7 = bitcast float %1 to i32
  %8 = and i32 %7, 2147483647
  %9 = bitcast i32 %8 to float
  %10 = fcmp ogt float %9, 0x4170000000000000
  %11 = or i1 %10, %6
  %12 = shl i64 %3, 63
  %13 = ashr exact i64 %12, 63
  %14 = trunc i64 %13 to i32
  %15 = fcmp uge float %9, 0x4170000000000000
  %16 = bitcast float %0 to i32
  %17 = and i32 %16, 2147483647
  %18 = bitcast i32 %17 to float
  %19 = fcmp uge float %18, 0x3810000000000000
  %20 = fmul float %18, 0x43F0000000000000
  %21 = select i1 %19, float %18, float %20
  %22 = fmul float %21, 0x3FF5555560000000
  %23 = bitcast float %22 to i32
  %24 = lshr i32 %23, 23
  %25 = and i32 %24, 255
  %26 = bitcast float %21 to i32
  %27 = shl nuw nsw i32 %25, 23
  %28 = add i32 %26, 1065353216
  %29 = sub i32 %28, %27
  %30 = bitcast i32 %29 to float
  %31 = select i1 %19, i32 -127, i32 -191
  %32 = add nsw i32 %25, %31
  %33 = fadd float %30, -1.000000e+00
  %34 = fadd float %33, 1.000000e+00
  %35 = fsub float %33, %34
  %36 = fsub float -1.000000e+00, %35
  %37 = fsub float %30, %34
  %38 = fadd float %37, %36
  %39 = fadd float %30, 1.000000e+00
  %40 = fadd float %39, -1.000000e+00
  %41 = fsub float %39, %40
  %42 = fsub float 1.000000e+00, %41
  %43 = fsub float %30, %40
  %44 = fadd float %43, %42
  %45 = fdiv float 1.000000e+00, %39
  %46 = bitcast float %39 to i32
  %47 = and i32 %46, -4096
  %48 = bitcast i32 %47 to float
  %49 = fsub float %39, %48
  %50 = bitcast float %45 to i32
  %51 = and i32 %50, -4096
  %52 = bitcast i32 %51 to float
  %53 = fsub float %45, %52
  %54 = bitcast float %33 to i32
  %55 = and i32 %54, -4096
  %56 = bitcast i32 %55 to float
  %57 = fsub float %33, %56
  %58 = fmul float %33, %45
  %59 = fmul float %48, %52
  %60 = fadd float %59, -1.000000e+00
  %61 = fmul float %53, %48
  %62 = fadd float %61, %60
  %63 = fmul float %49, %52
  %64 = fadd float %63, %62
  %65 = fmul float %49, %53
  %66 = fadd float %65, %64
  %67 = fmul float %56, %52
  %68 = fsub float %67, %58
  %69 = fmul float %53, %56
  %70 = fadd float %69, %68
  %71 = fmul float %57, %52
  %72 = fadd float %71, %70
  %73 = fmul float %57, %53
  %74 = fadd float %73, %72
  %75 = fmul float %58, %66
  %76 = fsub float %74, %75
  %77 = fmul float %58, %44
  %78 = fsub float %38, %77
  %79 = fmul float %45, %78
  %80 = fadd float %79, %76
  %81 = bitcast float %58 to i32
  %82 = and i32 %81, -4096
  %83 = bitcast i32 %82 to float
  %84 = fsub float %58, %83
  %85 = fmul float %58, %58
  %86 = fmul float %83, %83
  %87 = fsub float %86, %85
  %88 = fadd float %83, %83
  %89 = fmul float %88, %84
  %90 = fadd float %89, %87
  %91 = fmul float %84, %84
  %92 = fadd float %91, %90
  %93 = fadd float %80, %80
  %94 = fmul float %58, %93
  %95 = fadd float %92, %94
  %96 = fmul float %85, 0x3FCEC2D140000000
  %97 = fadd float %96, 0x3FD23F4940000000
  %98 = fmul float %85, %97
  %99 = fadd float %98, 0x3FD999BB20000000
  %100 = sitofp i32 %32 to float
  %101 = bitcast float %100 to i32
  %102 = and i32 %101, -4096
  %103 = bitcast i32 %102 to float
  %104 = fsub float %100, %103
  %105 = fmul float %103, 0x3FE62E0000000000
  %106 = fmul float %58, %85
  %107 = fmul float %85, %99
  %108 = fadd float %107, 0x3FE5555540000000
  %109 = bitcast float %106 to i32
  %110 = and i32 %109, -4096
  %111 = bitcast i32 %110 to float
  %112 = bitcast float %108 to i32
  %113 = and i32 %112, -4096
  %114 = bitcast i32 %113 to float
  %115 = fsub float %108, %114
  %116 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %115, i32 1
  %117 = insertelement <2 x float> undef, float %100, i32 0
  %118 = insertelement <2 x float> %117, float %111, i32 1
  %119 = fmul <2 x float> %116, %118
  %120 = extractelement <2 x float> %119, i32 0
  %121 = fsub float %105, %120
  %122 = fmul float %103, 0x3F00C00000000000
  %123 = fadd float %122, %121
  %124 = fmul float %104, 0x3FE62E0000000000
  %125 = fadd float %124, %123
  %126 = fmul float %104, 0x3F00C00000000000
  %127 = fadd float %126, %125
  %128 = fmul float %100, 0x3E205C6100000000
  %129 = fsub float %127, %128
  %130 = bitcast float %85 to i32
  %131 = and i32 %130, -4096
  %132 = bitcast i32 %131 to float
  %133 = fsub float %85, %132
  %134 = fmul float %83, %132
  %135 = fsub float %134, %106
  %136 = fmul float %133, %83
  %137 = fadd float %136, %135
  %138 = fmul float %84, %132
  %139 = fadd float %138, %137
  %140 = fmul float %84, %133
  %141 = fadd float %140, %139
  %142 = fmul float %85, %80
  %143 = fadd float %141, %142
  %144 = fmul float %58, %95
  %145 = fadd float %143, %144
  %146 = bitcast float %99 to i32
  %147 = and i32 %146, -4096
  %148 = bitcast i32 %147 to float
  %149 = fsub float %99, %148
  %150 = fmul float %132, %148
  %151 = fsub float %150, %107
  %152 = fmul float %133, %148
  %153 = fadd float %152, %151
  %154 = fmul float %149, %132
  %155 = fadd float %154, %153
  %156 = fmul float %133, %149
  %157 = fadd float %156, %155
  %158 = fmul float %99, %95
  %159 = fadd float %157, %158
  %160 = fsub float %108, %107
  %161 = fsub float %108, %160
  %162 = fsub float %107, %161
  %163 = fsub float 0x3FE5555540000000, %160
  %164 = fadd float %163, %162
  %165 = fadd float %159, 0x3E2FB67060000000
  %166 = fadd float %164, %165
  %167 = fsub float %106, %111
  %168 = fmul float %106, %108
  %169 = fmul float %111, %114
  %170 = fsub float %169, %168
  %171 = fmul float %167, %114
  %172 = insertelement <2 x float> <float 2.000000e+00, float undef>, float %167, i32 1
  %173 = insertelement <2 x float> undef, float %58, i32 0
  %174 = insertelement <2 x float> %173, float %115, i32 1
  %175 = fmul <2 x float> %172, %174
  %176 = insertelement <2 x float> undef, float %120, i32 0
  %177 = insertelement <2 x float> %176, float %171, i32 1
  %178 = extractelement <2 x float> %175, i32 0
  %179 = insertelement <2 x float> undef, float %178, i32 0
  %180 = insertelement <2 x float> %179, float %170, i32 1
  %181 = fadd <2 x float> %177, %180
  %182 = fsub <2 x float> %119, %181
  %183 = fadd <2 x float> %119, %181
  %184 = shufflevector <2 x float> %182, <2 x float> %183, <2 x i32> <i32 0, i32 3>
  %185 = fadd <2 x float> %175, %184
  %186 = fmul float %106, %166
  %187 = insertelement <2 x float> undef, float %129, i32 0
  %188 = insertelement <2 x float> %187, float %186, i32 1
  %189 = fadd <2 x float> %185, %188
  %190 = insertelement <2 x float> <float 2.000000e+00, float undef>, float %108, i32 1
  %191 = insertelement <2 x float> undef, float %80, i32 0
  %192 = insertelement <2 x float> %191, float %145, i32 1
  %193 = fmul <2 x float> %190, %192
  %194 = fadd <2 x float> %189, %193
  %195 = extractelement <2 x float> %181, i32 0
  %196 = fadd float %195, %168
  %197 = fsub float %195, %196
  %198 = fadd float %168, %197
  %199 = extractelement <2 x float> %194, i32 0
  %200 = fadd float %198, %199
  %201 = extractelement <2 x float> %194, i32 1
  %202 = fadd float %200, %201
  %203 = bitcast float %196 to i32
  %204 = and i32 %203, -4096
  %205 = bitcast i32 %204 to float
  %206 = fsub float %196, %205
  %207 = and i32 %7, -4096
  %208 = bitcast i32 %207 to float
  %209 = fsub float %1, %208
  %210 = fmul float %196, %1
  %211 = fmul float %208, %205
  %212 = fsub float %211, %210
  %213 = fmul float %206, %208
  %214 = fadd float %213, %212
  %215 = fmul float %209, %205
  %216 = fadd float %215, %214
  %217 = fmul float %209, %206
  %218 = fadd float %217, %216
  %219 = fmul float %202, %1
  %220 = fadd float %218, %219
  %221 = fadd float %210, %220
  %222 = fmul float %221, 0x3FF7154760000000
  %223 = fcmp ogt float %222, 0.000000e+00
  %224 = select i1 %223, float 5.000000e-01, float -5.000000e-01
  %225 = fadd float %222, %224
  %226 = bitcast float %225 to i32
  %227 = fptosi float %225 to i32
  %228 = and i32 %227, 1
  %229 = sub i32 %226, %228
  %230 = bitcast i32 %229 to float
  %231 = fptosi float %230 to i32
  %232 = sitofp i32 %231 to float
  %233 = fmul float %232, 0xBFE62E4000000000
  %234 = fadd float %210, %233
  %235 = fsub float %234, %210
  %236 = fsub float %234, %235
  %237 = fsub float %210, %236
  %238 = fsub float %233, %235
  %239 = fadd float %238, %237
  %240 = fadd float %220, %239
  %241 = fmul float %232, 0xBEB7F7D1C0000000
  %242 = fadd float %241, %234
  %243 = fsub float %242, %234
  %244 = fsub float %242, %243
  %245 = fsub float %234, %244
  %246 = fsub float %241, %243
  %247 = fadd float %246, %245
  %248 = fadd float %240, %247
  %249 = fadd float %242, %248
  %250 = fsub float %242, %249
  %251 = fadd float %248, %250
  %252 = fmul float %249, 0x3F5655DEC0000000
  %253 = fadd float %252, 0x3F81222D60000000
  %254 = fmul float %249, %253
  %255 = fadd float %254, 0x3FA555E980000000
  %256 = fmul float %249, %255
  %257 = fadd float %256, 0x3FC5554BC0000000
  %258 = fmul float %249, %257
  %259 = fadd float %258, 0x3FDFFFFF60000000
  %260 = bitcast float %249 to i32
  %261 = and i32 %260, -4096
  %262 = bitcast i32 %261 to float
  %263 = fsub float %249, %262
  %264 = fmul float %249, %249
  %265 = fmul float %262, %262
  %266 = fsub float %265, %264
  %267 = fadd float %262, %262
  %268 = fmul float %267, %263
  %269 = fadd float %268, %266
  %270 = fmul float %263, %263
  %271 = fadd float %270, %269
  %272 = fadd float %251, %251
  %273 = fmul float %249, %272
  %274 = fadd float %273, %271
  %275 = bitcast float %264 to i32
  %276 = and i32 %275, -4096
  %277 = bitcast i32 %276 to float
  %278 = fsub float %264, %277
  %279 = bitcast float %259 to i32
  %280 = and i32 %279, -4096
  %281 = bitcast i32 %280 to float
  %282 = fsub float %259, %281
  %283 = fmul float %277, %281
  %284 = insertelement <2 x float> undef, float %264, i32 0
  %285 = insertelement <2 x float> %284, float %274, i32 1
  %286 = insertelement <2 x float> undef, float %259, i32 0
  %287 = shufflevector <2 x float> %286, <2 x float> undef, <2 x i32> zeroinitializer
  %288 = fmul <2 x float> %285, %287
  %289 = extractelement <2 x float> %288, i32 0
  %290 = fsub float %283, %289
  %291 = fmul float %278, %281
  %292 = fadd float %291, %290
  %293 = fmul float %282, %277
  %294 = fadd float %293, %292
  %295 = fmul float %278, %282
  %296 = fadd float %295, %294
  %297 = insertelement <2 x float> undef, float %249, i32 0
  %298 = insertelement <2 x float> %297, float %296, i32 1
  %299 = fadd <2 x float> %298, %288
  %300 = extractelement <2 x float> %299, i32 0
  %301 = fsub float %249, %300
  %302 = fadd float %289, %301
  %303 = fadd float %251, %302
  %304 = insertelement <2 x float> <float 1.000000e+00, float undef>, float %303, i32 1
  %305 = fadd <2 x float> %304, %299
  %306 = extractelement <2 x float> %305, i32 0
  %307 = fsub float 1.000000e+00, %306
  %308 = fadd float %300, %307
  %309 = extractelement <2 x float> %305, i32 1
  %310 = fadd float %308, %309
  %311 = fadd float %306, %310
  %312 = ashr i32 %231, 31
  %313 = zext i32 %312 to i64
  %314 = add i32 %312, %231
  %315 = ashr i32 %314, 6
  %316 = zext i32 %315 to i64
  %317 = sub nsw i64 %316, %313
  %318 = shl nsw i64 %317, 4
  %319 = add nsw i64 %318, 127
  %320 = trunc i64 %319 to i32
  %321 = icmp sgt i32 %320, 0
  %322 = select i1 %321, i64 4294967295, i64 0
  %323 = and i64 %322, %319
  %324 = trunc i64 %323 to i32
  %325 = icmp sgt i32 %324, 255
  %326 = select i1 %325, i64 4294967295, i64 0
  %327 = xor i64 %326, 511
  %328 = and i64 %327, %323
  %329 = and i64 %326, 255
  %330 = or i64 %328, %329
  %331 = trunc i64 %330 to i32
  %332 = shl i32 %331, 23
  %333 = bitcast i32 %332 to float
  %334 = fmul float %311, %333
  %335 = fmul float %334, %333
  %336 = fmul float %335, %333
  %337 = fmul float %336, %333
  %338 = trunc i64 %317 to i32
  %339 = shl i32 %338, 6
  %340 = sub i32 %231, %339
  %341 = shl i32 %340, 23
  %342 = add i32 %341, 1065353216
  %343 = bitcast i32 %342 to float
  %344 = fmul float %337, %343
  %345 = fcmp uge float %210, -1.040000e+02
  %346 = select i1 %345, float %344, float 0.000000e+00
  %347 = fcmp ord float %346, 0.000000e+00
  %348 = select i1 %347, float %346, float 0x7FF0000000000000
  %349 = fcmp ule float %0, 0.000000e+00
  %350 = icmp eq i32 %14, 0
  %351 = or i1 %10, %6
  %352 = xor i1 %351, true
  %353 = or i1 %350, %352
  %354 = or i1 %15, %353
  %355 = select i1 %354, float 1.000000e+00, float -1.000000e+00
  %356 = select i1 %11, float %355, float 0x7FF8000000000000
  %357 = select i1 %349, float %356, float 1.000000e+00
  %358 = fmul float %357, %348
  %359 = fadd float %18, -1.000000e+00
  %360 = bitcast float %359 to i32
  %361 = and i32 %7, -2147483648
  %362 = xor i32 %361, %360
  %363 = bitcast i32 %362 to float
  %364 = fcmp une float %1, 0x7FF0000000000000
  %365 = fcmp une float %1, 0xFFF0000000000000
  %366 = fcmp olt float %363, 0.000000e+00
  %367 = fcmp une float %363, 0.000000e+00
  %368 = select i1 %367, float 0x7FF0000000000000, float 1.000000e+00
  %369 = select i1 %366, float 0.000000e+00, float %368
  %370 = and i1 %365, %364
  %371 = select i1 %370, float %358, float %369
  %372 = fcmp oeq float %0, 0x7FF0000000000000
  %373 = fcmp oeq float %0, 0xFFF0000000000000
  %374 = or i1 %372, %373
  %375 = fcmp oeq float %0, 0.000000e+00
  %376 = or i1 %375, %374
  %377 = and i32 %16, -2147483648
  %378 = or i32 %377, 1065353216
  %379 = bitcast i32 %378 to float
  %380 = select i1 %354, float 1.000000e+00, float %379
  %381 = fsub float -0.000000e+00, %1
  %382 = select i1 %375, float %381, float %1
  %383 = fcmp olt float %382, 0.000000e+00
  %384 = select i1 %383, float 0.000000e+00, float 0x7FF0000000000000
  %385 = fmul float %384, %380
  %386 = select i1 %376, float %385, float %371
  %387 = fcmp uno float %1, %0
  %388 = select i1 %387, float 0xFFFFFFFFE0000000, float %386
  %389 = fcmp une float %1, 0.000000e+00
  %390 = fcmp une float %0, 1.000000e+00
  %391 = and i1 %390, %389
  %392 = select i1 %391, float %388, float 1.000000e+00
  ret float %392
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fastpowf1_u3500purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp uge float %5, 0x3810000000000000
  %7 = fmul float %5, 0x43F0000000000000
  %8 = select i1 %6, float %5, float %7
  %9 = fmul float %8, 0x3FF5555560000000
  %10 = bitcast float %9 to i32
  %11 = lshr i32 %10, 23
  %12 = and i32 %11, 255
  %13 = bitcast float %8 to i32
  %14 = shl nuw nsw i32 %12, 23
  %15 = add i32 %13, 1065353216
  %16 = sub i32 %15, %14
  %17 = bitcast i32 %16 to float
  %18 = select i1 %6, i32 -127, i32 -191
  %19 = add nsw i32 %12, %18
  %20 = fadd float %17, -1.000000e+00
  %21 = fadd float %17, 1.000000e+00
  %22 = fdiv float %20, %21
  %23 = fmul float %22, %22
  %24 = fmul float %23, 0x3FCEA0D200000000
  %25 = fadd float %24, 0x3FD2406C80000000
  %26 = fmul float %23, %25
  %27 = fadd float %26, 0x3FD999B240000000
  %28 = fmul float %23, %27
  %29 = fadd float %28, 0x3FE5555560000000
  %30 = fmul float %23, %29
  %31 = fadd float %30, 2.000000e+00
  %32 = sitofp i32 %19 to float
  %33 = fmul float %32, 0x3FE62E4300000000
  %34 = fmul float %22, %31
  %35 = fadd float %33, %34
  %36 = fmul float %35, %1
  %37 = fmul float %36, 0x3FF7154760000000
  %38 = fcmp ogt float %37, 0.000000e+00
  %39 = select i1 %38, float 5.000000e-01, float -5.000000e-01
  %40 = fadd float %37, %39
  %41 = bitcast float %40 to i32
  %42 = fptosi float %40 to i32
  %43 = and i32 %42, 1
  %44 = sub i32 %41, %43
  %45 = bitcast i32 %44 to float
  %46 = fptosi float %45 to i32
  %47 = sitofp i32 %46 to float
  %48 = fmul float %47, 0x3FE62E4000000000
  %49 = fsub float %36, %48
  %50 = fmul float %47, 0x3EB7F7D1C0000000
  %51 = fsub float %49, %50
  %52 = fmul float %51, 0x3F2A057B40000000
  %53 = fadd float %52, 0x3F56D2D920000000
  %54 = fmul float %51, %53
  %55 = fadd float %54, 0x3F811114C0000000
  %56 = fmul float %51, %55
  %57 = fadd float %56, 0x3FA5554F40000000
  %58 = fmul float %51, %57
  %59 = fadd float %58, 0x3FC5555560000000
  %60 = fmul float %51, %59
  %61 = fadd float %60, 5.000000e-01
  %62 = fmul float %51, %51
  %63 = fadd float %51, 1.000000e+00
  %64 = fmul float %62, %61
  %65 = fadd float %63, %64
  %66 = ashr i32 %46, 1
  %67 = shl i32 %66, 23
  %68 = add i32 %67, 1065353216
  %69 = bitcast i32 %68 to float
  %70 = fmul float %65, %69
  %71 = sub i32 %46, %66
  %72 = shl i32 %71, 23
  %73 = add i32 %72, 1065353216
  %74 = bitcast i32 %73 to float
  %75 = fmul float %70, %74
  %76 = fcmp uge float %36, -1.040000e+02
  %77 = select i1 %76, float %75, float 0.000000e+00
  %78 = fptosi float %1 to i64
  %79 = trunc i64 %78 to i32
  %80 = sitofp i32 %79 to float
  %81 = fcmp oeq float %80, %1
  %82 = bitcast float %1 to i32
  %83 = and i32 %82, 2147483647
  %84 = bitcast i32 %83 to float
  %85 = fcmp ogt float %84, 0x4170000000000000
  %86 = or i1 %85, %81
  %87 = shl i64 %78, 63
  %88 = ashr exact i64 %87, 63
  %89 = trunc i64 %88 to i32
  %90 = fcmp olt float %84, 0x4170000000000000
  %91 = and i1 %90, %86
  %92 = select i1 %91, i32 %89, i32 0
  %93 = ashr i32 %3, 31
  %94 = and i32 %92, %93
  %95 = fsub float -0.000000e+00, %77
  %96 = icmp eq i32 %94, 0
  %97 = select i1 %96, float %77, float %95
  %98 = fcmp une float %0, 0.000000e+00
  %99 = select i1 %98, float %97, float 0.000000e+00
  %100 = fcmp une float %1, 0.000000e+00
  %101 = select i1 %100, float %99, float 1.000000e+00
  ret float %101
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinhf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = select i1 %7, float 5.000000e-01, float -5.000000e-01
  %9 = fadd float %6, %8
  %10 = bitcast float %9 to i32
  %11 = fptosi float %9 to i32
  %12 = and i32 %11, 1
  %13 = sub i32 %10, %12
  %14 = bitcast i32 %13 to float
  %15 = fptosi float %14 to i32
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0xBFE62E4000000000
  %18 = fadd float %17, %4
  %19 = fsub float %18, %4
  %20 = fsub float %18, %19
  %21 = fsub float %4, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fadd float %23, 0.000000e+00
  %25 = fmul float %16, 0xBEB7F7D1C0000000
  %26 = fadd float %25, %18
  %27 = fsub float %26, %18
  %28 = fsub float %26, %27
  %29 = fsub float %18, %28
  %30 = fsub float %25, %27
  %31 = fadd float %30, %29
  %32 = fadd float %24, %31
  %33 = fmul float %26, 0x3F29F6FFE0000000
  %34 = fadd float %33, 0x3F56D7EF80000000
  %35 = fmul float %26, %34
  %36 = fadd float %35, 0x3F811121A0000000
  %37 = fmul float %26, %36
  %38 = fadd float %37, 0x3FA5554B80000000
  %39 = bitcast float %26 to i32
  %40 = and i32 %39, -4096
  %41 = bitcast i32 %40 to float
  %42 = fsub float %26, %41
  %43 = bitcast float %38 to i32
  %44 = and i32 %43, -4096
  %45 = bitcast i32 %44 to float
  %46 = fsub float %38, %45
  %47 = fmul float %26, %38
  %48 = fmul float %41, %45
  %49 = fsub float %48, %47
  %50 = fmul float %42, %45
  %51 = fadd float %50, %49
  %52 = fmul float %46, %41
  %53 = fadd float %52, %51
  %54 = fmul float %42, %46
  %55 = fadd float %54, %53
  %56 = fmul float %32, %38
  %57 = fadd float %56, %55
  %58 = fadd float %47, 0x3FC5555540000000
  %59 = fsub float %58, %47
  %60 = fsub float %58, %59
  %61 = fsub float %47, %60
  %62 = fsub float 0x3FC5555540000000, %59
  %63 = fadd float %62, %61
  %64 = fadd float %63, %57
  %65 = bitcast float %58 to i32
  %66 = and i32 %65, -4096
  %67 = bitcast i32 %66 to float
  %68 = fsub float %58, %67
  %69 = fmul float %26, %58
  %70 = fmul float %41, %67
  %71 = fsub float %70, %69
  %72 = fmul float %42, %67
  %73 = fadd float %72, %71
  %74 = fmul float %68, %41
  %75 = fadd float %74, %73
  %76 = fmul float %42, %68
  %77 = fadd float %76, %75
  %78 = fmul float %26, %64
  %79 = fadd float %77, %78
  %80 = fmul float %32, %58
  %81 = fadd float %80, %79
  %82 = fadd float %69, 5.000000e-01
  %83 = fsub float %82, %69
  %84 = fsub float %82, %83
  %85 = fsub float %69, %84
  %86 = fsub float 5.000000e-01, %83
  %87 = fadd float %86, %85
  %88 = fadd float %87, %81
  %89 = fmul float %26, %26
  %90 = fmul float %41, %41
  %91 = fsub float %90, %89
  %92 = fadd float %41, %41
  %93 = fmul float %92, %42
  %94 = fadd float %93, %91
  %95 = fmul float %42, %42
  %96 = fadd float %95, %94
  %97 = fadd float %32, %32
  %98 = fmul float %26, %97
  %99 = fadd float %98, %96
  %100 = bitcast float %89 to i32
  %101 = and i32 %100, -4096
  %102 = bitcast i32 %101 to float
  %103 = fsub float %89, %102
  %104 = bitcast float %82 to i32
  %105 = and i32 %104, -4096
  %106 = bitcast i32 %105 to float
  %107 = fsub float %82, %106
  %108 = fmul float %89, %82
  %109 = fmul float %102, %106
  %110 = fsub float %109, %108
  %111 = fmul float %103, %106
  %112 = fadd float %111, %110
  %113 = fmul float %107, %102
  %114 = fadd float %113, %112
  %115 = fmul float %103, %107
  %116 = fadd float %115, %114
  %117 = fmul float %89, %88
  %118 = fadd float %116, %117
  %119 = fmul float %99, %82
  %120 = fadd float %119, %118
  %121 = fadd float %26, %108
  %122 = fsub float %121, %26
  %123 = fsub float %121, %122
  %124 = fsub float %26, %123
  %125 = fsub float %108, %122
  %126 = fadd float %125, %124
  %127 = fadd float %32, %120
  %128 = fadd float %126, %127
  %129 = fadd float %121, 1.000000e+00
  %130 = fsub float 1.000000e+00, %129
  %131 = fadd float %121, %130
  %132 = fadd float %131, %128
  %133 = ashr i32 %15, 1
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %129, %136
  %138 = sub i32 %15, %133
  %139 = shl i32 %138, 23
  %140 = add i32 %139, 1065353216
  %141 = bitcast i32 %140 to float
  %142 = fmul float %137, %141
  %143 = fmul float %132, %136
  %144 = fmul float %143, %141
  %145 = fcmp uge float %4, -1.040000e+02
  %146 = bitcast float %142 to i32
  %147 = sext i1 %145 to i32
  %148 = and i32 %146, %147
  %149 = bitcast i32 %148 to float
  %150 = bitcast float %144 to i32
  %151 = and i32 %150, %147
  %152 = bitcast i32 %151 to float
  %153 = fdiv float 1.000000e+00, %149
  %154 = and i32 %148, -4096
  %155 = bitcast i32 %154 to float
  %156 = fsub float %149, %155
  %157 = bitcast float %153 to i32
  %158 = and i32 %157, -4096
  %159 = bitcast i32 %158 to float
  %160 = fsub float %153, %159
  %161 = fmul float %155, %159
  %162 = fadd float %161, -1.000000e+00
  %163 = fmul float %160, %155
  %164 = fadd float %163, %162
  %165 = fmul float %156, %159
  %166 = fadd float %165, %164
  %167 = fmul float %156, %160
  %168 = fadd float %167, %166
  %169 = fmul float %153, %152
  %170 = fadd float %168, %169
  %171 = fmul float %153, %170
  %172 = fsub float %149, %153
  %173 = fsub float %149, %172
  %174 = fsub float %173, %153
  %175 = fadd float %174, %152
  %176 = fadd float %175, %171
  %177 = fadd float %172, %176
  %178 = fmul float %177, 5.000000e-01
  %179 = fcmp ule float %4, 8.900000e+01
  %180 = fcmp ord float %178, 0.000000e+00
  %181 = and i1 %179, %180
  %182 = bitcast float %178 to i32
  %183 = select i1 %181, i32 %182, i32 2139095040
  %184 = and i32 %2, -2147483648
  %185 = xor i32 %183, %184
  %186 = fcmp uno float %0, 0.000000e+00
  %187 = bitcast i32 %185 to float
  %188 = select i1 %186, float 0xFFFFFFFFE0000000, float %187
  ret float %188
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_coshf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = select i1 %7, float 5.000000e-01, float -5.000000e-01
  %9 = fadd float %6, %8
  %10 = bitcast float %9 to i32
  %11 = fptosi float %9 to i32
  %12 = and i32 %11, 1
  %13 = sub i32 %10, %12
  %14 = bitcast i32 %13 to float
  %15 = fptosi float %14 to i32
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0xBFE62E4000000000
  %18 = fadd float %17, %4
  %19 = fsub float %18, %4
  %20 = fsub float %18, %19
  %21 = fsub float %4, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fadd float %23, 0.000000e+00
  %25 = fmul float %16, 0xBEB7F7D1C0000000
  %26 = fadd float %25, %18
  %27 = fsub float %26, %18
  %28 = fsub float %26, %27
  %29 = fsub float %18, %28
  %30 = fsub float %25, %27
  %31 = fadd float %30, %29
  %32 = fadd float %24, %31
  %33 = fmul float %26, 0x3F29F6FFE0000000
  %34 = fadd float %33, 0x3F56D7EF80000000
  %35 = fmul float %26, %34
  %36 = fadd float %35, 0x3F811121A0000000
  %37 = fmul float %26, %36
  %38 = fadd float %37, 0x3FA5554B80000000
  %39 = bitcast float %26 to i32
  %40 = and i32 %39, -4096
  %41 = bitcast i32 %40 to float
  %42 = fsub float %26, %41
  %43 = bitcast float %38 to i32
  %44 = and i32 %43, -4096
  %45 = bitcast i32 %44 to float
  %46 = fsub float %38, %45
  %47 = fmul float %26, %38
  %48 = fmul float %41, %45
  %49 = fsub float %48, %47
  %50 = fmul float %42, %45
  %51 = fadd float %50, %49
  %52 = fmul float %46, %41
  %53 = fadd float %52, %51
  %54 = fmul float %42, %46
  %55 = fadd float %54, %53
  %56 = fmul float %32, %38
  %57 = fadd float %56, %55
  %58 = fadd float %47, 0x3FC5555540000000
  %59 = fsub float %58, %47
  %60 = fsub float %58, %59
  %61 = fsub float %47, %60
  %62 = fsub float 0x3FC5555540000000, %59
  %63 = fadd float %62, %61
  %64 = fadd float %63, %57
  %65 = bitcast float %58 to i32
  %66 = and i32 %65, -4096
  %67 = bitcast i32 %66 to float
  %68 = fsub float %58, %67
  %69 = fmul float %26, %58
  %70 = fmul float %41, %67
  %71 = fsub float %70, %69
  %72 = fmul float %42, %67
  %73 = fadd float %72, %71
  %74 = fmul float %68, %41
  %75 = fadd float %74, %73
  %76 = fmul float %42, %68
  %77 = fadd float %76, %75
  %78 = fmul float %26, %64
  %79 = fadd float %77, %78
  %80 = fmul float %32, %58
  %81 = fadd float %80, %79
  %82 = fadd float %69, 5.000000e-01
  %83 = fsub float %82, %69
  %84 = fsub float %82, %83
  %85 = fsub float %69, %84
  %86 = fsub float 5.000000e-01, %83
  %87 = fadd float %86, %85
  %88 = fadd float %87, %81
  %89 = fmul float %26, %26
  %90 = fmul float %41, %41
  %91 = fsub float %90, %89
  %92 = fadd float %41, %41
  %93 = fmul float %92, %42
  %94 = fadd float %93, %91
  %95 = fmul float %42, %42
  %96 = fadd float %95, %94
  %97 = fadd float %32, %32
  %98 = fmul float %26, %97
  %99 = fadd float %98, %96
  %100 = bitcast float %89 to i32
  %101 = and i32 %100, -4096
  %102 = bitcast i32 %101 to float
  %103 = fsub float %89, %102
  %104 = bitcast float %82 to i32
  %105 = and i32 %104, -4096
  %106 = bitcast i32 %105 to float
  %107 = fsub float %82, %106
  %108 = fmul float %89, %82
  %109 = fmul float %102, %106
  %110 = fsub float %109, %108
  %111 = fmul float %103, %106
  %112 = fadd float %111, %110
  %113 = fmul float %107, %102
  %114 = fadd float %113, %112
  %115 = fmul float %103, %107
  %116 = fadd float %115, %114
  %117 = fmul float %89, %88
  %118 = fadd float %116, %117
  %119 = fmul float %99, %82
  %120 = fadd float %119, %118
  %121 = fadd float %26, %108
  %122 = fsub float %121, %26
  %123 = fsub float %121, %122
  %124 = fsub float %26, %123
  %125 = fsub float %108, %122
  %126 = fadd float %125, %124
  %127 = fadd float %32, %120
  %128 = fadd float %126, %127
  %129 = fadd float %121, 1.000000e+00
  %130 = fsub float 1.000000e+00, %129
  %131 = fadd float %121, %130
  %132 = fadd float %131, %128
  %133 = ashr i32 %15, 1
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %129, %136
  %138 = sub i32 %15, %133
  %139 = shl i32 %138, 23
  %140 = add i32 %139, 1065353216
  %141 = bitcast i32 %140 to float
  %142 = fmul float %137, %141
  %143 = fmul float %132, %136
  %144 = fmul float %143, %141
  %145 = fcmp uge float %4, -1.040000e+02
  %146 = bitcast float %142 to i32
  %147 = sext i1 %145 to i32
  %148 = and i32 %146, %147
  %149 = bitcast i32 %148 to float
  %150 = bitcast float %144 to i32
  %151 = and i32 %150, %147
  %152 = bitcast i32 %151 to float
  %153 = fdiv float 1.000000e+00, %149
  %154 = and i32 %148, -4096
  %155 = bitcast i32 %154 to float
  %156 = fsub float %149, %155
  %157 = bitcast float %153 to i32
  %158 = and i32 %157, -4096
  %159 = bitcast i32 %158 to float
  %160 = fsub float %153, %159
  %161 = fmul float %155, %159
  %162 = fadd float %161, -1.000000e+00
  %163 = fmul float %160, %155
  %164 = fadd float %163, %162
  %165 = fmul float %156, %159
  %166 = fadd float %165, %164
  %167 = fmul float %156, %160
  %168 = fadd float %167, %166
  %169 = fmul float %153, %152
  %170 = fadd float %168, %169
  %171 = fmul float %153, %170
  %172 = fadd float %153, %149
  %173 = fsub float %149, %172
  %174 = fadd float %153, %173
  %175 = fadd float %174, %152
  %176 = fsub float %175, %171
  %177 = fadd float %172, %176
  %178 = fmul float %177, 5.000000e-01
  %179 = fcmp ule float %4, 8.900000e+01
  %180 = fcmp ord float %178, 0.000000e+00
  %181 = and i1 %179, %180
  %182 = fcmp uno float %0, 0.000000e+00
  %183 = select i1 %181, float %178, float 0x7FF0000000000000
  %184 = select i1 %182, float 0xFFFFFFFFE0000000, float %183
  ret float %184
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanhf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = select i1 %7, float 5.000000e-01, float -5.000000e-01
  %9 = fadd float %6, %8
  %10 = bitcast float %9 to i32
  %11 = fptosi float %9 to i32
  %12 = and i32 %11, 1
  %13 = sub i32 %10, %12
  %14 = bitcast i32 %13 to float
  %15 = fptosi float %14 to i32
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0xBFE62E4000000000
  %18 = fadd float %17, %4
  %19 = fsub float %18, %4
  %20 = fsub float %18, %19
  %21 = fsub float %4, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fadd float %23, 0.000000e+00
  %25 = fmul float %16, 0xBEB7F7D1C0000000
  %26 = fadd float %25, %18
  %27 = fsub float %26, %18
  %28 = fsub float %26, %27
  %29 = fsub float %18, %28
  %30 = fsub float %25, %27
  %31 = fadd float %30, %29
  %32 = fadd float %24, %31
  %33 = fmul float %26, 0x3F29F6FFE0000000
  %34 = fadd float %33, 0x3F56D7EF80000000
  %35 = fmul float %26, %34
  %36 = fadd float %35, 0x3F811121A0000000
  %37 = fmul float %26, %36
  %38 = fadd float %37, 0x3FA5554B80000000
  %39 = bitcast float %26 to i32
  %40 = and i32 %39, -4096
  %41 = bitcast i32 %40 to float
  %42 = fsub float %26, %41
  %43 = bitcast float %38 to i32
  %44 = and i32 %43, -4096
  %45 = bitcast i32 %44 to float
  %46 = fsub float %38, %45
  %47 = fmul float %26, %38
  %48 = fmul float %41, %45
  %49 = fsub float %48, %47
  %50 = fmul float %42, %45
  %51 = fadd float %50, %49
  %52 = fmul float %46, %41
  %53 = fadd float %52, %51
  %54 = fmul float %42, %46
  %55 = fadd float %54, %53
  %56 = fmul float %32, %38
  %57 = fadd float %56, %55
  %58 = fadd float %47, 0x3FC5555540000000
  %59 = fsub float %58, %47
  %60 = fsub float %58, %59
  %61 = fsub float %47, %60
  %62 = fsub float 0x3FC5555540000000, %59
  %63 = fadd float %62, %61
  %64 = fadd float %63, %57
  %65 = bitcast float %58 to i32
  %66 = and i32 %65, -4096
  %67 = bitcast i32 %66 to float
  %68 = fsub float %58, %67
  %69 = fmul float %26, %58
  %70 = fmul float %41, %67
  %71 = fsub float %70, %69
  %72 = fmul float %42, %67
  %73 = fadd float %72, %71
  %74 = fmul float %68, %41
  %75 = fadd float %74, %73
  %76 = fmul float %42, %68
  %77 = fadd float %76, %75
  %78 = fmul float %26, %64
  %79 = fadd float %77, %78
  %80 = fmul float %32, %58
  %81 = fadd float %80, %79
  %82 = fadd float %69, 5.000000e-01
  %83 = fsub float %82, %69
  %84 = fsub float %82, %83
  %85 = fsub float %69, %84
  %86 = fsub float 5.000000e-01, %83
  %87 = fadd float %86, %85
  %88 = fadd float %87, %81
  %89 = fmul float %26, %26
  %90 = fmul float %41, %41
  %91 = fsub float %90, %89
  %92 = fadd float %41, %41
  %93 = fmul float %92, %42
  %94 = fadd float %93, %91
  %95 = fmul float %42, %42
  %96 = fadd float %95, %94
  %97 = fadd float %32, %32
  %98 = fmul float %26, %97
  %99 = fadd float %98, %96
  %100 = bitcast float %89 to i32
  %101 = and i32 %100, -4096
  %102 = bitcast i32 %101 to float
  %103 = fsub float %89, %102
  %104 = bitcast float %82 to i32
  %105 = and i32 %104, -4096
  %106 = bitcast i32 %105 to float
  %107 = fsub float %82, %106
  %108 = fmul float %89, %82
  %109 = fmul float %102, %106
  %110 = fsub float %109, %108
  %111 = fmul float %103, %106
  %112 = fadd float %111, %110
  %113 = fmul float %107, %102
  %114 = fadd float %113, %112
  %115 = fmul float %103, %107
  %116 = fadd float %115, %114
  %117 = fmul float %89, %88
  %118 = fadd float %116, %117
  %119 = fmul float %99, %82
  %120 = fadd float %119, %118
  %121 = fadd float %26, %108
  %122 = fsub float %121, %26
  %123 = fsub float %121, %122
  %124 = fsub float %26, %123
  %125 = fsub float %108, %122
  %126 = fadd float %125, %124
  %127 = fadd float %32, %120
  %128 = fadd float %126, %127
  %129 = fadd float %121, 1.000000e+00
  %130 = fsub float 1.000000e+00, %129
  %131 = fadd float %121, %130
  %132 = fadd float %131, %128
  %133 = ashr i32 %15, 1
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %129, %136
  %138 = sub i32 %15, %133
  %139 = shl i32 %138, 23
  %140 = add i32 %139, 1065353216
  %141 = bitcast i32 %140 to float
  %142 = fmul float %137, %141
  %143 = fmul float %132, %136
  %144 = fmul float %143, %141
  %145 = fcmp uge float %4, -1.040000e+02
  %146 = bitcast float %142 to i32
  %147 = sext i1 %145 to i32
  %148 = and i32 %146, %147
  %149 = bitcast i32 %148 to float
  %150 = bitcast float %144 to i32
  %151 = and i32 %150, %147
  %152 = bitcast i32 %151 to float
  %153 = fdiv float 1.000000e+00, %149
  %154 = and i32 %148, -4096
  %155 = bitcast i32 %154 to float
  %156 = fsub float %149, %155
  %157 = bitcast float %153 to i32
  %158 = and i32 %157, -4096
  %159 = bitcast i32 %158 to float
  %160 = fsub float %153, %159
  %161 = fmul float %155, %159
  %162 = fadd float %161, -1.000000e+00
  %163 = fmul float %160, %155
  %164 = fadd float %163, %162
  %165 = fmul float %156, %159
  %166 = fadd float %165, %164
  %167 = fmul float %156, %160
  %168 = fadd float %167, %166
  %169 = fmul float %153, %152
  %170 = fadd float %168, %169
  %171 = fmul float %153, %170
  %172 = insertelement <2 x float> undef, float %149, i32 0
  %173 = insertelement <2 x float> %172, float %153, i32 1
  %174 = insertelement <2 x float> undef, float %153, i32 0
  %175 = insertelement <2 x float> %174, float %149, i32 1
  %176 = fsub <2 x float> %173, %175
  %177 = fadd <2 x float> %173, %175
  %178 = shufflevector <2 x float> %176, <2 x float> %177, <2 x i32> <i32 0, i32 3>
  %179 = extractelement <2 x float> %176, i32 0
  %180 = fsub float %149, %179
  %181 = fsub float %180, %153
  %182 = fadd float %181, %152
  %183 = fadd float %182, %171
  %184 = extractelement <2 x float> %177, i32 1
  %185 = fsub float %149, %184
  %186 = fadd float %153, %185
  %187 = fadd float %186, %152
  %188 = fsub float %187, %171
  %189 = fdiv float 1.000000e+00, %184
  %190 = bitcast float %189 to i32
  %191 = and i32 %190, -4096
  %192 = bitcast i32 %191 to float
  %193 = fsub float %189, %192
  %194 = bitcast <2 x float> %178 to <2 x i32>
  %195 = and <2 x i32> %194, <i32 -4096, i32 -4096>
  %196 = bitcast <2 x i32> %195 to <2 x float>
  %197 = fsub <2 x float> %178, %196
  %198 = fmul float %179, %189
  %199 = insertelement <2 x float> undef, float %192, i32 0
  %200 = shufflevector <2 x float> %199, <2 x float> undef, <2 x i32> zeroinitializer
  %201 = fmul <2 x float> %200, %196
  %202 = insertelement <2 x float> <float undef, float -1.000000e+00>, float %198, i32 0
  %203 = fsub <2 x float> %201, %202
  %204 = fadd <2 x float> %201, %202
  %205 = shufflevector <2 x float> %203, <2 x float> %204, <2 x i32> <i32 0, i32 3>
  %206 = insertelement <2 x float> undef, float %193, i32 0
  %207 = shufflevector <2 x float> %206, <2 x float> undef, <2 x i32> zeroinitializer
  %208 = fmul <2 x float> %207, %196
  %209 = fadd <2 x float> %208, %205
  %210 = fmul <2 x float> %197, %200
  %211 = fadd <2 x float> %210, %209
  %212 = fmul <2 x float> %197, %207
  %213 = fadd <2 x float> %212, %211
  %214 = extractelement <2 x float> %213, i32 1
  %215 = fmul float %198, %214
  %216 = extractelement <2 x float> %213, i32 0
  %217 = fsub float %216, %215
  %218 = fmul float %198, %188
  %219 = fsub float %183, %218
  %220 = fmul float %189, %219
  %221 = fadd float %217, %220
  %222 = fadd float %198, %221
  %223 = fcmp ule float %4, 0x4021542460000000
  %224 = fcmp ord float %222, 0.000000e+00
  %225 = and i1 %223, %224
  %226 = bitcast float %222 to i32
  %227 = select i1 %225, i32 %226, i32 1065353216
  %228 = and i32 %2, -2147483648
  %229 = xor i32 %227, %228
  %230 = fcmp uno float %0, 0.000000e+00
  %231 = bitcast i32 %229 to float
  %232 = select i1 %230, float 0xFFFFFFFFE0000000, float %231
  ret float %232
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinhf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = fcmp ogt float %5, 0.000000e+00
  %7 = select i1 %6, float 5.000000e-01, float -5.000000e-01
  %8 = fadd float %5, %7
  %9 = bitcast float %8 to i32
  %10 = fptosi float %8 to i32
  %11 = and i32 %10, 1
  %12 = sub i32 %9, %11
  %13 = bitcast i32 %12 to float
  %14 = fptosi float %13 to i32
  %15 = sitofp i32 %14 to float
  %16 = fmul float %15, 0x3FE62E4000000000
  %17 = fsub float %4, %16
  %18 = fmul float %15, 0x3EB7F7D1C0000000
  %19 = fsub float %17, %18
  %20 = fmul float %19, %19
  %21 = fmul float %20, %20
  %22 = insertelement <2 x float> undef, float %19, i32 0
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <2 x i32> zeroinitializer
  %24 = fmul <2 x float> %23, <float 0x3F2A057B40000000, float 0x3F811114C0000000>
  %25 = fadd <2 x float> %24, <float 0x3F56D2D920000000, float 0x3FA5554F40000000>
  %26 = fmul float %19, 0x3FC5555560000000
  %27 = fadd float %26, 5.000000e-01
  %28 = insertelement <2 x float> undef, float %21, i32 0
  %29 = insertelement <2 x float> %28, float %20, i32 1
  %30 = fmul <2 x float> %29, %25
  %31 = extractelement <2 x float> %30, i32 1
  %32 = fadd float %27, %31
  %33 = extractelement <2 x float> %30, i32 0
  %34 = fadd float %33, %32
  %35 = fmul float %20, %34
  %36 = fadd float %19, %35
  %37 = icmp eq i32 %14, 0
  %38 = fadd float %36, 1.000000e+00
  %39 = ashr i32 %14, 1
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = sub i32 %14, %39
  %45 = shl i32 %44, 23
  %46 = add i32 %45, 1065353216
  %47 = bitcast i32 %46 to float
  %48 = fmul float %43, %47
  %49 = fadd float %48, -1.000000e+00
  %50 = select i1 %37, float %36, float %49
  %51 = fadd float %50, 2.000000e+00
  %52 = fadd float %50, 1.000000e+00
  %53 = fdiv float %51, %52
  %54 = fmul float %50, 5.000000e-01
  %55 = fmul float %54, %53
  %56 = fcmp ule float %4, 8.800000e+01
  %57 = fcmp ord float %55, 0.000000e+00
  %58 = and i1 %56, %57
  %59 = bitcast float %55 to i32
  %60 = select i1 %58, i32 %59, i32 2139095040
  %61 = and i32 %2, -2147483648
  %62 = xor i32 %60, %61
  %63 = fcmp uno float %0, 0.000000e+00
  %64 = bitcast i32 %62 to float
  %65 = select i1 %63, float 0xFFFFFFFFE0000000, float %64
  ret float %65
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_coshf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = fcmp ogt float %5, 0.000000e+00
  %7 = select i1 %6, float 5.000000e-01, float -5.000000e-01
  %8 = fadd float %5, %7
  %9 = bitcast float %8 to i32
  %10 = fptosi float %8 to i32
  %11 = and i32 %10, 1
  %12 = sub i32 %9, %11
  %13 = bitcast i32 %12 to float
  %14 = fptosi float %13 to i32
  %15 = sitofp i32 %14 to float
  %16 = fmul float %15, 0x3FE62E4000000000
  %17 = fsub float %4, %16
  %18 = fmul float %15, 0x3EB7F7D1C0000000
  %19 = fsub float %17, %18
  %20 = fmul float %19, 0x3F2A057B40000000
  %21 = fadd float %20, 0x3F56D2D920000000
  %22 = fmul float %19, %21
  %23 = fadd float %22, 0x3F811114C0000000
  %24 = fmul float %19, %23
  %25 = fadd float %24, 0x3FA5554F40000000
  %26 = fmul float %19, %25
  %27 = fadd float %26, 0x3FC5555560000000
  %28 = fmul float %19, %27
  %29 = fadd float %28, 5.000000e-01
  %30 = fmul float %19, %19
  %31 = fmul float %30, %29
  %32 = fadd float %19, %31
  %33 = fadd float %32, 1.000000e+00
  %34 = ashr i32 %14, 1
  %35 = shl i32 %34, 23
  %36 = add i32 %35, 1065353216
  %37 = bitcast i32 %36 to float
  %38 = fmul float %33, %37
  %39 = sub i32 %14, %34
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = fcmp uge float %4, -1.040000e+02
  %45 = select i1 %44, float %43, float 0.000000e+00
  %46 = fcmp ule float %4, 1.000000e+02
  %47 = select i1 %46, float %45, float 0x7FF0000000000000
  %48 = fdiv float 5.000000e-01, %47
  %49 = fmul float %47, 5.000000e-01
  %50 = fadd float %49, %48
  %51 = fcmp ule float %4, 8.800000e+01
  %52 = fcmp ord float %50, 0.000000e+00
  %53 = and i1 %51, %52
  %54 = fcmp uno float %0, 0.000000e+00
  %55 = select i1 %53, float %50, float 0x7FF0000000000000
  %56 = select i1 %54, float 0xFFFFFFFFE0000000, float %55
  ret float %56
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanhf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 2.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = select i1 %7, float 5.000000e-01, float -5.000000e-01
  %9 = fadd float %6, %8
  %10 = bitcast float %9 to i32
  %11 = fptosi float %9 to i32
  %12 = and i32 %11, 1
  %13 = sub i32 %10, %12
  %14 = bitcast i32 %13 to float
  %15 = fptosi float %14 to i32
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0x3FE62E4000000000
  %18 = fsub float %5, %17
  %19 = fmul float %16, 0x3EB7F7D1C0000000
  %20 = fsub float %18, %19
  %21 = fmul float %20, %20
  %22 = fmul float %21, %21
  %23 = insertelement <2 x float> undef, float %20, i32 0
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <2 x i32> zeroinitializer
  %25 = fmul <2 x float> %24, <float 0x3F2A057B40000000, float 0x3F811114C0000000>
  %26 = fadd <2 x float> %25, <float 0x3F56D2D920000000, float 0x3FA5554F40000000>
  %27 = fmul float %20, 0x3FC5555560000000
  %28 = fadd float %27, 5.000000e-01
  %29 = insertelement <2 x float> undef, float %22, i32 0
  %30 = insertelement <2 x float> %29, float %21, i32 1
  %31 = fmul <2 x float> %30, %26
  %32 = extractelement <2 x float> %31, i32 1
  %33 = fadd float %28, %32
  %34 = extractelement <2 x float> %31, i32 0
  %35 = fadd float %34, %33
  %36 = fmul float %21, %35
  %37 = fadd float %20, %36
  %38 = icmp eq i32 %15, 0
  %39 = fadd float %37, 1.000000e+00
  %40 = ashr i32 %15, 1
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %39, %43
  %45 = sub i32 %15, %40
  %46 = shl i32 %45, 23
  %47 = add i32 %46, 1065353216
  %48 = bitcast i32 %47 to float
  %49 = fmul float %44, %48
  %50 = fadd float %49, -1.000000e+00
  %51 = select i1 %38, float %37, float %50
  %52 = fadd float %51, 2.000000e+00
  %53 = fdiv float %51, %52
  %54 = fcmp ule float %4, 0x4021542460000000
  %55 = fcmp ord float %53, 0.000000e+00
  %56 = and i1 %54, %55
  %57 = bitcast float %53 to i32
  %58 = select i1 %56, i32 %57, i32 1065353216
  %59 = and i32 %2, -2147483648
  %60 = xor i32 %58, %59
  %61 = fcmp uno float %0, 0.000000e+00
  %62 = bitcast i32 %60 to float
  %63 = select i1 %61, float 0xFFFFFFFFE0000000, float %62
  ret float %63
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinhf1_u10purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ule float %4, 1.000000e+00
  %6 = fdiv float 1.000000e+00, %0
  %7 = and i32 %2, -4096
  %8 = bitcast i32 %7 to float
  %9 = fsub float %0, %8
  %10 = bitcast float %6 to i32
  %11 = and i32 %10, -4096
  %12 = bitcast i32 %11 to float
  %13 = fsub float %6, %12
  %14 = fmul float %8, %12
  %15 = fadd float %14, -1.000000e+00
  %16 = fmul float %13, %8
  %17 = fadd float %16, %15
  %18 = fmul float %9, %12
  %19 = fadd float %18, %17
  %20 = fmul float %9, %13
  %21 = fadd float %20, %19
  %22 = fmul float %6, %21
  %23 = fsub float -0.000000e+00, %22
  %24 = select i1 %5, float %4, float %6
  %25 = select i1 %5, float 0.000000e+00, float %23
  %26 = bitcast float %24 to i32
  %27 = and i32 %26, -4096
  %28 = bitcast i32 %27 to float
  %29 = fsub float %24, %28
  %30 = fmul float %24, %24
  %31 = fmul float %28, %28
  %32 = fsub float %31, %30
  %33 = fadd float %28, %28
  %34 = fmul float %33, %29
  %35 = fadd float %34, %32
  %36 = fmul float %29, %29
  %37 = fadd float %36, %35
  %38 = fadd float %25, %25
  %39 = fmul float %24, %38
  %40 = fadd float %37, %39
  %41 = fadd float %30, 1.000000e+00
  %42 = fsub float %41, %30
  %43 = fsub float %41, %42
  %44 = fsub float %30, %43
  %45 = fsub float 1.000000e+00, %42
  %46 = fadd float %45, %44
  %47 = fadd float %46, %40
  %48 = fadd float %41, %47
  %49 = tail call float @sqrtf(float %48) #3
  %50 = bitcast float %49 to i32
  %51 = and i32 %50, -4096
  %52 = bitcast i32 %51 to float
  %53 = fsub float %49, %52
  %54 = fmul float %49, %49
  %55 = fmul float %52, %52
  %56 = fsub float %55, %54
  %57 = fmul float %53, %52
  %58 = fadd float %57, %56
  %59 = fadd float %57, %58
  %60 = fmul float %53, %53
  %61 = fadd float %60, %59
  %62 = fadd float %41, %54
  %63 = fsub float %62, %41
  %64 = fsub float %62, %63
  %65 = fsub float %41, %64
  %66 = fsub float %54, %63
  %67 = fadd float %66, %65
  %68 = fadd float %47, %61
  %69 = fadd float %67, %68
  %70 = fdiv float 1.000000e+00, %49
  %71 = bitcast float %70 to i32
  %72 = and i32 %71, -4096
  %73 = bitcast i32 %72 to float
  %74 = fsub float %70, %73
  %75 = fmul float %52, %73
  %76 = fadd float %75, -1.000000e+00
  %77 = fmul float %74, %52
  %78 = fadd float %77, %76
  %79 = fmul float %53, %73
  %80 = fadd float %79, %78
  %81 = fmul float %53, %74
  %82 = fadd float %81, %80
  %83 = fmul float %70, %82
  %84 = bitcast float %62 to i32
  %85 = and i32 %84, -4096
  %86 = bitcast i32 %85 to float
  %87 = fsub float %62, %86
  %88 = fmul float %70, %62
  %89 = fmul float %73, %86
  %90 = fsub float %89, %88
  %91 = fmul float %87, %73
  %92 = fadd float %91, %90
  %93 = fmul float %74, %86
  %94 = fadd float %93, %92
  %95 = fmul float %74, %87
  %96 = fadd float %95, %94
  %97 = fmul float %62, %83
  %98 = fsub float %96, %97
  %99 = fmul float %70, %69
  %100 = fadd float %99, %98
  %101 = fmul float %88, 5.000000e-01
  %102 = fmul float %100, 5.000000e-01
  %103 = bitcast float %101 to i32
  %104 = and i32 %103, -4096
  %105 = bitcast i32 %104 to float
  %106 = fsub float %101, %105
  %107 = and i32 %2, 2147479552
  %108 = bitcast i32 %107 to float
  %109 = fsub float %4, %108
  %110 = fmul float %101, %4
  %111 = fmul float %108, %105
  %112 = fsub float %111, %110
  %113 = fmul float %106, %108
  %114 = fadd float %113, %112
  %115 = fmul float %109, %105
  %116 = fadd float %115, %114
  %117 = fmul float %109, %106
  %118 = fadd float %117, %116
  %119 = fmul float %102, %4
  %120 = fadd float %118, %119
  %121 = select i1 %5, float %101, float %110
  %122 = select i1 %5, float %102, float %120
  %123 = fadd float %121, %0
  %124 = fsub float %123, %121
  %125 = fsub float %123, %124
  %126 = fsub float %121, %125
  %127 = fsub float %0, %124
  %128 = fadd float %127, %126
  %129 = fadd float %128, %122
  %130 = fadd float %123, %129
  %131 = fsub float %123, %130
  %132 = fadd float %129, %131
  %133 = fmul float %130, 0x3FF5555560000000
  %134 = fcmp uge float %133, 0x3BF0000000000000
  %135 = fmul float %133, 0x43F0000000000000
  %136 = select i1 %134, float %133, float %135
  %137 = bitcast float %136 to i32
  %138 = lshr i32 %137, 23
  %139 = and i32 %138, 255
  %140 = select i1 %134, i32 127, i32 191
  %141 = sub nsw i32 %139, %140
  %142 = shl i32 %141, 23
  %143 = sub i32 1065353216, %142
  %144 = bitcast i32 %143 to float
  %145 = fmul float %130, %144
  %146 = fmul float %132, %144
  %147 = insertelement <2 x float> undef, float %145, i32 0
  %148 = shufflevector <2 x float> %147, <2 x float> undef, <2 x i32> zeroinitializer
  %149 = fadd <2 x float> %148, <float -1.000000e+00, float 1.000000e+00>
  %150 = fsub <2 x float> %149, %148
  %151 = fsub <2 x float> %149, %150
  %152 = fsub <2 x float> %148, %151
  %153 = fsub <2 x float> <float -1.000000e+00, float 1.000000e+00>, %150
  %154 = fadd <2 x float> %153, %152
  %155 = insertelement <2 x float> undef, float %146, i32 0
  %156 = shufflevector <2 x float> %155, <2 x float> undef, <2 x i32> zeroinitializer
  %157 = fadd <2 x float> %156, %154
  %158 = extractelement <2 x float> %149, i32 1
  %159 = fdiv float 1.000000e+00, %158
  %160 = bitcast float %159 to i32
  %161 = and i32 %160, -4096
  %162 = bitcast i32 %161 to float
  %163 = fsub float %159, %162
  %164 = bitcast <2 x float> %149 to <2 x i32>
  %165 = and <2 x i32> %164, <i32 -4096, i32 -4096>
  %166 = bitcast <2 x i32> %165 to <2 x float>
  %167 = fsub <2 x float> %149, %166
  %168 = extractelement <2 x float> %149, i32 0
  %169 = fmul float %168, %159
  %170 = insertelement <2 x float> undef, float %162, i32 0
  %171 = shufflevector <2 x float> %170, <2 x float> undef, <2 x i32> zeroinitializer
  %172 = fmul <2 x float> %171, %166
  %173 = insertelement <2 x float> <float undef, float -1.000000e+00>, float %169, i32 0
  %174 = fsub <2 x float> %172, %173
  %175 = fadd <2 x float> %172, %173
  %176 = shufflevector <2 x float> %174, <2 x float> %175, <2 x i32> <i32 0, i32 3>
  %177 = insertelement <2 x float> undef, float %163, i32 0
  %178 = shufflevector <2 x float> %177, <2 x float> undef, <2 x i32> zeroinitializer
  %179 = fmul <2 x float> %178, %166
  %180 = fadd <2 x float> %179, %176
  %181 = fmul <2 x float> %167, %171
  %182 = fadd <2 x float> %181, %180
  %183 = fmul <2 x float> %167, %178
  %184 = fadd <2 x float> %183, %182
  %185 = extractelement <2 x float> %184, i32 1
  %186 = fmul float %169, %185
  %187 = extractelement <2 x float> %184, i32 0
  %188 = fsub float %187, %186
  %189 = extractelement <2 x float> %157, i32 1
  %190 = fmul float %169, %189
  %191 = extractelement <2 x float> %157, i32 0
  %192 = fsub float %191, %190
  %193 = fmul float %159, %192
  %194 = fadd float %193, %188
  %195 = bitcast float %169 to i32
  %196 = and i32 %195, -4096
  %197 = bitcast i32 %196 to float
  %198 = fsub float %169, %197
  %199 = fmul float %169, %169
  %200 = fadd float %197, %197
  %201 = fadd float %194, %194
  %202 = fmul float %199, 0x3FCEA0D200000000
  %203 = fadd float %202, 0x3FD2406C80000000
  %204 = fmul float %199, %203
  %205 = fadd float %204, 0x3FD999B240000000
  %206 = fmul float %199, %205
  %207 = fadd float %206, 0x3FE5555560000000
  %208 = sitofp i32 %141 to float
  %209 = bitcast float %208 to i32
  %210 = and i32 %209, -4096
  %211 = bitcast i32 %210 to float
  %212 = fsub float %208, %211
  %213 = fmul float %211, 0x3FE62E0000000000
  %214 = fmul float %169, %199
  %215 = bitcast float %214 to i32
  %216 = and i32 %215, -4096
  %217 = bitcast i32 %216 to float
  %218 = fsub float %214, %217
  %219 = bitcast float %207 to i32
  %220 = and i32 %219, -4096
  %221 = bitcast i32 %220 to float
  %222 = fsub float %207, %221
  %223 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %218, i32 1
  %224 = insertelement <2 x float> undef, float %208, i32 0
  %225 = insertelement <2 x float> %224, float %222, i32 1
  %226 = fmul <2 x float> %223, %225
  %227 = extractelement <2 x float> %226, i32 0
  %228 = fsub float %213, %227
  %229 = fmul float %211, 0x3F00C00000000000
  %230 = fadd float %229, %228
  %231 = fmul float %212, 0x3FE62E0000000000
  %232 = fadd float %231, %230
  %233 = fmul float %212, 0x3F00C00000000000
  %234 = fadd float %233, %232
  %235 = fmul float %208, 0x3E205C6100000000
  %236 = fsub float %234, %235
  %237 = fmul float %169, 2.000000e+00
  %238 = fmul float %194, 2.000000e+00
  %239 = bitcast float %199 to i32
  %240 = and i32 %239, -4096
  %241 = bitcast i32 %240 to float
  %242 = fsub float %199, %241
  %243 = fmul float %197, %241
  %244 = fsub float %243, %214
  %245 = insertelement <2 x float> undef, float %242, i32 0
  %246 = insertelement <2 x float> %245, float %197, i32 1
  %247 = insertelement <2 x float> undef, float %197, i32 0
  %248 = shufflevector <2 x float> %247, <2 x float> undef, <2 x i32> zeroinitializer
  %249 = fmul <2 x float> %246, %248
  %250 = insertelement <2 x float> undef, float %244, i32 0
  %251 = insertelement <2 x float> %250, float %199, i32 1
  %252 = fadd <2 x float> %249, %251
  %253 = fsub <2 x float> %249, %251
  %254 = shufflevector <2 x float> %252, <2 x float> %253, <2 x i32> <i32 0, i32 3>
  %255 = insertelement <2 x float> undef, float %198, i32 0
  %256 = shufflevector <2 x float> %255, <2 x float> undef, <2 x i32> zeroinitializer
  %257 = insertelement <2 x float> undef, float %241, i32 0
  %258 = insertelement <2 x float> %257, float %200, i32 1
  %259 = fmul <2 x float> %256, %258
  %260 = fadd <2 x float> %259, %254
  %261 = insertelement <2 x float> %245, float %198, i32 1
  %262 = fmul <2 x float> %256, %261
  %263 = fadd <2 x float> %262, %260
  %264 = insertelement <2 x float> undef, float %199, i32 0
  %265 = insertelement <2 x float> %264, float %169, i32 1
  %266 = insertelement <2 x float> undef, float %194, i32 0
  %267 = insertelement <2 x float> %266, float %201, i32 1
  %268 = fmul <2 x float> %265, %267
  %269 = fadd <2 x float> %263, %268
  %270 = extractelement <2 x float> %269, i32 1
  %271 = fmul float %169, %270
  %272 = extractelement <2 x float> %269, i32 0
  %273 = fadd float %272, %271
  %274 = fmul float %217, %221
  %275 = insertelement <2 x float> undef, float %214, i32 0
  %276 = insertelement <2 x float> %275, float %273, i32 1
  %277 = insertelement <2 x float> undef, float %207, i32 0
  %278 = shufflevector <2 x float> %277, <2 x float> undef, <2 x i32> zeroinitializer
  %279 = fmul <2 x float> %276, %278
  %280 = extractelement <2 x float> %279, i32 0
  %281 = fsub float %274, %280
  %282 = fmul float %218, %221
  %283 = fadd float %282, %281
  %284 = fmul float %222, %217
  %285 = fadd float %284, %283
  %286 = insertelement <2 x float> undef, float %237, i32 0
  %287 = insertelement <2 x float> %286, float %285, i32 1
  %288 = fadd <2 x float> %226, %287
  %289 = extractelement <2 x float> %288, i32 0
  %290 = fsub float %227, %289
  %291 = fadd float %237, %290
  %292 = fadd float %236, %291
  %293 = fadd float %292, %238
  %294 = fadd <2 x float> %288, %279
  %295 = extractelement <2 x float> %294, i32 0
  %296 = fsub float %289, %295
  %297 = fadd float %280, %296
  %298 = fadd float %297, %293
  %299 = extractelement <2 x float> %294, i32 1
  %300 = fadd float %298, %299
  %301 = fadd float %295, %300
  %302 = fcmp ule float %4, 0x43EFFFFFE0000000
  %303 = fcmp ord float %301, 0.000000e+00
  %304 = and i32 %2, -2147483648
  %305 = or i32 %304, 2139095040
  %306 = and i1 %302, %303
  %307 = fcmp uno float %0, 0.000000e+00
  %308 = bitcast i32 %305 to float
  %309 = select i1 %306, float %301, float %308
  %310 = select i1 %307, float 0xFFFFFFFFE0000000, float %309
  %311 = icmp eq i32 %2, -2147483648
  %312 = select i1 %311, float -0.000000e+00, float %310
  ret float %312
}

; Function Attrs: nounwind uwtable
define float @Sleef_acoshf1_u10purec(float) local_unnamed_addr #1 {
  %2 = insertelement <2 x float> undef, float %0, i32 0
  %3 = shufflevector <2 x float> %2, <2 x float> undef, <2 x i32> zeroinitializer
  %4 = fadd <2 x float> %3, <float 1.000000e+00, float -1.000000e+00>
  %5 = extractelement <2 x float> %4, i32 0
  %6 = fsub float %5, %0
  %7 = fsub float %5, %6
  %8 = fsub float %0, %7
  %9 = fsub float 1.000000e+00, %6
  %10 = fadd float %9, %8
  %11 = fadd float %5, %10
  %12 = tail call float @sqrtf(float %11) #3
  %13 = bitcast float %12 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %12, %15
  %17 = fmul float %15, %15
  %18 = extractelement <2 x float> %4, i32 1
  %19 = fsub float %18, %0
  %20 = fsub float %18, %19
  %21 = fsub float %0, %20
  %22 = fsub float -1.000000e+00, %19
  %23 = fadd float %22, %21
  %24 = fadd float %18, %23
  %25 = tail call float @sqrtf(float %24) #3
  %26 = insertelement <2 x float> undef, float %12, i32 0
  %27 = insertelement <2 x float> %26, float %25, i32 1
  %28 = fmul <2 x float> %27, %27
  %29 = extractelement <2 x float> %28, i32 0
  %30 = fsub float %17, %29
  %31 = fmul float %16, %15
  %32 = fadd float %31, %30
  %33 = fadd float %31, %32
  %34 = fmul float %16, %16
  %35 = fadd float %34, %33
  %36 = fadd <2 x float> %4, %28
  %37 = extractelement <2 x float> %36, i32 0
  %38 = fsub float %37, %5
  %39 = fsub float %37, %38
  %40 = fsub float %5, %39
  %41 = fsub float %29, %38
  %42 = fadd float %41, %40
  %43 = fadd float %10, %35
  %44 = fadd float %42, %43
  %45 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %27
  %46 = extractelement <2 x float> %45, i32 0
  %47 = bitcast float %46 to i32
  %48 = and i32 %47, -4096
  %49 = bitcast i32 %48 to float
  %50 = fsub float %46, %49
  %51 = fmul float %15, %49
  %52 = fadd float %51, -1.000000e+00
  %53 = fmul float %50, %15
  %54 = fadd float %53, %52
  %55 = fmul float %16, %49
  %56 = fadd float %55, %54
  %57 = fmul float %16, %50
  %58 = fadd float %57, %56
  %59 = fmul float %46, %58
  %60 = bitcast float %37 to i32
  %61 = and i32 %60, -4096
  %62 = bitcast i32 %61 to float
  %63 = fsub float %37, %62
  %64 = fmul float %49, %62
  %65 = fmul <2 x float> %45, %36
  %66 = extractelement <2 x float> %65, i32 0
  %67 = fsub float %64, %66
  %68 = fmul float %63, %49
  %69 = fadd float %68, %67
  %70 = fmul float %50, %62
  %71 = fadd float %70, %69
  %72 = fmul float %50, %63
  %73 = fadd float %72, %71
  %74 = fmul float %37, %59
  %75 = fsub float %73, %74
  %76 = fmul float %46, %44
  %77 = fadd float %76, %75
  %78 = fmul float %77, 5.000000e-01
  %79 = bitcast float %25 to i32
  %80 = and i32 %79, -4096
  %81 = bitcast i32 %80 to float
  %82 = fsub float %25, %81
  %83 = fmul float %81, %81
  %84 = extractelement <2 x float> %28, i32 1
  %85 = fsub float %83, %84
  %86 = fmul float %82, %81
  %87 = fadd float %86, %85
  %88 = fadd float %86, %87
  %89 = fmul float %82, %82
  %90 = fadd float %89, %88
  %91 = extractelement <2 x float> %36, i32 1
  %92 = fsub float %91, %18
  %93 = fsub float %91, %92
  %94 = fsub float %18, %93
  %95 = fsub float %84, %92
  %96 = fadd float %95, %94
  %97 = fadd float %23, %90
  %98 = fadd float %96, %97
  %99 = extractelement <2 x float> %45, i32 1
  %100 = bitcast float %99 to i32
  %101 = and i32 %100, -4096
  %102 = bitcast i32 %101 to float
  %103 = fsub float %99, %102
  %104 = fmul float %81, %102
  %105 = fadd float %104, -1.000000e+00
  %106 = fmul float %103, %81
  %107 = fadd float %106, %105
  %108 = fmul float %82, %102
  %109 = fadd float %108, %107
  %110 = fmul float %82, %103
  %111 = fadd float %110, %109
  %112 = fmul float %99, %111
  %113 = bitcast float %91 to i32
  %114 = and i32 %113, -4096
  %115 = bitcast i32 %114 to float
  %116 = fsub float %91, %115
  %117 = fmul float %102, %115
  %118 = extractelement <2 x float> %65, i32 1
  %119 = fsub float %117, %118
  %120 = fmul float %116, %102
  %121 = fadd float %120, %119
  %122 = fmul float %103, %115
  %123 = fadd float %122, %121
  %124 = fmul float %103, %116
  %125 = fadd float %124, %123
  %126 = fmul float %91, %112
  %127 = fsub float %125, %126
  %128 = fmul float %99, %98
  %129 = fadd float %128, %127
  %130 = fmul <2 x float> %65, <float 5.000000e-01, float 5.000000e-01>
  %131 = fmul float %129, 5.000000e-01
  %132 = extractelement <2 x float> %130, i32 0
  %133 = bitcast float %132 to i32
  %134 = and i32 %133, -4096
  %135 = bitcast i32 %134 to float
  %136 = fsub float %132, %135
  %137 = extractelement <2 x float> %130, i32 1
  %138 = bitcast float %137 to i32
  %139 = and i32 %138, -4096
  %140 = bitcast i32 %139 to float
  %141 = fsub float %137, %140
  %142 = fmul float %132, %137
  %143 = fmul float %135, %140
  %144 = fsub float %143, %142
  %145 = fmul float %136, %140
  %146 = fadd float %145, %144
  %147 = fmul float %141, %135
  %148 = fadd float %147, %146
  %149 = fmul float %136, %141
  %150 = fadd float %149, %148
  %151 = fmul float %132, %131
  %152 = fadd float %150, %151
  %153 = fmul float %137, %78
  %154 = fadd float %153, %152
  %155 = fadd float %142, %0
  %156 = fsub float %155, %142
  %157 = fsub float %155, %156
  %158 = fsub float %142, %157
  %159 = fsub float %0, %156
  %160 = fadd float %159, %158
  %161 = fadd float %160, %154
  %162 = fmul float %155, 0x3FF5555560000000
  %163 = fcmp uge float %162, 0x3BF0000000000000
  %164 = fmul float %162, 0x43F0000000000000
  %165 = select i1 %163, float %162, float %164
  %166 = bitcast float %165 to i32
  %167 = lshr i32 %166, 23
  %168 = and i32 %167, 255
  %169 = select i1 %163, i32 127, i32 191
  %170 = sub nsw i32 %168, %169
  %171 = shl i32 %170, 23
  %172 = sub i32 1065353216, %171
  %173 = bitcast i32 %172 to float
  %174 = fmul float %155, %173
  %175 = fmul float %161, %173
  %176 = insertelement <2 x float> undef, float %174, i32 0
  %177 = shufflevector <2 x float> %176, <2 x float> undef, <2 x i32> zeroinitializer
  %178 = fadd <2 x float> %177, <float -1.000000e+00, float 1.000000e+00>
  %179 = fsub <2 x float> %178, %177
  %180 = fsub <2 x float> %178, %179
  %181 = fsub <2 x float> %177, %180
  %182 = fsub <2 x float> <float -1.000000e+00, float 1.000000e+00>, %179
  %183 = fadd <2 x float> %182, %181
  %184 = insertelement <2 x float> undef, float %175, i32 0
  %185 = shufflevector <2 x float> %184, <2 x float> undef, <2 x i32> zeroinitializer
  %186 = fadd <2 x float> %185, %183
  %187 = extractelement <2 x float> %178, i32 1
  %188 = fdiv float 1.000000e+00, %187
  %189 = bitcast float %188 to i32
  %190 = and i32 %189, -4096
  %191 = bitcast i32 %190 to float
  %192 = fsub float %188, %191
  %193 = bitcast <2 x float> %178 to <2 x i32>
  %194 = and <2 x i32> %193, <i32 -4096, i32 -4096>
  %195 = bitcast <2 x i32> %194 to <2 x float>
  %196 = fsub <2 x float> %178, %195
  %197 = extractelement <2 x float> %178, i32 0
  %198 = fmul float %197, %188
  %199 = insertelement <2 x float> undef, float %191, i32 0
  %200 = shufflevector <2 x float> %199, <2 x float> undef, <2 x i32> zeroinitializer
  %201 = fmul <2 x float> %200, %195
  %202 = insertelement <2 x float> <float undef, float -1.000000e+00>, float %198, i32 0
  %203 = fsub <2 x float> %201, %202
  %204 = fadd <2 x float> %201, %202
  %205 = shufflevector <2 x float> %203, <2 x float> %204, <2 x i32> <i32 0, i32 3>
  %206 = insertelement <2 x float> undef, float %192, i32 0
  %207 = shufflevector <2 x float> %206, <2 x float> undef, <2 x i32> zeroinitializer
  %208 = fmul <2 x float> %207, %195
  %209 = fadd <2 x float> %208, %205
  %210 = fmul <2 x float> %196, %200
  %211 = fadd <2 x float> %210, %209
  %212 = fmul <2 x float> %196, %207
  %213 = fadd <2 x float> %212, %211
  %214 = extractelement <2 x float> %213, i32 1
  %215 = fmul float %198, %214
  %216 = extractelement <2 x float> %213, i32 0
  %217 = fsub float %216, %215
  %218 = extractelement <2 x float> %186, i32 1
  %219 = fmul float %198, %218
  %220 = extractelement <2 x float> %186, i32 0
  %221 = fsub float %220, %219
  %222 = fmul float %188, %221
  %223 = fadd float %222, %217
  %224 = bitcast float %198 to i32
  %225 = and i32 %224, -4096
  %226 = bitcast i32 %225 to float
  %227 = fsub float %198, %226
  %228 = fmul float %198, %198
  %229 = fadd float %226, %226
  %230 = fadd float %223, %223
  %231 = fmul float %228, 0x3FCEA0D200000000
  %232 = fadd float %231, 0x3FD2406C80000000
  %233 = fmul float %228, %232
  %234 = fadd float %233, 0x3FD999B240000000
  %235 = fmul float %228, %234
  %236 = fadd float %235, 0x3FE5555560000000
  %237 = sitofp i32 %170 to float
  %238 = bitcast float %237 to i32
  %239 = and i32 %238, -4096
  %240 = bitcast i32 %239 to float
  %241 = fsub float %237, %240
  %242 = fmul float %240, 0x3FE62E0000000000
  %243 = fmul float %198, %228
  %244 = bitcast float %243 to i32
  %245 = and i32 %244, -4096
  %246 = bitcast i32 %245 to float
  %247 = fsub float %243, %246
  %248 = bitcast float %236 to i32
  %249 = and i32 %248, -4096
  %250 = bitcast i32 %249 to float
  %251 = fsub float %236, %250
  %252 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %247, i32 1
  %253 = insertelement <2 x float> undef, float %237, i32 0
  %254 = insertelement <2 x float> %253, float %251, i32 1
  %255 = fmul <2 x float> %252, %254
  %256 = extractelement <2 x float> %255, i32 0
  %257 = fsub float %242, %256
  %258 = fmul float %240, 0x3F00C00000000000
  %259 = fadd float %258, %257
  %260 = fmul float %241, 0x3FE62E0000000000
  %261 = fadd float %260, %259
  %262 = fmul float %241, 0x3F00C00000000000
  %263 = fadd float %262, %261
  %264 = fmul float %237, 0x3E205C6100000000
  %265 = fsub float %263, %264
  %266 = fmul float %198, 2.000000e+00
  %267 = fmul float %223, 2.000000e+00
  %268 = bitcast float %228 to i32
  %269 = and i32 %268, -4096
  %270 = bitcast i32 %269 to float
  %271 = fsub float %228, %270
  %272 = fmul float %226, %270
  %273 = fsub float %272, %243
  %274 = insertelement <2 x float> undef, float %271, i32 0
  %275 = insertelement <2 x float> %274, float %226, i32 1
  %276 = insertelement <2 x float> undef, float %226, i32 0
  %277 = shufflevector <2 x float> %276, <2 x float> undef, <2 x i32> zeroinitializer
  %278 = fmul <2 x float> %275, %277
  %279 = insertelement <2 x float> undef, float %273, i32 0
  %280 = insertelement <2 x float> %279, float %228, i32 1
  %281 = fadd <2 x float> %278, %280
  %282 = fsub <2 x float> %278, %280
  %283 = shufflevector <2 x float> %281, <2 x float> %282, <2 x i32> <i32 0, i32 3>
  %284 = insertelement <2 x float> undef, float %227, i32 0
  %285 = shufflevector <2 x float> %284, <2 x float> undef, <2 x i32> zeroinitializer
  %286 = insertelement <2 x float> undef, float %270, i32 0
  %287 = insertelement <2 x float> %286, float %229, i32 1
  %288 = fmul <2 x float> %285, %287
  %289 = fadd <2 x float> %288, %283
  %290 = insertelement <2 x float> %274, float %227, i32 1
  %291 = fmul <2 x float> %285, %290
  %292 = fadd <2 x float> %291, %289
  %293 = insertelement <2 x float> undef, float %228, i32 0
  %294 = insertelement <2 x float> %293, float %198, i32 1
  %295 = insertelement <2 x float> undef, float %223, i32 0
  %296 = insertelement <2 x float> %295, float %230, i32 1
  %297 = fmul <2 x float> %294, %296
  %298 = fadd <2 x float> %292, %297
  %299 = extractelement <2 x float> %298, i32 1
  %300 = fmul float %198, %299
  %301 = extractelement <2 x float> %298, i32 0
  %302 = fadd float %301, %300
  %303 = fmul float %246, %250
  %304 = insertelement <2 x float> undef, float %243, i32 0
  %305 = insertelement <2 x float> %304, float %302, i32 1
  %306 = insertelement <2 x float> undef, float %236, i32 0
  %307 = shufflevector <2 x float> %306, <2 x float> undef, <2 x i32> zeroinitializer
  %308 = fmul <2 x float> %305, %307
  %309 = extractelement <2 x float> %308, i32 0
  %310 = fsub float %303, %309
  %311 = fmul float %247, %250
  %312 = fadd float %311, %310
  %313 = fmul float %251, %246
  %314 = fadd float %313, %312
  %315 = insertelement <2 x float> undef, float %266, i32 0
  %316 = insertelement <2 x float> %315, float %314, i32 1
  %317 = fadd <2 x float> %255, %316
  %318 = extractelement <2 x float> %317, i32 0
  %319 = fsub float %256, %318
  %320 = fadd float %266, %319
  %321 = fadd float %265, %320
  %322 = fadd float %321, %267
  %323 = fadd <2 x float> %317, %308
  %324 = extractelement <2 x float> %323, i32 0
  %325 = fsub float %318, %324
  %326 = fadd float %309, %325
  %327 = fadd float %326, %322
  %328 = extractelement <2 x float> %323, i32 1
  %329 = fadd float %327, %328
  %330 = fadd float %324, %329
  %331 = bitcast float %0 to i32
  %332 = and i32 %331, 2147483647
  %333 = bitcast i32 %332 to float
  %334 = fcmp ule float %333, 0x43EFFFFFE0000000
  %335 = fcmp ord float %330, 0.000000e+00
  %336 = and i1 %334, %335
  %337 = fcmp oeq float %0, 1.000000e+00
  %338 = fcmp olt float %0, 1.000000e+00
  %339 = fcmp uno float %0, 0.000000e+00
  %340 = or i1 %339, %338
  %341 = select i1 %336, float %330, float 0x7FF0000000000000
  %342 = select i1 %337, float 0.000000e+00, float %341
  %343 = select i1 %340, float 0xFFFFFFFFE0000000, float %342
  ret float %343
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atanhf1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 1.000000e+00
  %6 = fadd float %5, -1.000000e+00
  %7 = fsub float %5, %6
  %8 = fsub float 1.000000e+00, %7
  %9 = fsub float %4, %6
  %10 = fadd float %9, %8
  %11 = fsub float -0.000000e+00, %4
  %12 = fsub float 1.000000e+00, %4
  %13 = fadd float %12, -1.000000e+00
  %14 = fsub float %12, %13
  %15 = fsub float 1.000000e+00, %14
  %16 = fsub float %11, %13
  %17 = fadd float %16, %15
  %18 = fdiv float 1.000000e+00, %12
  %19 = bitcast float %12 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %12, %21
  %23 = bitcast float %18 to i32
  %24 = and i32 %23, -4096
  %25 = bitcast i32 %24 to float
  %26 = fsub float %18, %25
  %27 = bitcast float %5 to i32
  %28 = and i32 %27, -4096
  %29 = bitcast i32 %28 to float
  %30 = fsub float %5, %29
  %31 = fmul float %5, %18
  %32 = fmul float %21, %25
  %33 = fadd float %32, -1.000000e+00
  %34 = fmul float %26, %21
  %35 = fadd float %34, %33
  %36 = fmul float %22, %25
  %37 = fadd float %36, %35
  %38 = fmul float %22, %26
  %39 = fadd float %38, %37
  %40 = fmul float %29, %25
  %41 = fsub float %40, %31
  %42 = fmul float %26, %29
  %43 = fadd float %42, %41
  %44 = fmul float %30, %25
  %45 = fadd float %44, %43
  %46 = fmul float %30, %26
  %47 = fadd float %46, %45
  %48 = fmul float %31, %39
  %49 = fsub float %47, %48
  %50 = fmul float %31, %17
  %51 = fsub float %10, %50
  %52 = fmul float %18, %51
  %53 = fadd float %52, %49
  %54 = fmul float %31, 0x3FF5555560000000
  %55 = fcmp uge float %54, 0x3BF0000000000000
  %56 = fmul float %54, 0x43F0000000000000
  %57 = select i1 %55, float %54, float %56
  %58 = bitcast float %57 to i32
  %59 = lshr i32 %58, 23
  %60 = and i32 %59, 255
  %61 = select i1 %55, i32 127, i32 191
  %62 = sub nsw i32 %60, %61
  %63 = shl i32 %62, 23
  %64 = sub i32 1065353216, %63
  %65 = bitcast i32 %64 to float
  %66 = fmul float %31, %65
  %67 = fmul float %53, %65
  %68 = fadd float %66, -1.000000e+00
  %69 = fsub float %68, %66
  %70 = fsub float %68, %69
  %71 = fsub float %66, %70
  %72 = fsub float -1.000000e+00, %69
  %73 = fadd float %72, %71
  %74 = fadd float %67, %73
  %75 = fadd float %66, 1.000000e+00
  %76 = fsub float %75, %66
  %77 = fsub float %75, %76
  %78 = fsub float %66, %77
  %79 = fsub float 1.000000e+00, %76
  %80 = fadd float %79, %78
  %81 = fadd float %67, %80
  %82 = fdiv float 1.000000e+00, %75
  %83 = bitcast float %75 to i32
  %84 = and i32 %83, -4096
  %85 = bitcast i32 %84 to float
  %86 = fsub float %75, %85
  %87 = bitcast float %82 to i32
  %88 = and i32 %87, -4096
  %89 = bitcast i32 %88 to float
  %90 = fsub float %82, %89
  %91 = bitcast float %68 to i32
  %92 = and i32 %91, -4096
  %93 = bitcast i32 %92 to float
  %94 = fsub float %68, %93
  %95 = fmul float %68, %82
  %96 = fmul float %85, %89
  %97 = fadd float %96, -1.000000e+00
  %98 = fmul float %90, %85
  %99 = fadd float %98, %97
  %100 = fmul float %86, %89
  %101 = fadd float %100, %99
  %102 = fmul float %86, %90
  %103 = fadd float %102, %101
  %104 = fmul float %93, %89
  %105 = fsub float %104, %95
  %106 = fmul float %90, %93
  %107 = fadd float %106, %105
  %108 = fmul float %94, %89
  %109 = fadd float %108, %107
  %110 = fmul float %94, %90
  %111 = fadd float %110, %109
  %112 = fmul float %95, %103
  %113 = fsub float %111, %112
  %114 = fmul float %95, %81
  %115 = fsub float %74, %114
  %116 = fmul float %82, %115
  %117 = fadd float %116, %113
  %118 = bitcast float %95 to i32
  %119 = and i32 %118, -4096
  %120 = bitcast i32 %119 to float
  %121 = fsub float %95, %120
  %122 = fmul float %95, %95
  %123 = fmul float %120, %120
  %124 = fsub float %123, %122
  %125 = fadd float %120, %120
  %126 = fmul float %125, %121
  %127 = fadd float %126, %124
  %128 = fmul float %121, %121
  %129 = fadd float %128, %127
  %130 = fadd float %117, %117
  %131 = fmul float %95, %130
  %132 = fadd float %129, %131
  %133 = fmul float %122, 0x3FCEA0D200000000
  %134 = fadd float %133, 0x3FD2406C80000000
  %135 = fmul float %122, %134
  %136 = fadd float %135, 0x3FD999B240000000
  %137 = fmul float %122, %136
  %138 = fadd float %137, 0x3FE5555560000000
  %139 = sitofp i32 %62 to float
  %140 = bitcast float %139 to i32
  %141 = and i32 %140, -4096
  %142 = bitcast i32 %141 to float
  %143 = fsub float %139, %142
  %144 = fmul float %142, 0x3FE62E0000000000
  %145 = fmul float %95, %122
  %146 = bitcast float %145 to i32
  %147 = and i32 %146, -4096
  %148 = bitcast i32 %147 to float
  %149 = fsub float %145, %148
  %150 = bitcast float %138 to i32
  %151 = and i32 %150, -4096
  %152 = bitcast i32 %151 to float
  %153 = fsub float %138, %152
  %154 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %149, i32 1
  %155 = insertelement <2 x float> undef, float %139, i32 0
  %156 = insertelement <2 x float> %155, float %153, i32 1
  %157 = fmul <2 x float> %154, %156
  %158 = extractelement <2 x float> %157, i32 0
  %159 = fsub float %144, %158
  %160 = fmul float %142, 0x3F00C00000000000
  %161 = fadd float %160, %159
  %162 = fmul float %143, 0x3FE62E0000000000
  %163 = fadd float %162, %161
  %164 = fmul float %143, 0x3F00C00000000000
  %165 = fadd float %164, %163
  %166 = fmul float %139, 0x3E205C6100000000
  %167 = fsub float %165, %166
  %168 = fmul float %95, 2.000000e+00
  %169 = fmul float %117, 2.000000e+00
  %170 = bitcast float %122 to i32
  %171 = and i32 %170, -4096
  %172 = bitcast i32 %171 to float
  %173 = fsub float %122, %172
  %174 = fmul float %120, %172
  %175 = fsub float %174, %145
  %176 = fmul float %173, %120
  %177 = fadd float %176, %175
  %178 = fmul float %121, %172
  %179 = fadd float %178, %177
  %180 = fmul float %121, %173
  %181 = fadd float %180, %179
  %182 = fmul float %122, %117
  %183 = fadd float %181, %182
  %184 = fmul float %95, %132
  %185 = fadd float %183, %184
  %186 = fmul float %148, %152
  %187 = insertelement <2 x float> undef, float %145, i32 0
  %188 = insertelement <2 x float> %187, float %185, i32 1
  %189 = insertelement <2 x float> undef, float %138, i32 0
  %190 = shufflevector <2 x float> %189, <2 x float> undef, <2 x i32> zeroinitializer
  %191 = fmul <2 x float> %188, %190
  %192 = extractelement <2 x float> %191, i32 0
  %193 = fsub float %186, %192
  %194 = fmul float %149, %152
  %195 = fadd float %194, %193
  %196 = fmul float %153, %148
  %197 = fadd float %196, %195
  %198 = insertelement <2 x float> undef, float %168, i32 0
  %199 = insertelement <2 x float> %198, float %197, i32 1
  %200 = fadd <2 x float> %157, %199
  %201 = extractelement <2 x float> %200, i32 0
  %202 = fsub float %158, %201
  %203 = fadd float %168, %202
  %204 = fadd float %167, %203
  %205 = fadd float %204, %169
  %206 = fadd <2 x float> %200, %191
  %207 = extractelement <2 x float> %206, i32 0
  %208 = fsub float %201, %207
  %209 = fadd float %192, %208
  %210 = fadd float %209, %205
  %211 = extractelement <2 x float> %206, i32 1
  %212 = fadd float %210, %211
  %213 = fcmp ogt float %4, 1.000000e+00
  %214 = fcmp une float %4, 1.000000e+00
  %215 = fadd float %207, %212
  %216 = fmul float %215, 5.000000e-01
  %217 = bitcast float %216 to i32
  %218 = zext i32 %217 to i64
  %219 = select i1 %214, i64 %218, i64 2139095040
  %220 = select i1 %213, i64 4294967295, i64 0
  %221 = or i64 %219, %220
  %222 = trunc i64 %221 to i32
  %223 = bitcast i32 %222 to float
  %224 = fcmp oeq float %0, 0x7FF0000000000000
  %225 = fcmp oeq float %0, 0xFFF0000000000000
  %226 = or i1 %224, %225
  %227 = fcmp uno float %223, 0.000000e+00
  %228 = or i1 %226, %227
  %229 = select i1 %228, i64 4294967295, i64 0
  %230 = or i64 %229, %221
  %231 = trunc i64 %230 to i32
  %232 = and i32 %2, -2147483648
  %233 = xor i32 %232, %231
  %234 = fcmp uno float %0, 0.000000e+00
  %235 = bitcast i32 %233 to float
  %236 = select i1 %234, float 0xFFFFFFFFE0000000, float %235
  ret float %236
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp2f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = select i1 %2, float 5.000000e-01, float -5.000000e-01
  %4 = fadd float %3, %0
  %5 = bitcast float %4 to i32
  %6 = fptosi float %4 to i32
  %7 = and i32 %6, 1
  %8 = sub i32 %5, %7
  %9 = bitcast i32 %8 to float
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = icmp sgt i32 %10, 0
  %13 = select i1 %12, float 5.000000e-01, float -5.000000e-01
  %14 = fadd float %13, %11
  %15 = bitcast float %14 to i32
  %16 = fptosi float %14 to i32
  %17 = and i32 %16, 1
  %18 = sub i32 %15, %17
  %19 = bitcast i32 %18 to float
  %20 = fptosi float %19 to i32
  %21 = fsub float %0, %11
  %22 = fmul float %21, 0x3F2421B200000000
  %23 = fadd float %22, 0x3F55F14660000000
  %24 = fmul float %21, %23
  %25 = fadd float %24, 0x3F83B2CDC0000000
  %26 = fmul float %21, %25
  %27 = fadd float %26, 0x3FAC6AF380000000
  %28 = fmul float %21, %27
  %29 = fadd float %28, 0x3FCEBFBD80000000
  %30 = fmul float %21, %29
  %31 = fadd float %30, 0x3FE62E4300000000
  %32 = bitcast float %31 to i32
  %33 = and i32 %32, -4096
  %34 = bitcast i32 %33 to float
  %35 = fsub float %31, %34
  %36 = bitcast float %21 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %21, %38
  %40 = fmul float %21, %31
  %41 = fmul float %38, %34
  %42 = fsub float %41, %40
  %43 = fmul float %35, %38
  %44 = fadd float %43, %42
  %45 = fmul float %39, %34
  %46 = fadd float %45, %44
  %47 = fmul float %39, %35
  %48 = fadd float %47, %46
  %49 = fadd float %40, 1.000000e+00
  %50 = fsub float 1.000000e+00, %49
  %51 = fadd float %40, %50
  %52 = fadd float %51, %48
  %53 = fadd float %49, %52
  %54 = ashr i32 %20, 1
  %55 = shl i32 %54, 23
  %56 = add i32 %55, 1065353216
  %57 = bitcast i32 %56 to float
  %58 = fmul float %53, %57
  %59 = sub i32 %20, %54
  %60 = shl i32 %59, 23
  %61 = add i32 %60, 1065353216
  %62 = bitcast i32 %61 to float
  %63 = fmul float %58, %62
  %64 = fcmp ult float %0, 1.280000e+02
  %65 = fcmp olt float %0, -1.500000e+02
  %66 = select i1 %64, float %63, float 0x7FF0000000000000
  %67 = select i1 %65, float 0.000000e+00, float %66
  ret float %67
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp2f1_u35purec(float) local_unnamed_addr #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = select i1 %2, float 5.000000e-01, float -5.000000e-01
  %4 = fadd float %3, %0
  %5 = bitcast float %4 to i32
  %6 = fptosi float %4 to i32
  %7 = and i32 %6, 1
  %8 = sub i32 %5, %7
  %9 = bitcast i32 %8 to float
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = icmp sgt i32 %10, 0
  %13 = select i1 %12, float 5.000000e-01, float -5.000000e-01
  %14 = fadd float %13, %11
  %15 = bitcast float %14 to i32
  %16 = fptosi float %14 to i32
  %17 = and i32 %16, 1
  %18 = sub i32 %15, %17
  %19 = bitcast i32 %18 to float
  %20 = fptosi float %19 to i32
  %21 = fsub float %0, %11
  %22 = fmul float %21, 0x3F2421B200000000
  %23 = fadd float %22, 0x3F55F14660000000
  %24 = fmul float %21, %23
  %25 = fadd float %24, 0x3F83B2CDC0000000
  %26 = fmul float %21, %25
  %27 = fadd float %26, 0x3FAC6AF380000000
  %28 = fmul float %21, %27
  %29 = fadd float %28, 0x3FCEBFBD80000000
  %30 = fmul float %21, %29
  %31 = fadd float %30, 0x3FE62E4300000000
  %32 = fmul float %21, %31
  %33 = fadd float %32, 1.000000e+00
  %34 = ashr i32 %20, 1
  %35 = shl i32 %34, 23
  %36 = add i32 %35, 1065353216
  %37 = bitcast i32 %36 to float
  %38 = fmul float %33, %37
  %39 = sub i32 %20, %34
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = fcmp ult float %0, 1.280000e+02
  %45 = fcmp olt float %0, -1.500000e+02
  %46 = select i1 %44, float %43, float 0x7FF0000000000000
  %47 = select i1 %45, float 0.000000e+00, float %46
  ret float %47
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp10f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = icmp sgt i32 %11, 0
  %14 = select i1 %13, float 5.000000e-01, float -5.000000e-01
  %15 = fadd float %14, %12
  %16 = bitcast float %15 to i32
  %17 = fptosi float %15 to i32
  %18 = and i32 %17, 1
  %19 = sub i32 %16, %18
  %20 = bitcast i32 %19 to float
  %21 = fptosi float %20 to i32
  %22 = fmul float %12, 0x3FD3440000000000
  %23 = fsub float %0, %22
  %24 = fmul float %12, 0x3ED3509F80000000
  %25 = fsub float %23, %24
  %26 = fmul float %25, 0x3FB16A1F80000000
  %27 = fadd float %26, 0x3FCA997420000000
  %28 = fmul float %25, %27
  %29 = fadd float %28, 0x3FE142AFA0000000
  %30 = fmul float %25, %29
  %31 = fadd float %30, 0x3FF2BD6BC0000000
  %32 = fmul float %25, %31
  %33 = fadd float %32, 0x40004705A0000000
  %34 = fmul float %25, %33
  %35 = fadd float %34, 0x40053524C0000000
  %36 = fmul float %25, %35
  %37 = fadd float %36, 0x40026BB1C0000000
  %38 = fsub float 0x40026BB1C0000000, %37
  %39 = fadd float %36, %38
  %40 = fadd float %39, 0xBE610586A0000000
  %41 = bitcast float %37 to i32
  %42 = and i32 %41, -4096
  %43 = bitcast i32 %42 to float
  %44 = fsub float %37, %43
  %45 = bitcast float %25 to i32
  %46 = and i32 %45, -4096
  %47 = bitcast i32 %46 to float
  %48 = fsub float %25, %47
  %49 = fmul float %25, %37
  %50 = fmul float %47, %43
  %51 = fsub float %50, %49
  %52 = fmul float %44, %47
  %53 = fadd float %52, %51
  %54 = fmul float %48, %43
  %55 = fadd float %54, %53
  %56 = fmul float %48, %44
  %57 = fadd float %56, %55
  %58 = fmul float %25, %40
  %59 = fadd float %58, %57
  %60 = fadd float %49, 1.000000e+00
  %61 = fsub float 1.000000e+00, %60
  %62 = fadd float %49, %61
  %63 = fadd float %62, %59
  %64 = fadd float %60, %63
  %65 = ashr i32 %21, 1
  %66 = shl i32 %65, 23
  %67 = add i32 %66, 1065353216
  %68 = bitcast i32 %67 to float
  %69 = fmul float %64, %68
  %70 = sub i32 %21, %65
  %71 = shl i32 %70, 23
  %72 = add i32 %71, 1065353216
  %73 = bitcast i32 %72 to float
  %74 = fmul float %69, %73
  %75 = fcmp ule float %0, 0x4043441360000000
  %76 = fcmp olt float %0, -5.000000e+01
  %77 = select i1 %75, float %74, float 0x7FF0000000000000
  %78 = select i1 %76, float 0.000000e+00, float %77
  ret float %78
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp10f1_u35purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = icmp sgt i32 %11, 0
  %14 = select i1 %13, float 5.000000e-01, float -5.000000e-01
  %15 = fadd float %14, %12
  %16 = bitcast float %15 to i32
  %17 = fptosi float %15 to i32
  %18 = and i32 %17, 1
  %19 = sub i32 %16, %18
  %20 = bitcast i32 %19 to float
  %21 = fptosi float %20 to i32
  %22 = fmul float %12, 0x3FD3440000000000
  %23 = fsub float %0, %22
  %24 = fmul float %12, 0x3ED3509F80000000
  %25 = fsub float %23, %24
  %26 = fmul float %25, 0x3FCA6B54E0000000
  %27 = fadd float %26, 0x3FE1565340000000
  %28 = fmul float %25, %27
  %29 = fadd float %28, 0x3FF2BD9740000000
  %30 = fmul float %25, %29
  %31 = fadd float %30, 0x400046F9C0000000
  %32 = fmul float %25, %31
  %33 = fadd float %32, 0x40053524A0000000
  %34 = fmul float %25, %33
  %35 = fadd float %34, 0x40026BB1C0000000
  %36 = fmul float %25, %35
  %37 = fadd float %36, 1.000000e+00
  %38 = ashr i32 %21, 1
  %39 = shl i32 %38, 23
  %40 = add i32 %39, 1065353216
  %41 = bitcast i32 %40 to float
  %42 = fmul float %37, %41
  %43 = sub i32 %21, %38
  %44 = shl i32 %43, 23
  %45 = add i32 %44, 1065353216
  %46 = bitcast i32 %45 to float
  %47 = fmul float %42, %46
  %48 = fcmp ule float %0, 0x4043441360000000
  %49 = fcmp olt float %0, -5.000000e+01
  %50 = select i1 %48, float %47, float 0x7FF0000000000000
  %51 = select i1 %49, float 0.000000e+00, float %50
  ret float %51
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_expm1f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 0.000000e+00
  %3 = fmul float %2, 0x3FF7154760000000
  %4 = fcmp ogt float %3, 0.000000e+00
  %5 = select i1 %4, float 5.000000e-01, float -5.000000e-01
  %6 = fadd float %3, %5
  %7 = bitcast float %6 to i32
  %8 = fptosi float %6 to i32
  %9 = and i32 %8, 1
  %10 = sub i32 %7, %9
  %11 = bitcast i32 %10 to float
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 0xBFE62E4000000000
  %15 = fadd float %14, %0
  %16 = fsub float %15, %0
  %17 = fsub float %15, %16
  %18 = fsub float %0, %17
  %19 = fsub float %14, %16
  %20 = fadd float %19, %18
  %21 = fadd float %20, 0.000000e+00
  %22 = fmul float %13, 0xBEB7F7D1C0000000
  %23 = fadd float %22, %15
  %24 = fsub float %23, %15
  %25 = fsub float %23, %24
  %26 = fsub float %15, %25
  %27 = fsub float %22, %24
  %28 = fadd float %27, %26
  %29 = fadd float %21, %28
  %30 = fmul float %23, 0x3F29F6FFE0000000
  %31 = fadd float %30, 0x3F56D7EF80000000
  %32 = fmul float %23, %31
  %33 = fadd float %32, 0x3F811121A0000000
  %34 = fmul float %23, %33
  %35 = fadd float %34, 0x3FA5554B80000000
  %36 = bitcast float %23 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %23, %38
  %40 = bitcast float %35 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %35, %42
  %44 = fmul float %23, %35
  %45 = fmul float %38, %42
  %46 = fsub float %45, %44
  %47 = fmul float %39, %42
  %48 = fadd float %47, %46
  %49 = fmul float %43, %38
  %50 = fadd float %49, %48
  %51 = fmul float %39, %43
  %52 = fadd float %51, %50
  %53 = fmul float %29, %35
  %54 = fadd float %53, %52
  %55 = fadd float %44, 0x3FC5555540000000
  %56 = fsub float %55, %44
  %57 = fsub float %55, %56
  %58 = fsub float %44, %57
  %59 = fsub float 0x3FC5555540000000, %56
  %60 = fadd float %59, %58
  %61 = fadd float %60, %54
  %62 = bitcast float %55 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %55, %64
  %66 = fmul float %23, %55
  %67 = fmul float %38, %64
  %68 = fsub float %67, %66
  %69 = fmul float %39, %64
  %70 = fadd float %69, %68
  %71 = fmul float %65, %38
  %72 = fadd float %71, %70
  %73 = fmul float %39, %65
  %74 = fadd float %73, %72
  %75 = fmul float %23, %61
  %76 = fadd float %74, %75
  %77 = fmul float %29, %55
  %78 = fadd float %77, %76
  %79 = fadd float %66, 5.000000e-01
  %80 = fsub float %79, %66
  %81 = fsub float %79, %80
  %82 = fsub float %66, %81
  %83 = fsub float 5.000000e-01, %80
  %84 = fadd float %83, %82
  %85 = fadd float %84, %78
  %86 = fmul float %23, %23
  %87 = fmul float %38, %38
  %88 = fsub float %87, %86
  %89 = fadd float %38, %38
  %90 = fmul float %89, %39
  %91 = fadd float %90, %88
  %92 = fmul float %39, %39
  %93 = fadd float %92, %91
  %94 = fadd float %29, %29
  %95 = fmul float %23, %94
  %96 = fadd float %95, %93
  %97 = bitcast float %86 to i32
  %98 = and i32 %97, -4096
  %99 = bitcast i32 %98 to float
  %100 = fsub float %86, %99
  %101 = bitcast float %79 to i32
  %102 = and i32 %101, -4096
  %103 = bitcast i32 %102 to float
  %104 = fsub float %79, %103
  %105 = fmul float %86, %79
  %106 = fmul float %99, %103
  %107 = fsub float %106, %105
  %108 = fmul float %100, %103
  %109 = fadd float %108, %107
  %110 = fmul float %104, %99
  %111 = fadd float %110, %109
  %112 = fmul float %100, %104
  %113 = fadd float %112, %111
  %114 = fmul float %86, %85
  %115 = fadd float %113, %114
  %116 = fmul float %96, %79
  %117 = fadd float %116, %115
  %118 = fadd float %23, %105
  %119 = fsub float %118, %23
  %120 = fsub float %118, %119
  %121 = fsub float %23, %120
  %122 = fsub float %105, %119
  %123 = fadd float %122, %121
  %124 = fadd float %29, %117
  %125 = fadd float %123, %124
  %126 = fadd float %118, 1.000000e+00
  %127 = fsub float 1.000000e+00, %126
  %128 = fadd float %118, %127
  %129 = fadd float %128, %125
  %130 = ashr i32 %12, 1
  %131 = shl i32 %130, 23
  %132 = add i32 %131, 1065353216
  %133 = bitcast i32 %132 to float
  %134 = fmul float %126, %133
  %135 = sub i32 %12, %130
  %136 = shl i32 %135, 23
  %137 = add i32 %136, 1065353216
  %138 = bitcast i32 %137 to float
  %139 = fmul float %134, %138
  %140 = fmul float %129, %133
  %141 = fmul float %140, %138
  %142 = fcmp uge float %0, -1.040000e+02
  %143 = bitcast float %139 to i32
  %144 = sext i1 %142 to i32
  %145 = and i32 %143, %144
  %146 = bitcast i32 %145 to float
  %147 = bitcast float %141 to i32
  %148 = and i32 %147, %144
  %149 = bitcast i32 %148 to float
  %150 = fadd float %146, -1.000000e+00
  %151 = fsub float %150, %146
  %152 = fsub float %150, %151
  %153 = fsub float %146, %152
  %154 = fsub float -1.000000e+00, %151
  %155 = fadd float %154, %153
  %156 = fadd float %155, %149
  %157 = fadd float %150, %156
  %158 = fcmp ule float %0, 0x40562E42E0000000
  %159 = select i1 %158, float %157, float 0x7FF0000000000000
  %160 = fcmp uge float %0, 0xC030A2B240000000
  %161 = select i1 %160, float %159, float -1.000000e+00
  %162 = bitcast float %0 to i32
  %163 = icmp eq i32 %162, -2147483648
  %164 = select i1 %163, float -0.000000e+00, float %161
  ret float %164
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log10f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fsub float %16, %17
  %19 = fsub float -1.000000e+00, %18
  %20 = fsub float %13, %17
  %21 = fadd float %20, %19
  %22 = fadd float %13, 1.000000e+00
  %23 = fadd float %22, -1.000000e+00
  %24 = fsub float %22, %23
  %25 = fsub float 1.000000e+00, %24
  %26 = fsub float %13, %23
  %27 = fadd float %26, %25
  %28 = fdiv float 1.000000e+00, %22
  %29 = bitcast float %22 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %22, %31
  %33 = bitcast float %28 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %28, %35
  %37 = bitcast float %16 to i32
  %38 = and i32 %37, -4096
  %39 = bitcast i32 %38 to float
  %40 = fsub float %16, %39
  %41 = fmul float %16, %28
  %42 = fmul float %31, %35
  %43 = fadd float %42, -1.000000e+00
  %44 = fmul float %36, %31
  %45 = fadd float %44, %43
  %46 = fmul float %32, %35
  %47 = fadd float %46, %45
  %48 = fmul float %32, %36
  %49 = fadd float %48, %47
  %50 = fmul float %39, %35
  %51 = fsub float %50, %41
  %52 = fmul float %36, %39
  %53 = fadd float %52, %51
  %54 = fmul float %40, %35
  %55 = fadd float %54, %53
  %56 = fmul float %40, %36
  %57 = fadd float %56, %55
  %58 = fmul float %41, %49
  %59 = fsub float %57, %58
  %60 = fmul float %41, %27
  %61 = fsub float %21, %60
  %62 = fmul float %28, %61
  %63 = fadd float %62, %59
  %64 = fmul float %41, %41
  %65 = fmul float %64, 0x3FC0D2AA40000000
  %66 = fadd float %65, 0x3FC636DD80000000
  %67 = fmul float %64, %66
  %68 = fadd float %67, 0x3FD287ACE0000000
  %69 = sitofp i32 %15 to float
  %70 = bitcast float %69 to i32
  %71 = and i32 %70, -4096
  %72 = bitcast i32 %71 to float
  %73 = fsub float %69, %72
  %74 = fmul float %72, 0x3FD3440000000000
  %75 = insertelement <2 x float> <float 0x3FD3441360000000, float undef>, float %73, i32 1
  %76 = insertelement <2 x float> <float undef, float 0x3ED3600000000000>, float %69, i32 0
  %77 = fmul <2 x float> %75, %76
  %78 = extractelement <2 x float> %77, i32 0
  %79 = fsub float %74, %78
  %80 = fmul float %72, 0x3ED3600000000000
  %81 = fadd float %80, %79
  %82 = fmul float %73, 0x3FD3440000000000
  %83 = fadd float %82, %81
  %84 = fmul float %69, 0x3E4EC10C00000000
  %85 = bitcast float %41 to i32
  %86 = and i32 %85, -4096
  %87 = bitcast i32 %86 to float
  %88 = fsub float %41, %87
  %89 = fmul float %41, 0x3FEBCB7B20000000
  %90 = fmul float %87, 0x3FEBCA0000000000
  %91 = fsub float %90, %89
  %92 = fmul float %88, 0x3FEBCA0000000000
  %93 = fadd float %92, %91
  %94 = fmul float %87, 0x3F27B20000000000
  %95 = fadd float %94, %93
  %96 = fmul float %88, 0x3F27B20000000000
  %97 = fadd float %96, %95
  %98 = fmul float %41, 0x3E574EEEA0000000
  %99 = fsub float %97, %98
  %100 = fmul float %63, 0x3FEBCB7B20000000
  %101 = fadd float %99, %100
  %102 = insertelement <2 x float> undef, float %89, i32 0
  %103 = insertelement <2 x float> %102, float %83, i32 1
  %104 = fadd <2 x float> %77, %103
  %105 = extractelement <2 x float> %104, i32 0
  %106 = fsub float %78, %105
  %107 = fadd float %89, %106
  %108 = fmul float %41, %64
  %109 = fmul float %108, %68
  %110 = fadd float %105, %109
  %111 = insertelement <2 x float> undef, float %110, i32 0
  %112 = insertelement <2 x float> %111, float %84, i32 1
  %113 = fsub <2 x float> %104, %112
  %114 = insertelement <2 x float> undef, float %109, i32 0
  %115 = insertelement <2 x float> %114, float %107, i32 1
  %116 = fadd <2 x float> %115, %113
  %117 = extractelement <2 x float> %116, i32 1
  %118 = fadd float %117, %101
  %119 = extractelement <2 x float> %116, i32 0
  %120 = fadd float %119, %118
  %121 = fadd float %110, %120
  %122 = fcmp une float %4, 0x7FF0000000000000
  %123 = select i1 %122, float %121, float 0x7FF0000000000000
  %124 = fcmp oge float %4, 0.000000e+00
  %125 = select i1 %124, float %123, float 0x7FF8000000000000
  %126 = fcmp une float %4, 0.000000e+00
  %127 = select i1 %126, float %125, float 0xFFF0000000000000
  ret float %127
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log2f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fsub float %16, %17
  %19 = fsub float -1.000000e+00, %18
  %20 = fsub float %13, %17
  %21 = fadd float %20, %19
  %22 = fadd float %13, 1.000000e+00
  %23 = fadd float %22, -1.000000e+00
  %24 = fsub float %22, %23
  %25 = fsub float 1.000000e+00, %24
  %26 = fsub float %13, %23
  %27 = fadd float %26, %25
  %28 = fdiv float 1.000000e+00, %22
  %29 = bitcast float %22 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %22, %31
  %33 = bitcast float %28 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %28, %35
  %37 = bitcast float %16 to i32
  %38 = and i32 %37, -4096
  %39 = bitcast i32 %38 to float
  %40 = fsub float %16, %39
  %41 = fmul float %16, %28
  %42 = fmul float %31, %35
  %43 = fadd float %42, -1.000000e+00
  %44 = fmul float %36, %31
  %45 = fadd float %44, %43
  %46 = fmul float %32, %35
  %47 = fadd float %46, %45
  %48 = fmul float %32, %36
  %49 = fadd float %48, %47
  %50 = fmul float %39, %35
  %51 = fsub float %50, %41
  %52 = fmul float %36, %39
  %53 = fadd float %52, %51
  %54 = fmul float %40, %35
  %55 = fadd float %54, %53
  %56 = fmul float %40, %36
  %57 = fadd float %56, %55
  %58 = fmul float %41, %49
  %59 = fsub float %57, %58
  %60 = fmul float %41, %27
  %61 = fsub float %21, %60
  %62 = fmul float %28, %61
  %63 = fadd float %62, %59
  %64 = fmul float %41, %41
  %65 = fmul float %64, 0x3FDBFF4360000000
  %66 = fadd float %65, 0x3FE2728420000000
  %67 = fmul float %64, %66
  %68 = fadd float %67, 0x3FEEC71380000000
  %69 = sitofp i32 %15 to float
  %70 = bitcast float %41 to i32
  %71 = and i32 %70, -4096
  %72 = bitcast i32 %71 to float
  %73 = fsub float %41, %72
  %74 = fmul float %72, 0x4007140000000000
  %75 = fmul float %41, %64
  %76 = insertelement <2 x float> undef, float %75, i32 0
  %77 = insertelement <2 x float> %76, float %41, i32 1
  %78 = insertelement <2 x float> <float undef, float 0x4007154760000000>, float %68, i32 0
  %79 = fmul <2 x float> %77, %78
  %80 = extractelement <2 x float> %79, i32 1
  %81 = fsub float %74, %80
  %82 = fmul float %73, 0x4007140000000000
  %83 = fadd float %82, %81
  %84 = fmul float %72, 0x3F44760000000000
  %85 = fadd float %84, %83
  %86 = fmul float %73, 0x3F44760000000000
  %87 = fadd float %86, %85
  %88 = fmul float %41, 0x3E6192FDE0000000
  %89 = fadd float %88, %87
  %90 = fmul float %63, 0x4007154760000000
  %91 = fadd float %89, %90
  %92 = fadd float %80, %69
  %93 = extractelement <2 x float> %79, i32 0
  %94 = fadd float %92, %93
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = insertelement <2 x float> %95, float %92, i32 1
  %97 = insertelement <2 x float> undef, float %92, i32 0
  %98 = insertelement <2 x float> %97, float %69, i32 1
  %99 = fsub <2 x float> %96, %98
  %100 = fsub <2 x float> %96, %99
  %101 = fsub <2 x float> %98, %100
  %102 = fsub <2 x float> %79, %99
  %103 = fadd <2 x float> %102, %101
  %104 = extractelement <2 x float> %103, i32 1
  %105 = fadd float %104, %91
  %106 = extractelement <2 x float> %103, i32 0
  %107 = fadd float %106, %105
  %108 = fadd float %94, %107
  %109 = fcmp une float %4, 0x7FF0000000000000
  %110 = select i1 %109, float %108, float 0x7FF0000000000000
  %111 = fcmp oge float %4, 0.000000e+00
  %112 = select i1 %111, float %110, float 0x7FF8000000000000
  %113 = fcmp une float %4, 0.000000e+00
  %114 = select i1 %113, float %112, float 0xFFF0000000000000
  ret float %114
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log2f1_u35purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, 0x3FDBFE81A0000000
  %21 = fadd float %20, 0x3FE2728F60000000
  %22 = fmul float %19, %21
  %23 = fadd float %22, 0x3FEEC715E0000000
  %24 = fmul float %18, %19
  %25 = sitofp i32 %15 to float
  %26 = fmul float %18, 0x4007154760000000
  %27 = fadd float %26, %25
  %28 = fmul float %24, %23
  %29 = fadd float %27, %28
  %30 = fcmp une float %4, 0x7FF0000000000000
  %31 = select i1 %30, float %29, float 0x7FF0000000000000
  %32 = fcmp oge float %4, 0.000000e+00
  %33 = select i1 %32, float %31, float 0x7FF8000000000000
  %34 = fcmp une float %4, 0.000000e+00
  %35 = select i1 %34, float %33, float 0xFFF0000000000000
  ret float %35
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log1pf1_u10purec(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 1.000000e+00
  %3 = fcmp uge float %2, 0x3810000000000000
  %4 = fmul float %2, 0x43F0000000000000
  %5 = select i1 %3, float %2, float %4
  %6 = fmul float %5, 0x3FF5555560000000
  %7 = bitcast float %6 to i32
  %8 = lshr i32 %7, 23
  %9 = and i32 %8, 255
  %10 = shl nuw nsw i32 %9, 23
  %11 = sub nsw i32 2130706432, %10
  %12 = bitcast i32 %11 to float
  %13 = fadd float %12, -1.000000e+00
  %14 = fmul float %12, %0
  %15 = fadd float %14, %13
  %16 = select i1 %3, i32 -127, i32 -191
  %17 = add nsw i32 %9, %16
  %18 = sitofp i32 %17 to float
  %19 = bitcast float %18 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %18, %21
  %23 = fmul float %21, 0x3FE62E0000000000
  %24 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %22, i32 1
  %25 = insertelement <2 x float> <float undef, float 0x3F00C00000000000>, float %18, i32 0
  %26 = fmul <2 x float> %24, %25
  %27 = extractelement <2 x float> %26, i32 0
  %28 = fsub float %23, %27
  %29 = fmul float %21, 0x3F00C00000000000
  %30 = fadd float %29, %28
  %31 = fmul float %22, 0x3FE62E0000000000
  %32 = fadd float %31, %30
  %33 = fmul float %18, 0x3E205C6100000000
  %34 = fadd float %15, 2.000000e+00
  %35 = fsub float 2.000000e+00, %34
  %36 = fadd float %15, %35
  %37 = fdiv float 1.000000e+00, %34
  %38 = bitcast float %34 to i32
  %39 = and i32 %38, -4096
  %40 = bitcast i32 %39 to float
  %41 = fsub float %34, %40
  %42 = bitcast float %37 to i32
  %43 = and i32 %42, -4096
  %44 = bitcast i32 %43 to float
  %45 = fsub float %37, %44
  %46 = bitcast float %15 to i32
  %47 = and i32 %46, -4096
  %48 = bitcast i32 %47 to float
  %49 = fsub float %15, %48
  %50 = fmul float %15, %37
  %51 = fmul float %40, %44
  %52 = fadd float %51, -1.000000e+00
  %53 = fmul float %45, %40
  %54 = fadd float %53, %52
  %55 = fmul float %41, %44
  %56 = fadd float %55, %54
  %57 = fmul float %41, %45
  %58 = fadd float %57, %56
  %59 = fmul float %48, %44
  %60 = fsub float %59, %50
  %61 = fmul float %45, %48
  %62 = fadd float %61, %60
  %63 = fmul float %49, %44
  %64 = fadd float %63, %62
  %65 = fmul float %49, %45
  %66 = fadd float %65, %64
  %67 = fmul float %50, %58
  %68 = fsub float %66, %67
  %69 = fmul float %36, %50
  %70 = fsub float 0.000000e+00, %69
  %71 = fmul float %37, %70
  %72 = fadd float %71, %68
  %73 = fmul float %50, %50
  %74 = fmul float %73, 0x3FD35FEB80000000
  %75 = fadd float %74, 0x3FD9933940000000
  %76 = fmul float %73, %75
  %77 = fadd float %76, 0x3FE5555B40000000
  %78 = fmul float %50, 2.000000e+00
  %79 = fmul float %72, 2.000000e+00
  %80 = insertelement <2 x float> undef, float %78, i32 0
  %81 = insertelement <2 x float> %80, float %32, i32 1
  %82 = fadd <2 x float> %26, %81
  %83 = extractelement <2 x float> %82, i32 0
  %84 = fsub float %27, %83
  %85 = fadd float %78, %84
  %86 = fmul float %50, %73
  %87 = fmul float %86, %77
  %88 = fadd float %83, %87
  %89 = insertelement <2 x float> undef, float %88, i32 0
  %90 = insertelement <2 x float> %89, float %33, i32 1
  %91 = fsub <2 x float> %82, %90
  %92 = insertelement <2 x float> undef, float %87, i32 0
  %93 = insertelement <2 x float> %92, float %85, i32 1
  %94 = fadd <2 x float> %93, %91
  %95 = extractelement <2 x float> %94, i32 1
  %96 = fadd float %95, %79
  %97 = extractelement <2 x float> %94, i32 0
  %98 = fadd float %97, %96
  %99 = fadd float %88, %98
  %100 = fcmp ule float %0, 0x47D2CED320000000
  %101 = fcmp olt float %0, -1.000000e+00
  %102 = select i1 %100, float %99, float 0x7FF0000000000000
  %103 = select i1 %101, float 0xFFFFFFFFE0000000, float %102
  %104 = fcmp une float %0, -1.000000e+00
  %105 = select i1 %104, float %103, float 0xFFF0000000000000
  %106 = bitcast float %0 to i32
  %107 = icmp eq i32 %106, -2147483648
  %108 = select i1 %107, float -0.000000e+00, float %105
  ret float %108
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fabsf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  ret float %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_copysignf1_purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, -2147483648
  %7 = or i32 %6, %4
  %8 = bitcast i32 %7 to float
  ret float %8
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmaxf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp ogt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fminf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp olt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fdimf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fsub float %0, %1
  %4 = fcmp uge float %3, 0.000000e+00
  %5 = fcmp une float %0, %1
  %6 = and i1 %5, %4
  %7 = select i1 %6, float %3, float 0.000000e+00
  ret float %7
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_truncf1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp oeq float %0, 0x7FF0000000000000
  %7 = fcmp oeq float %0, 0xFFF0000000000000
  %8 = or i1 %6, %7
  %9 = bitcast float %0 to i32
  %10 = and i32 %9, 2147483647
  %11 = bitcast i32 %10 to float
  %12 = fcmp oge float %11, 0x4160000000000000
  %13 = or i1 %8, %12
  %14 = fsub float %0, %5
  %15 = bitcast float %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = and i32 %9, -2147483648
  %18 = or i32 %16, %17
  %19 = bitcast i32 %18 to float
  %20 = select i1 %13, float %0, float %19
  ret float %20
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_floorf1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp uge float %5, 0.000000e+00
  %7 = fadd float %5, 1.000000e+00
  %8 = select i1 %6, float %5, float %7
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_ceilf1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp ugt float %5, 0.000000e+00
  %7 = fadd float %5, -1.000000e+00
  %8 = select i1 %6, float %7, float %5
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_roundf1_purec(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 5.000000e-01
  %3 = fptosi float %2 to i64
  %4 = trunc i64 %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = fsub float %2, %5
  %7 = fcmp ugt float %2, 0.000000e+00
  %8 = fcmp une float %6, 0.000000e+00
  %9 = fadd float %2, -1.000000e+00
  %10 = or i1 %7, %8
  %11 = select i1 %10, float %2, float %9
  %12 = fcmp uge float %6, 0.000000e+00
  %13 = fadd float %6, 1.000000e+00
  %14 = select i1 %12, float %6, float %13
  %15 = fcmp une float %0, 0x3FDFFFFFE0000000
  %16 = select i1 %15, float %11, float 0.000000e+00
  %17 = fcmp oeq float %0, 0x7FF0000000000000
  %18 = fcmp oeq float %0, 0xFFF0000000000000
  %19 = or i1 %17, %18
  %20 = bitcast float %0 to i32
  %21 = and i32 %20, 2147483647
  %22 = bitcast i32 %21 to float
  %23 = fcmp oge float %22, 0x4160000000000000
  %24 = or i1 %19, %23
  %25 = fsub float %16, %14
  %26 = bitcast float %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = and i32 %20, -2147483648
  %29 = or i32 %27, %28
  %30 = bitcast i32 %29 to float
  %31 = select i1 %24, float %0, float %30
  ret float %31
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_rintf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, -2147483648
  %4 = or i32 %3, 1258291200
  %5 = bitcast i32 %4 to float
  %6 = and i32 %2, 2147483647
  %7 = bitcast i32 %6 to float
  %8 = fcmp ule float %7, 0x4160000000000000
  %9 = fadd float %5, %0
  %10 = fsub float %9, %5
  %11 = bitcast float %10 to i32
  %12 = or i32 %3, %11
  %13 = bitcast i32 %12 to float
  %14 = select i1 %8, float %13, float %0
  ret float %14
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmaf1_purec(float, float, float) local_unnamed_addr #0 {
  %4 = fmul float %0, %1
  %5 = fadd float %4, %2
  %6 = bitcast float %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp uge float %8, 0x380B38FB80000000
  %10 = insertelement <2 x float> undef, float %1, i32 0
  %11 = insertelement <2 x float> %10, float %0, i32 1
  %12 = fmul <2 x float> %11, <float 0x4310000000000000, float 0x4310000000000000>
  %13 = insertelement <2 x i1> undef, i1 %9, i32 0
  %14 = shufflevector <2 x i1> %13, <2 x i1> undef, <2 x i32> zeroinitializer
  %15 = select <2 x i1> %14, <2 x float> %11, <2 x float> %12
  %16 = fmul float %2, 0x4630000000000000
  %17 = select i1 %9, float %2, float %16
  %18 = select i1 %9, float 1.000000e+00, float 0x39B0000000000000
  %19 = fcmp ule float %8, 0x47D2CED320000000
  %20 = fmul <2 x float> %15, <float 0x3CD0000000000000, float 0x3CD0000000000000>
  %21 = insertelement <2 x i1> undef, i1 %19, i32 0
  %22 = shufflevector <2 x i1> %21, <2 x i1> undef, <2 x i32> zeroinitializer
  %23 = select <2 x i1> %22, <2 x float> %15, <2 x float> %20
  %24 = fmul float %17, 0x39B0000000000000
  %25 = select i1 %19, float %17, float %24
  %26 = select i1 %19, float %18, float 0x4630000000000000
  %27 = bitcast <2 x float> %23 to <2 x i32>
  %28 = and <2 x i32> %27, <i32 -4096, i32 -4096>
  %29 = bitcast <2 x i32> %28 to <2 x float>
  %30 = fsub <2 x float> %23, %29
  %31 = extractelement <2 x float> %23, i32 0
  %32 = extractelement <2 x float> %23, i32 1
  %33 = fmul float %32, %31
  %34 = extractelement <2 x float> %29, i32 0
  %35 = extractelement <2 x float> %29, i32 1
  %36 = fmul float %35, %34
  %37 = fsub float %36, %33
  %38 = shufflevector <2 x float> %29, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %39 = fmul <2 x float> %30, %38
  %40 = extractelement <2 x float> %39, i32 1
  %41 = fadd float %40, %37
  %42 = extractelement <2 x float> %39, i32 0
  %43 = fadd float %42, %41
  %44 = extractelement <2 x float> %30, i32 0
  %45 = extractelement <2 x float> %30, i32 1
  %46 = fmul float %45, %44
  %47 = fadd float %46, %43
  %48 = fadd float %25, %33
  %49 = fsub float %48, %33
  %50 = fsub float %48, %49
  %51 = fsub float %33, %50
  %52 = fsub float %25, %49
  %53 = fadd float %52, %51
  %54 = fadd float %53, %47
  %55 = fcmp une float %32, 0.000000e+00
  %56 = fcmp une float %31, 0.000000e+00
  %57 = fadd float %48, %54
  %58 = and i1 %55, %56
  %59 = select i1 %58, float %57, float %25
  %60 = fcmp oeq float %25, 0x7FF0000000000000
  %61 = fcmp oeq float %25, 0xFFF0000000000000
  %62 = or i1 %60, %61
  %63 = fcmp une float %32, 0x7FF0000000000000
  %64 = fcmp une float %32, 0xFFF0000000000000
  %65 = and i1 %64, %63
  %66 = and i1 %65, %62
  %67 = fcmp ord float %32, 0.000000e+00
  %68 = and i1 %67, %66
  %69 = fcmp une float %31, 0x7FF0000000000000
  %70 = fcmp une float %31, 0xFFF0000000000000
  %71 = and i1 %70, %69
  %72 = and i1 %71, %68
  %73 = fcmp ord float %31, 0.000000e+00
  %74 = and i1 %73, %72
  %75 = select i1 %74, float %25, float %5
  %76 = fcmp oeq float %75, 0x7FF0000000000000
  %77 = fcmp oeq float %75, 0xFFF0000000000000
  %78 = or i1 %76, %77
  %79 = fcmp uno float %75, 0.000000e+00
  %80 = or i1 %79, %78
  %81 = fmul float %26, %59
  %82 = select i1 %80, float %75, float %81
  ret float %82
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sqrtf1_u05purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0.000000e+00
  %3 = select i1 %2, float %0, float 0x7FF8000000000000
  %4 = fcmp uge float %3, 0x3B50000000000000
  %5 = fmul float %3, 0x4490000000000000
  %6 = select i1 %4, float %3, float %5
  %7 = select i1 %4, float 5.000000e-01, float 0x3D90000000000000
  %8 = fcmp ule float %6, 0x43F0000000000000
  %9 = fmul float %6, 0x3BF0000000000000
  %10 = select i1 %8, float %6, float %9
  %11 = select i1 %8, float %7, float 0x41E0000000000000
  %12 = fadd float %10, 0x36A0000000000000
  %13 = bitcast float %12 to i32
  %14 = lshr i32 %13, 1
  %15 = sub nsw i32 1597463174, %14
  %16 = bitcast i32 %15 to float
  %17 = fmul float %10, 5.000000e-01
  %18 = fmul float %17, %16
  %19 = fmul float %18, %16
  %20 = fsub float 1.500000e+00, %19
  %21 = fmul float %20, %16
  %22 = fmul float %17, %21
  %23 = fmul float %21, %22
  %24 = fsub float 1.500000e+00, %23
  %25 = fmul float %21, %24
  %26 = fmul float %17, %25
  %27 = fmul float %25, %26
  %28 = fsub float 1.500000e+00, %27
  %29 = fmul float %25, %28
  %30 = fmul float %10, %29
  %31 = bitcast float %30 to i32
  %32 = and i32 %31, -4096
  %33 = bitcast i32 %32 to float
  %34 = fsub float %30, %33
  %35 = fmul float %30, %30
  %36 = fmul float %33, %33
  %37 = fsub float %36, %35
  %38 = fmul float %34, %33
  %39 = fadd float %38, %37
  %40 = fadd float %38, %39
  %41 = fmul float %34, %34
  %42 = fadd float %41, %40
  %43 = fadd float %10, %35
  %44 = fsub float %43, %10
  %45 = fsub float %43, %44
  %46 = fsub float %10, %45
  %47 = fsub float %35, %44
  %48 = fadd float %47, %46
  %49 = fadd float %48, %42
  %50 = fdiv float 1.000000e+00, %30
  %51 = bitcast float %50 to i32
  %52 = and i32 %51, -4096
  %53 = bitcast i32 %52 to float
  %54 = fsub float %50, %53
  %55 = fmul float %33, %53
  %56 = fadd float %55, -1.000000e+00
  %57 = fmul float %54, %33
  %58 = fadd float %57, %56
  %59 = fmul float %34, %53
  %60 = fadd float %59, %58
  %61 = fmul float %34, %54
  %62 = fadd float %61, %60
  %63 = fmul float %50, %62
  %64 = bitcast float %43 to i32
  %65 = and i32 %64, -4096
  %66 = bitcast i32 %65 to float
  %67 = fsub float %43, %66
  %68 = fmul float %50, %43
  %69 = fmul float %53, %66
  %70 = fsub float %69, %68
  %71 = fmul float %67, %53
  %72 = fadd float %71, %70
  %73 = fmul float %54, %66
  %74 = fadd float %73, %72
  %75 = fmul float %54, %67
  %76 = fadd float %75, %74
  %77 = fmul float %43, %63
  %78 = fsub float %76, %77
  %79 = fmul float %50, %49
  %80 = fadd float %79, %78
  %81 = fadd float %68, %80
  %82 = fmul float %11, %81
  %83 = fcmp une float %10, 0x7FF0000000000000
  %84 = select i1 %83, float %82, float 0x7FF0000000000000
  %85 = fcmp une float %10, 0.000000e+00
  %86 = select i1 %85, float %84, float %10
  ret float %86
}

; Function Attrs: nounwind uwtable
define float @Sleef_sqrtf1_purec(float) local_unnamed_addr #1 {
  %2 = tail call float @sqrtf(float %0) #3
  ret float %2
}

; Function Attrs: nounwind uwtable
define float @Sleef_hypotf1_u05purec(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fcmp uge float %12, 0x3810000000000000
  %14 = fmul float %10, 0x4170000000000000
  %15 = select i1 %13, float %10, float %14
  %16 = fmul float %12, 0x4170000000000000
  %17 = select i1 %13, float %12, float %16
  %18 = fdiv float 1.000000e+00, %17
  %19 = bitcast float %17 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %17, %21
  %23 = bitcast float %18 to i32
  %24 = and i32 %23, -4096
  %25 = bitcast i32 %24 to float
  %26 = fsub float %18, %25
  %27 = bitcast float %15 to i32
  %28 = and i32 %27, -4096
  %29 = bitcast i32 %28 to float
  %30 = fsub float %15, %29
  %31 = fmul float %15, %18
  %32 = fmul float %21, %25
  %33 = fadd float %32, -1.000000e+00
  %34 = fmul float %26, %21
  %35 = fadd float %34, %33
  %36 = fmul float %22, %25
  %37 = fadd float %36, %35
  %38 = fmul float %22, %26
  %39 = fadd float %38, %37
  %40 = fmul float %29, %25
  %41 = fsub float %40, %31
  %42 = fmul float %26, %29
  %43 = fadd float %42, %41
  %44 = fmul float %30, %25
  %45 = fadd float %44, %43
  %46 = fmul float %30, %26
  %47 = fadd float %46, %45
  %48 = fmul float %31, %39
  %49 = fsub float %47, %48
  %50 = fmul float %31, 0.000000e+00
  %51 = fsub float 0.000000e+00, %50
  %52 = fmul float %18, %51
  %53 = fadd float %52, %49
  %54 = bitcast float %31 to i32
  %55 = and i32 %54, -4096
  %56 = bitcast i32 %55 to float
  %57 = fsub float %31, %56
  %58 = fmul float %31, %31
  %59 = fmul float %56, %56
  %60 = fsub float %59, %58
  %61 = fadd float %56, %56
  %62 = fmul float %61, %57
  %63 = fadd float %62, %60
  %64 = fmul float %57, %57
  %65 = fadd float %64, %63
  %66 = fadd float %53, %53
  %67 = fmul float %31, %66
  %68 = fadd float %65, %67
  %69 = fadd float %58, 1.000000e+00
  %70 = fsub float %69, %58
  %71 = fsub float %69, %70
  %72 = fsub float %58, %71
  %73 = fsub float 1.000000e+00, %70
  %74 = fadd float %73, %72
  %75 = fadd float %74, %68
  %76 = fadd float %69, %75
  %77 = tail call float @sqrtf(float %76) #3
  %78 = bitcast float %77 to i32
  %79 = and i32 %78, -4096
  %80 = bitcast i32 %79 to float
  %81 = fsub float %77, %80
  %82 = fmul float %77, %77
  %83 = fmul float %80, %80
  %84 = fsub float %83, %82
  %85 = fmul float %81, %80
  %86 = fadd float %85, %84
  %87 = fadd float %85, %86
  %88 = fmul float %81, %81
  %89 = fadd float %88, %87
  %90 = fadd float %69, %82
  %91 = fsub float %90, %69
  %92 = fsub float %90, %91
  %93 = fsub float %69, %92
  %94 = fsub float %82, %91
  %95 = fadd float %94, %93
  %96 = fadd float %75, %89
  %97 = fadd float %95, %96
  %98 = fdiv float 1.000000e+00, %77
  %99 = bitcast float %98 to i32
  %100 = and i32 %99, -4096
  %101 = bitcast i32 %100 to float
  %102 = fsub float %98, %101
  %103 = fmul float %80, %101
  %104 = fadd float %103, -1.000000e+00
  %105 = fmul float %102, %80
  %106 = fadd float %105, %104
  %107 = fmul float %81, %101
  %108 = fadd float %107, %106
  %109 = fmul float %81, %102
  %110 = fadd float %109, %108
  %111 = fmul float %98, %110
  %112 = bitcast float %90 to i32
  %113 = and i32 %112, -4096
  %114 = bitcast i32 %113 to float
  %115 = fsub float %90, %114
  %116 = fmul float %98, %90
  %117 = fmul float %101, %114
  %118 = fsub float %117, %116
  %119 = fmul float %115, %101
  %120 = fadd float %119, %118
  %121 = fmul float %102, %114
  %122 = fadd float %121, %120
  %123 = fmul float %102, %115
  %124 = fadd float %123, %122
  %125 = fmul float %90, %111
  %126 = fsub float %124, %125
  %127 = fmul float %98, %97
  %128 = fadd float %127, %126
  %129 = insertelement <2 x float> undef, float %116, i32 0
  %130 = insertelement <2 x float> %129, float %128, i32 1
  %131 = fmul <2 x float> %130, <float 5.000000e-01, float 5.000000e-01>
  %132 = extractelement <2 x float> %131, i32 0
  %133 = bitcast float %132 to i32
  %134 = and i32 %133, -4096
  %135 = bitcast i32 %134 to float
  %136 = fsub float %132, %135
  %137 = bitcast float %12 to i32
  %138 = and i32 %137, -4096
  %139 = bitcast i32 %138 to float
  %140 = fsub float %12, %139
  %141 = fmul float %139, %135
  %142 = insertelement <2 x float> undef, float %12, i32 0
  %143 = shufflevector <2 x float> %142, <2 x float> undef, <2 x i32> zeroinitializer
  %144 = fmul <2 x float> %143, %131
  %145 = extractelement <2 x float> %144, i32 0
  %146 = fsub float %141, %145
  %147 = fmul float %136, %139
  %148 = fadd float %147, %146
  %149 = fmul float %140, %135
  %150 = fadd float %149, %148
  %151 = fmul float %140, %136
  %152 = fadd float %151, %150
  %153 = extractelement <2 x float> %144, i32 1
  %154 = fadd float %152, %153
  %155 = fadd float %145, %154
  %156 = fcmp ord float %155, 0.000000e+00
  %157 = select i1 %156, float %155, float 0x7FF0000000000000
  %158 = fcmp une float %10, 0.000000e+00
  %159 = select i1 %158, float %157, float %12
  %160 = fcmp ord float %8, %5
  %161 = select i1 %160, float %159, float 0x7FF8000000000000
  %162 = fcmp une float %5, 0x7FF0000000000000
  %163 = fcmp une float %8, 0x7FF0000000000000
  %164 = and i1 %162, %163
  %165 = select i1 %164, float %161, float 0x7FF0000000000000
  ret float %165
}

; Function Attrs: nounwind uwtable
define float @Sleef_hypotf1_u35purec(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fdiv float %10, %12
  %14 = fmul float %13, %13
  %15 = fadd float %14, 1.000000e+00
  %16 = tail call float @sqrtf(float %15) #3
  %17 = fmul float %12, %16
  %18 = fcmp une float %10, 0.000000e+00
  %19 = select i1 %18, float %17, float %12
  %20 = fcmp ord float %8, %5
  %21 = select i1 %20, float %19, float 0x7FF8000000000000
  %22 = fcmp une float %5, 0x7FF0000000000000
  %23 = fcmp une float %8, 0x7FF0000000000000
  %24 = and i1 %22, %23
  %25 = select i1 %24, float %21, float 0x7FF0000000000000
  ret float %25
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_nextafterf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fcmp une float %0, 0.000000e+00
  %4 = bitcast float %1 to i32
  %5 = and i32 %4, -2147483648
  %6 = bitcast i32 %5 to float
  %7 = select i1 %3, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = zext i32 %8 to i64
  %10 = ashr i32 %8, 31
  %11 = fcmp ole float %7, %1
  %12 = sext i1 %11 to i32
  %13 = xor i64 %9, 2147483648
  %14 = sub nsw i64 0, %13
  %15 = and i64 %14, 4294967295
  %16 = or i64 %15, 4294967296
  %17 = icmp eq i32 %10, %12
  %18 = select i1 %17, i64 %9, i64 %16
  %19 = fcmp oeq float %7, %1
  %20 = add nuw nsw i64 %18, 4294967295
  %21 = and i64 %18, 4294967296
  %22 = and i64 %20, 4294967295
  %23 = or i64 %22, %21
  %24 = select i1 %19, i64 %18, i64 %23
  %25 = xor i64 %24, 2147483648
  %26 = sub nsw i64 0, %25
  %27 = select i1 %17, i64 %24, i64 %26
  %28 = trunc i64 %27 to i32
  %29 = bitcast i32 %28 to float
  %30 = fcmp une float %29, 0.000000e+00
  %31 = fcmp oeq float %7, 0.000000e+00
  %32 = and i32 %8, -2147483648
  %33 = bitcast i32 %32 to float
  %34 = or i1 %31, %30
  %35 = select i1 %34, float %29, float %33
  %36 = fcmp une float %7, 0.000000e+00
  %37 = fcmp une float %1, 0.000000e+00
  %38 = or i1 %37, %36
  %39 = select i1 %38, float %35, float %1
  %40 = fcmp ord float %7, %1
  %41 = select i1 %40, float %39, float 0x7FF8000000000000
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_frfrexpf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3810000000000000
  %6 = fmul float %0, 0x41D0000000000000
  %7 = select i1 %5, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = and i32 %8, -2139095041
  %10 = or i32 %9, 1056964608
  %11 = fcmp une float %7, 0x7FF0000000000000
  %12 = fcmp une float %7, 0xFFF0000000000000
  %13 = and i32 %8, -2147483648
  %14 = or i32 %13, 2139095040
  %15 = and i1 %12, %11
  %16 = select i1 %15, i32 %10, i32 %14
  %17 = bitcast i32 %16 to float
  %18 = fcmp une float %7, 0.000000e+00
  %19 = select i1 %18, float %17, float %7
  ret float %19
}

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @Sleef_expfrexpf1_purec(float) local_unnamed_addr #0 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmodf1_purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp uge float %8, 0x3810000000000000
  %10 = fmul float %5, 0x4180000000000000
  %11 = select i1 %9, float %5, float %10
  %12 = fmul float %8, 0x4180000000000000
  %13 = select i1 %9, float %8, float %12
  %14 = select i1 %9, float 1.000000e+00, float 0x3E60000000000000
  %15 = fdiv float 1.000000e+00, %13
  %16 = bitcast float %15 to i32
  %17 = add i32 %16, -1
  %18 = bitcast i32 %17 to float
  %19 = fcmp une float %15, 0.000000e+00
  %20 = select i1 %19, float %18, float 0.000000e+00
  %21 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %11, i32 0
  %22 = fmul float %13, 3.000000e+00
  %23 = fmul float %13, 2.000000e+00
  %24 = fsub float -0.000000e+00, %13
  %25 = bitcast float %24 to i32
  %26 = and i32 %25, -4096
  %27 = bitcast i32 %26 to float
  %28 = fsub float %24, %27
  br label %33

; <label>:29:                                     ; preds = %33
  %30 = insertelement <2 x float> undef, float %92, i32 0
  %31 = insertelement <2 x float> %30, float %94, i32 1
  %32 = icmp ult i32 %96, 8
  br i1 %32, label %33, label %97

; <label>:33:                                     ; preds = %2, %29
  %34 = phi <2 x float> [ %21, %2 ], [ %31, %29 ]
  %35 = phi i32 [ 0, %2 ], [ %96, %29 ]
  %36 = extractelement <2 x float> %34, i32 0
  %37 = bitcast float %36 to i32
  %38 = add i32 %37, -1
  %39 = bitcast i32 %38 to float
  %40 = fcmp une float %36, 0.000000e+00
  %41 = select i1 %40, float %39, float 0.000000e+00
  %42 = fmul float %20, %41
  %43 = fptosi float %42 to i64
  %44 = trunc i64 %43 to i32
  %45 = sitofp i32 %44 to float
  %46 = fsub float %42, %45
  %47 = bitcast float %42 to i32
  %48 = and i32 %47, 2147483647
  %49 = bitcast i32 %48 to float
  %50 = fcmp ult float %49, 0x4160000000000000
  %51 = fsub float %42, %46
  %52 = select i1 %50, float %51, float %42
  %53 = fcmp ogt float %22, %36
  %54 = fcmp oge float %36, %13
  %55 = and i1 %54, %53
  %56 = select i1 %55, float 2.000000e+00, float %52
  %57 = fcmp ogt float %23, %36
  %58 = and i1 %54, %57
  %59 = select i1 %58, float 1.000000e+00, float %56
  %60 = fptosi float %59 to i64
  %61 = trunc i64 %60 to i32
  %62 = sitofp i32 %61 to float
  %63 = fsub float %59, %62
  %64 = bitcast float %59 to i32
  %65 = and i32 %64, 2147483647
  %66 = bitcast i32 %65 to float
  %67 = fcmp ult float %66, 0x4160000000000000
  %68 = fsub float %59, %63
  %69 = select i1 %67, float %68, float %59
  %70 = bitcast float %69 to i32
  %71 = and i32 %70, -4096
  %72 = bitcast i32 %71 to float
  %73 = fsub float %69, %72
  %74 = fmul float %69, %24
  %75 = fmul float %27, %72
  %76 = fsub float %75, %74
  %77 = fmul float %73, %27
  %78 = fadd float %77, %76
  %79 = fmul float %28, %72
  %80 = fadd float %79, %78
  %81 = fmul float %28, %73
  %82 = fadd float %81, %80
  %83 = fadd float %36, %74
  %84 = fsub float %83, %36
  %85 = fsub float %83, %84
  %86 = fsub float %36, %85
  %87 = fsub float %74, %84
  %88 = fadd float %87, %86
  %89 = extractelement <2 x float> %34, i32 1
  %90 = fadd float %89, %82
  %91 = fadd float %88, %90
  %92 = fadd float %83, %91
  %93 = fsub float %83, %92
  %94 = fadd float %91, %93
  %95 = fcmp uge float %92, %13
  %96 = add nuw nsw i32 %35, 1
  br i1 %95, label %29, label %97

; <label>:97:                                     ; preds = %33, %29
  %98 = fadd float %92, %94
  %99 = fmul float %14, %98
  %100 = fcmp une float %98, %13
  %101 = bitcast float %99 to i32
  %102 = select i1 %100, i32 %101, i32 0
  %103 = and i32 %3, -2147483648
  %104 = xor i32 %102, %103
  %105 = bitcast i32 %104 to float
  %106 = fcmp uge float %11, %13
  %107 = select i1 %106, float %105, float %0
  %108 = fcmp une float %13, 0.000000e+00
  %109 = select i1 %108, float %107, float 0x7FF8000000000000
  ret float %109
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_remainderf1_purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp uge float %8, 0x3820000000000000
  %10 = fmul float %5, 0x4180000000000000
  %11 = select i1 %9, float %5, float %10
  %12 = fmul float %8, 0x4180000000000000
  %13 = select i1 %9, float %8, float %12
  %14 = select i1 %9, float 1.000000e+00, float 0x3E60000000000000
  %15 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %11, i32 0
  %16 = fdiv float 1.000000e+00, %13
  %17 = fmul float %13, 1.500000e+00
  %18 = fmul float %13, 5.000000e-01
  %19 = fsub float -0.000000e+00, %13
  %20 = bitcast float %19 to i32
  %21 = and i32 %20, -4096
  %22 = bitcast i32 %21 to float
  %23 = fsub float %19, %22
  br label %24

; <label>:24:                                     ; preds = %2, %55
  %25 = phi <2 x float> [ %15, %2 ], [ %100, %55 ]
  %26 = phi i32 [ 0, %2 ], [ %101, %55 ]
  %27 = phi i32 [ 0, %2 ], [ %74, %55 ]
  %28 = extractelement <2 x float> %25, i32 0
  %29 = fmul float %16, %28
  %30 = bitcast float %29 to i32
  %31 = and i32 %30, -2147483648
  %32 = or i32 %31, 1258291200
  %33 = bitcast i32 %32 to float
  %34 = and i32 %30, 2147483647
  %35 = bitcast i32 %34 to float
  %36 = fcmp ule float %35, 0x4160000000000000
  %37 = fadd float %29, %33
  %38 = fsub float %37, %33
  %39 = bitcast float %38 to i32
  %40 = or i32 %31, %39
  %41 = bitcast i32 %40 to float
  %42 = select i1 %36, float %41, float %29
  %43 = bitcast float %28 to i32
  %44 = and i32 %43, 2147483647
  %45 = bitcast i32 %44 to float
  %46 = fcmp ule float %17, %45
  %47 = select i1 %46, float %42, float 1.000000e+00
  %48 = fcmp ule float %18, %45
  %49 = fcmp une float %18, %45
  %50 = icmp eq i32 %27, -1
  %51 = or i1 %50, %49
  %52 = and i1 %48, %51
  %53 = select i1 %52, float %47, float 0.000000e+00
  %54 = fcmp une float %53, 0.000000e+00
  br i1 %54, label %55, label %103

; <label>:55:                                     ; preds = %24
  %56 = fmul float %53, %19
  %57 = fcmp une float %56, 0x7FF0000000000000
  %58 = fcmp une float %56, 0xFFF0000000000000
  %59 = and i32 %43, -2147483648
  %60 = xor i32 %59, -1082130432
  %61 = bitcast i32 %60 to float
  %62 = fadd float %53, %61
  %63 = and i1 %58, %57
  %64 = select i1 %63, float %53, float %62
  %65 = fptosi float %64 to i64
  %66 = shl i64 %65, 63
  %67 = ashr exact i64 %66, 63
  %68 = trunc i64 %67 to i32
  %69 = bitcast float %64 to i32
  %70 = and i32 %69, 2147483647
  %71 = bitcast i32 %70 to float
  %72 = fcmp olt float %71, 0x4170000000000000
  %73 = select i1 %72, i32 %68, i32 0
  %74 = xor i32 %73, %27
  %75 = and i32 %69, -4096
  %76 = bitcast i32 %75 to float
  %77 = fsub float %64, %76
  %78 = fmul float %64, %19
  %79 = fmul float %22, %76
  %80 = fsub float %79, %78
  %81 = fmul float %77, %22
  %82 = fadd float %81, %80
  %83 = fmul float %23, %76
  %84 = fadd float %83, %82
  %85 = fmul float %23, %77
  %86 = fadd float %85, %84
  %87 = fadd float %28, %78
  %88 = fsub float %87, %28
  %89 = fsub float %87, %88
  %90 = fsub float %28, %89
  %91 = fsub float %78, %88
  %92 = fadd float %91, %90
  %93 = extractelement <2 x float> %25, i32 1
  %94 = fadd float %93, %86
  %95 = fadd float %92, %94
  %96 = fadd float %87, %95
  %97 = fsub float %87, %96
  %98 = fadd float %95, %97
  %99 = insertelement <2 x float> undef, float %96, i32 0
  %100 = insertelement <2 x float> %99, float %98, i32 1
  %101 = add nuw nsw i32 %26, 1
  %102 = icmp ult i32 %101, 8
  br i1 %102, label %24, label %103

; <label>:103:                                    ; preds = %55, %24
  %104 = phi float [ %28, %24 ], [ %96, %55 ]
  %105 = phi <2 x float> [ %25, %24 ], [ %100, %55 ]
  %106 = extractelement <2 x float> %105, i32 1
  %107 = fadd float %104, %106
  %108 = fmul float %14, %107
  %109 = bitcast float %108 to i32
  %110 = and i32 %3, -2147483648
  %111 = xor i32 %110, %109
  %112 = bitcast i32 %111 to float
  %113 = fcmp une float %1, 0x7FF0000000000000
  %114 = fcmp une float %1, 0xFFF0000000000000
  %115 = fcmp une float %0, 0x7FF0000000000000
  %116 = fcmp une float %0, 0xFFF0000000000000
  %117 = and i1 %116, %115
  %118 = select i1 %117, float %0, float 0x7FF8000000000000
  %119 = and i1 %114, %113
  %120 = select i1 %119, float %112, float %118
  %121 = fcmp une float %13, 0.000000e+00
  %122 = select i1 %121, float %120, float 0x7FF8000000000000
  ret float %122
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinpif1_u05purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i64
  %4 = lshr i64 %3, 63
  %5 = lshr i64 %3, 31
  %6 = shl nuw nsw i64 %4, 32
  %7 = and i64 %5, 1
  %8 = or i64 %6, %7
  %9 = xor i64 %8, 1
  %10 = add i64 %9, %3
  %11 = shl i64 %10, 62
  %12 = ashr i64 %11, 63
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %10 to i32
  %15 = and i32 %14, -2
  %16 = sitofp i32 %15 to float
  %17 = fsub float %2, %16
  %18 = fmul float %17, %17
  %19 = bitcast float %17 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %17, %21
  %23 = fmul float %21, %21
  %24 = fsub float %23, %18
  %25 = fmul float %22, %21
  %26 = fadd float %25, %24
  %27 = fadd float %25, %26
  %28 = fmul float %22, %22
  %29 = fadd float %28, %27
  %30 = icmp eq i32 %13, 0
  %31 = select i1 %30, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %32 = select i1 %30, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %33 = fmul float %31, %18
  %34 = fadd float %32, %33
  %35 = select i1 %30, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %36 = fmul float %18, %34
  %37 = fadd float %35, %36
  %38 = fmul float %18, %37
  %39 = select i1 %30, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %40 = select i1 %30, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %41 = fadd float %39, %38
  %42 = fsub float %41, %38
  %43 = fsub float %41, %42
  %44 = fsub float %38, %43
  %45 = fsub float %39, %42
  %46 = fadd float %45, %44
  %47 = fadd float %40, %46
  %48 = bitcast float %18 to i32
  %49 = and i32 %48, -4096
  %50 = bitcast i32 %49 to float
  %51 = fsub float %18, %50
  %52 = bitcast float %41 to i32
  %53 = and i32 %52, -4096
  %54 = bitcast i32 %53 to float
  %55 = fsub float %41, %54
  %56 = fmul float %18, %41
  %57 = fmul float %50, %54
  %58 = fsub float %57, %56
  %59 = fmul float %51, %54
  %60 = fadd float %59, %58
  %61 = fmul float %55, %50
  %62 = fadd float %61, %60
  %63 = fmul float %51, %55
  %64 = fadd float %63, %62
  %65 = fmul float %18, %47
  %66 = fadd float %65, %64
  %67 = fmul float %41, %29
  %68 = fadd float %67, %66
  %69 = select i1 %30, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %70 = select i1 %30, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %71 = fadd float %69, %56
  %72 = fsub float %71, %56
  %73 = fsub float %71, %72
  %74 = fsub float %56, %73
  %75 = fsub float %69, %72
  %76 = fadd float %75, %74
  %77 = fadd float %70, %68
  %78 = fadd float %76, %77
  %79 = select i1 %30, float %17, float %18
  %80 = select i1 %30, float 0.000000e+00, float %29
  %81 = bitcast float %71 to i32
  %82 = and i32 %81, -4096
  %83 = bitcast i32 %82 to float
  %84 = fsub float %71, %83
  %85 = bitcast float %79 to i32
  %86 = and i32 %85, -4096
  %87 = bitcast i32 %86 to float
  %88 = fsub float %79, %87
  %89 = fmul float %79, %71
  %90 = fmul float %87, %83
  %91 = fsub float %90, %89
  %92 = fmul float %84, %87
  %93 = fadd float %92, %91
  %94 = fmul float %88, %83
  %95 = fadd float %94, %93
  %96 = fmul float %88, %84
  %97 = fadd float %96, %95
  %98 = fmul float %71, %80
  %99 = fadd float %98, %97
  %100 = fmul float %79, %78
  %101 = fadd float %99, %100
  %102 = fadd float %89, 1.000000e+00
  %103 = fsub float %102, %89
  %104 = fsub float %102, %103
  %105 = fsub float %89, %104
  %106 = fsub float 1.000000e+00, %103
  %107 = fadd float %106, %105
  %108 = fadd float %107, %101
  %109 = select i1 %30, float %89, float %102
  %110 = select i1 %30, float %101, float %108
  %111 = shl i64 %10, 61
  %112 = ashr i64 %111, 63
  %113 = bitcast float %109 to i32
  %114 = trunc i64 %112 to i32
  %115 = and i32 %114, -2147483648
  %116 = xor i32 %115, %113
  %117 = bitcast i32 %116 to float
  %118 = bitcast float %110 to i32
  %119 = xor i32 %115, %118
  %120 = bitcast i32 %119 to float
  %121 = fadd float %117, %120
  %122 = bitcast float %0 to i32
  %123 = icmp eq i32 %122, -2147483648
  %124 = and i32 %122, 2147483647
  %125 = bitcast i32 %124 to float
  %126 = fcmp ogt float %125, 8.000000e+06
  %127 = fcmp oeq float %0, 0x7FF0000000000000
  %128 = fcmp oeq float %0, 0xFFF0000000000000
  %129 = or i1 %127, %128
  %130 = select i1 %123, float -0.000000e+00, float %121
  %131 = select i1 %126, float 0.000000e+00, float %130
  %132 = select i1 %129, float 0xFFFFFFFFE0000000, float %131
  ret float %132
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cospif1_u05purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i64
  %4 = lshr i64 %3, 63
  %5 = lshr i64 %3, 31
  %6 = shl nuw nsw i64 %4, 32
  %7 = and i64 %5, 1
  %8 = or i64 %6, %7
  %9 = xor i64 %8, 1
  %10 = add i64 %9, %3
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, -2
  %13 = sitofp i32 %12 to float
  %14 = fsub float %2, %13
  %15 = fmul float %14, %14
  %16 = bitcast float %14 to i32
  %17 = and i32 %16, -4096
  %18 = bitcast i32 %17 to float
  %19 = fsub float %14, %18
  %20 = and i64 %10, 2
  %21 = icmp ne i64 %20, 0
  %22 = select i1 %21, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %23 = select i1 %21, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %24 = fmul float %22, %15
  %25 = fadd float %23, %24
  %26 = select i1 %21, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %27 = fmul float %15, %25
  %28 = fadd float %26, %27
  %29 = fmul float %15, %28
  %30 = select i1 %21, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %31 = select i1 %21, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %32 = fadd float %30, %29
  %33 = fsub float %32, %29
  %34 = fsub float %32, %33
  %35 = fsub float %29, %34
  %36 = fsub float %30, %33
  %37 = fadd float %36, %35
  %38 = fadd float %31, %37
  %39 = bitcast float %15 to i32
  %40 = and i32 %39, -4096
  %41 = bitcast i32 %40 to float
  %42 = fsub float %15, %41
  %43 = bitcast float %32 to i32
  %44 = and i32 %43, -4096
  %45 = bitcast i32 %44 to float
  %46 = fsub float %32, %45
  %47 = fmul float %15, %32
  %48 = fmul float %41, %45
  %49 = fsub float %48, %47
  %50 = insertelement <2 x float> undef, float %18, i32 0
  %51 = insertelement <2 x float> %50, float %42, i32 1
  %52 = insertelement <2 x float> %50, float %45, i32 1
  %53 = fmul <2 x float> %51, %52
  %54 = insertelement <2 x float> undef, float %15, i32 0
  %55 = insertelement <2 x float> %54, float %49, i32 1
  %56 = fsub <2 x float> %53, %55
  %57 = fadd <2 x float> %53, %55
  %58 = shufflevector <2 x float> %56, <2 x float> %57, <2 x i32> <i32 0, i32 3>
  %59 = fmul float %46, %41
  %60 = insertelement <2 x float> undef, float %19, i32 0
  %61 = insertelement <2 x float> %60, float %42, i32 1
  %62 = insertelement <2 x float> %50, float %46, i32 1
  %63 = fmul <2 x float> %61, %62
  %64 = extractelement <2 x float> %63, i32 0
  %65 = insertelement <2 x float> undef, float %64, i32 0
  %66 = insertelement <2 x float> %65, float %59, i32 1
  %67 = fadd <2 x float> %66, %58
  %68 = fadd <2 x float> %63, %67
  %69 = insertelement <2 x float> %60, float %15, i32 1
  %70 = insertelement <2 x float> %60, float %38, i32 1
  %71 = fmul <2 x float> %69, %70
  %72 = fadd <2 x float> %71, %68
  %73 = extractelement <2 x float> %72, i32 0
  %74 = fmul float %32, %73
  %75 = extractelement <2 x float> %72, i32 1
  %76 = fadd float %74, %75
  %77 = select i1 %21, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %78 = select i1 %21, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %79 = fadd float %77, %47
  %80 = fsub float %79, %47
  %81 = fsub float %79, %80
  %82 = fsub float %47, %81
  %83 = fsub float %77, %80
  %84 = fadd float %83, %82
  %85 = fadd float %78, %76
  %86 = fadd float %84, %85
  %87 = select i1 %21, float %14, float %15
  %88 = select i1 %21, float 0.000000e+00, float %73
  %89 = bitcast float %79 to i32
  %90 = and i32 %89, -4096
  %91 = bitcast i32 %90 to float
  %92 = fsub float %79, %91
  %93 = bitcast float %87 to i32
  %94 = and i32 %93, -4096
  %95 = bitcast i32 %94 to float
  %96 = fsub float %87, %95
  %97 = fmul float %87, %79
  %98 = fmul float %95, %91
  %99 = fsub float %98, %97
  %100 = fmul float %92, %95
  %101 = fadd float %100, %99
  %102 = fmul float %96, %91
  %103 = fadd float %102, %101
  %104 = fmul float %96, %92
  %105 = fadd float %104, %103
  %106 = fmul float %79, %88
  %107 = fadd float %106, %105
  %108 = fmul float %87, %86
  %109 = fadd float %107, %108
  %110 = fadd float %97, 1.000000e+00
  %111 = fsub float %110, %97
  %112 = fsub float %110, %111
  %113 = fsub float %97, %112
  %114 = fsub float 1.000000e+00, %111
  %115 = fadd float %114, %113
  %116 = fadd float %115, %109
  %117 = select i1 %21, float %97, float %110
  %118 = select i1 %21, float %109, float %116
  %119 = bitcast float %117 to i32
  %120 = shl i32 %12, 29
  %121 = add i32 %120, 1073741824
  %122 = and i32 %121, -2147483648
  %123 = xor i32 %122, %119
  %124 = bitcast i32 %123 to float
  %125 = bitcast float %118 to i32
  %126 = xor i32 %122, %125
  %127 = bitcast i32 %126 to float
  %128 = fadd float %124, %127
  %129 = bitcast float %0 to i32
  %130 = and i32 %129, 2147483647
  %131 = bitcast i32 %130 to float
  %132 = fcmp ule float %131, 8.000000e+06
  %133 = fcmp oeq float %0, 0x7FF0000000000000
  %134 = fcmp oeq float %0, 0xFFF0000000000000
  %135 = or i1 %133, %134
  %136 = select i1 %132, float %128, float 1.000000e+00
  %137 = select i1 %135, float 0xFFFFFFFFE0000000, float %136
  ret float %137
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tgammaf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call fastcc { <2 x float>, <2 x float> } @gammafk(float %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = extractelement <2 x float> %3, i32 1
  %7 = fadd float %5, %6
  %8 = fmul float %7, 0x3FF7154760000000
  %9 = fcmp ogt float %8, 0.000000e+00
  %10 = select i1 %9, float 5.000000e-01, float -5.000000e-01
  %11 = fadd float %8, %10
  %12 = bitcast float %11 to i32
  %13 = fptosi float %11 to i32
  %14 = and i32 %13, 1
  %15 = sub i32 %12, %14
  %16 = bitcast i32 %15 to float
  %17 = fptosi float %16 to i32
  %18 = sitofp i32 %17 to float
  %19 = fmul float %18, 0xBFE62E4000000000
  %20 = fadd float %5, %19
  %21 = fsub float %20, %5
  %22 = fsub float %20, %21
  %23 = fsub float %5, %22
  %24 = fsub float %19, %21
  %25 = fadd float %24, %23
  %26 = fadd float %6, %25
  %27 = fmul float %18, 0xBEB7F7D1C0000000
  %28 = fadd float %27, %20
  %29 = fsub float %28, %20
  %30 = fsub float %28, %29
  %31 = fsub float %20, %30
  %32 = fsub float %27, %29
  %33 = fadd float %32, %31
  %34 = fadd float %26, %33
  %35 = fmul float %28, 0x3F29F6FFE0000000
  %36 = fadd float %35, 0x3F56D7EF80000000
  %37 = fmul float %28, %36
  %38 = fadd float %37, 0x3F811121A0000000
  %39 = fmul float %28, %38
  %40 = fadd float %39, 0x3FA5554B80000000
  %41 = bitcast float %28 to i32
  %42 = and i32 %41, -4096
  %43 = bitcast i32 %42 to float
  %44 = fsub float %28, %43
  %45 = bitcast float %40 to i32
  %46 = and i32 %45, -4096
  %47 = bitcast i32 %46 to float
  %48 = fsub float %40, %47
  %49 = fmul float %28, %40
  %50 = fmul float %43, %47
  %51 = fsub float %50, %49
  %52 = fmul float %44, %47
  %53 = fadd float %52, %51
  %54 = fmul float %48, %43
  %55 = fadd float %54, %53
  %56 = fmul float %44, %48
  %57 = fadd float %56, %55
  %58 = fmul float %34, %40
  %59 = fadd float %58, %57
  %60 = fadd float %49, 0x3FC5555540000000
  %61 = fsub float %60, %49
  %62 = fsub float %60, %61
  %63 = fsub float %49, %62
  %64 = fsub float 0x3FC5555540000000, %61
  %65 = fadd float %64, %63
  %66 = fadd float %65, %59
  %67 = bitcast float %60 to i32
  %68 = and i32 %67, -4096
  %69 = bitcast i32 %68 to float
  %70 = fsub float %60, %69
  %71 = fmul float %28, %60
  %72 = fmul float %43, %69
  %73 = fsub float %72, %71
  %74 = fmul float %44, %69
  %75 = fadd float %74, %73
  %76 = fmul float %70, %43
  %77 = fadd float %76, %75
  %78 = fmul float %44, %70
  %79 = fadd float %78, %77
  %80 = fmul float %28, %66
  %81 = fadd float %79, %80
  %82 = fmul float %34, %60
  %83 = fadd float %82, %81
  %84 = fadd float %71, 5.000000e-01
  %85 = fsub float %84, %71
  %86 = fsub float %84, %85
  %87 = fsub float %71, %86
  %88 = fsub float 5.000000e-01, %85
  %89 = fadd float %88, %87
  %90 = fadd float %89, %83
  %91 = fmul float %28, %28
  %92 = fmul float %43, %43
  %93 = fsub float %92, %91
  %94 = fadd float %43, %43
  %95 = fmul float %94, %44
  %96 = fadd float %95, %93
  %97 = fmul float %44, %44
  %98 = fadd float %97, %96
  %99 = fadd float %34, %34
  %100 = fmul float %28, %99
  %101 = fadd float %100, %98
  %102 = bitcast float %91 to i32
  %103 = and i32 %102, -4096
  %104 = bitcast i32 %103 to float
  %105 = fsub float %91, %104
  %106 = bitcast float %84 to i32
  %107 = and i32 %106, -4096
  %108 = bitcast i32 %107 to float
  %109 = fsub float %84, %108
  %110 = fmul float %91, %84
  %111 = fmul float %104, %108
  %112 = fsub float %111, %110
  %113 = fmul float %105, %108
  %114 = fadd float %113, %112
  %115 = fmul float %109, %104
  %116 = fadd float %115, %114
  %117 = fmul float %105, %109
  %118 = fadd float %117, %116
  %119 = fmul float %91, %90
  %120 = fadd float %118, %119
  %121 = fmul float %101, %84
  %122 = fadd float %121, %120
  %123 = fadd float %28, %110
  %124 = fsub float %123, %28
  %125 = fsub float %123, %124
  %126 = fsub float %28, %125
  %127 = fsub float %110, %124
  %128 = fadd float %127, %126
  %129 = fadd float %34, %122
  %130 = fadd float %128, %129
  %131 = fadd float %123, 1.000000e+00
  %132 = fsub float 1.000000e+00, %131
  %133 = fadd float %123, %132
  %134 = fadd float %133, %130
  %135 = ashr i32 %17, 1
  %136 = shl i32 %135, 23
  %137 = add i32 %136, 1065353216
  %138 = bitcast i32 %137 to float
  %139 = sub i32 %17, %135
  %140 = shl i32 %139, 23
  %141 = add i32 %140, 1065353216
  %142 = bitcast i32 %141 to float
  %143 = insertelement <2 x float> undef, float %131, i32 0
  %144 = insertelement <2 x float> %143, float %134, i32 1
  %145 = insertelement <2 x float> undef, float %138, i32 0
  %146 = shufflevector <2 x float> %145, <2 x float> undef, <2 x i32> zeroinitializer
  %147 = fmul <2 x float> %144, %146
  %148 = insertelement <2 x float> undef, float %142, i32 0
  %149 = shufflevector <2 x float> %148, <2 x float> undef, <2 x i32> zeroinitializer
  %150 = fmul <2 x float> %147, %149
  %151 = fcmp uge float %5, -1.040000e+02
  %152 = sext i1 %151 to i32
  %153 = bitcast <2 x float> %150 to <2 x i32>
  %154 = insertelement <2 x i32> undef, i32 %152, i32 0
  %155 = shufflevector <2 x i32> %154, <2 x i32> undef, <2 x i32> zeroinitializer
  %156 = and <2 x i32> %155, %153
  %157 = bitcast <2 x i32> %156 to <2 x float>
  %158 = extractelement <2 x i32> %156, i32 0
  %159 = and i32 %158, -4096
  %160 = bitcast i32 %159 to float
  %161 = extractelement <2 x float> %157, i32 0
  %162 = fsub float %161, %160
  %163 = extractelement <2 x float> %4, i32 0
  %164 = bitcast float %163 to i32
  %165 = and i32 %164, -4096
  %166 = bitcast i32 %165 to float
  %167 = fsub float %163, %166
  %168 = fmul float %163, %161
  %169 = fmul float %166, %160
  %170 = fsub float %169, %168
  %171 = fmul float %162, %166
  %172 = fadd float %171, %170
  %173 = fmul float %167, %160
  %174 = fadd float %173, %172
  %175 = fmul float %167, %162
  %176 = fadd float %175, %174
  %177 = shufflevector <2 x float> %4, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %178 = fmul <2 x float> %177, %157
  %179 = extractelement <2 x float> %178, i32 0
  %180 = fadd float %179, %176
  %181 = extractelement <2 x float> %178, i32 1
  %182 = fadd float %180, %181
  %183 = fadd float %168, %182
  %184 = fcmp oeq float %0, 0xFFF0000000000000
  %185 = fcmp olt float %0, 0.000000e+00
  %186 = fptosi float %0 to i64
  %187 = trunc i64 %186 to i32
  %188 = sitofp i32 %187 to float
  %189 = fcmp oeq float %188, %0
  %190 = and i1 %185, %189
  %191 = or i1 %184, %190
  %192 = fcmp oeq float %0, 0x7FF0000000000000
  %193 = or i1 %192, %184
  %194 = fcmp uno float %0, 0.000000e+00
  %195 = or i1 %194, %193
  %196 = xor i1 %195, true
  %197 = and i1 %185, %196
  %198 = fcmp uno float %183, 0.000000e+00
  %199 = and i1 %197, %198
  %200 = or i1 %191, %199
  %201 = select i1 %200, float 0x7FF8000000000000, float %183
  %202 = or i1 %192, %196
  %203 = fcmp oge float %0, 0xB810000000000000
  %204 = and i1 %203, %202
  %205 = fcmp oeq float %0, 0.000000e+00
  %206 = fcmp ogt float %0, 3.600000e+01
  %207 = or i1 %206, %205
  %208 = fcmp uno float %201, 0.000000e+00
  %209 = or i1 %207, %208
  %210 = and i1 %204, %209
  %211 = bitcast float %0 to i32
  %212 = and i32 %211, -2147483648
  %213 = or i32 %212, 2139095040
  %214 = bitcast i32 %213 to float
  %215 = select i1 %210, float %214, float %201
  ret float %215
}

; Function Attrs: norecurse nounwind readnone uwtable
define internal fastcc { <2 x float>, <2 x float> } @gammafk(float) unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x39B4484C00000000
  %6 = fcmp olt float %0, 5.000000e-01
  %7 = fsub float -0.000000e+00, %0
  %8 = fsub float 1.000000e+00, %0
  %9 = fadd float %8, -1.000000e+00
  %10 = fsub float %8, %9
  %11 = fsub float 1.000000e+00, %10
  %12 = fsub float %7, %9
  %13 = fadd float %12, %11
  %14 = select i1 %6, float %8, float %0
  %15 = select i1 %5, float %14, float 0.000000e+00
  %16 = and i1 %6, %5
  %17 = select i1 %16, float %13, float 0.000000e+00
  %18 = fcmp ult float %15, 5.000000e-01
  %19 = fcmp ugt float %15, 0x3FF3333340000000
  %20 = fcmp oge float %15, 0x4002666660000000
  %21 = fadd float %15, 1.000000e+00
  %22 = fsub float %21, %15
  %23 = fsub float %21, %22
  %24 = fsub float %15, %23
  %25 = fsub float 1.000000e+00, %22
  %26 = fadd float %25, %24
  %27 = fadd float %17, %26
  %28 = bitcast float %21 to i32
  %29 = and i32 %28, -4096
  %30 = bitcast i32 %29 to float
  %31 = fsub float %21, %30
  %32 = bitcast float %15 to i32
  %33 = and i32 %32, -4096
  %34 = bitcast i32 %33 to float
  %35 = fsub float %15, %34
  %36 = fmul float %15, %21
  %37 = fmul float %34, %30
  %38 = fsub float %37, %36
  %39 = fmul float %31, %34
  %40 = fadd float %39, %38
  %41 = fmul float %35, %30
  %42 = fadd float %41, %40
  %43 = fmul float %35, %31
  %44 = fadd float %43, %42
  %45 = fmul float %21, %17
  %46 = fadd float %45, %44
  %47 = fmul float %15, %27
  %48 = fadd float %47, %46
  %49 = fadd float %36, %48
  %50 = fsub float %36, %49
  %51 = fadd float %48, %50
  %52 = fadd float %15, 2.000000e+00
  %53 = fsub float %52, %15
  %54 = fsub float %52, %53
  %55 = fsub float %15, %54
  %56 = fsub float 2.000000e+00, %53
  %57 = fadd float %56, %55
  %58 = fadd float %17, %57
  %59 = bitcast float %52 to i32
  %60 = and i32 %59, -4096
  %61 = bitcast i32 %60 to float
  %62 = fsub float %52, %61
  %63 = bitcast float %49 to i32
  %64 = and i32 %63, -4096
  %65 = bitcast i32 %64 to float
  %66 = fsub float %49, %65
  %67 = fmul float %52, %49
  %68 = fmul float %61, %65
  %69 = fsub float %68, %67
  %70 = fmul float %62, %65
  %71 = fadd float %70, %69
  %72 = fmul float %66, %61
  %73 = fadd float %72, %71
  %74 = fmul float %62, %66
  %75 = fadd float %74, %73
  %76 = fmul float %52, %51
  %77 = fadd float %76, %75
  %78 = fmul float %58, %49
  %79 = fadd float %78, %77
  %80 = fadd float %67, %79
  %81 = fsub float %67, %80
  %82 = fadd float %79, %81
  %83 = fcmp ole float %15, 7.000000e+00
  %84 = and i1 %83, %20
  %85 = select i1 %84, float %80, float 1.000000e+00
  %86 = select i1 %84, float %82, float 0.000000e+00
  %87 = fadd float %15, 3.000000e+00
  %88 = fsub float %87, %15
  %89 = fsub float %87, %88
  %90 = fsub float %15, %89
  %91 = fsub float 3.000000e+00, %88
  %92 = fadd float %91, %90
  %93 = fadd float %17, %92
  %94 = select i1 %84, float %87, float %15
  %95 = select i1 %84, float %93, float %17
  %96 = insertelement <2 x float> undef, float %94, i32 0
  %97 = insertelement <2 x float> %96, float %95, i32 1
  %98 = fdiv float 1.000000e+00, %94
  %99 = or i1 %18, %19
  %100 = select i1 %99, float -2.000000e+00, float -1.000000e+00
  %101 = fadd float %94, %100
  %102 = fsub float %101, %94
  %103 = fsub float %101, %102
  %104 = fsub float %94, %103
  %105 = fsub float %100, %102
  %106 = fadd float %105, %104
  %107 = fadd float %95, %106
  %108 = fadd float %101, %107
  %109 = select i1 %20, float %98, float %108
  %110 = select i1 %99, float 0x3F1CE6AEA0000000, float 0x3FEE314800000000
  %111 = select i1 %20, float 0x3F4B8239C0000000, float %110
  %112 = select i1 %99, float 0x3F156418C0000000, float 0x3FEBBE8420000000
  %113 = select i1 %20, float 0xBF0B1D75E0000000, float %112
  %114 = fmul float %111, %109
  %115 = fadd float %113, %114
  %116 = select i1 %99, float 0x3F2408B0C0000000, float 0x3FDEE411C0000000
  %117 = select i1 %20, float 0xBF436773C0000000, float %116
  %118 = fmul float %109, %115
  %119 = fadd float %117, %118
  %120 = select i1 %99, float 0xBF2EDE4CA0000000, float 0xBFB6AB4C40000000
  %121 = select i1 %20, float 0x3F12476040000000, float %120
  %122 = fmul float %109, %119
  %123 = fadd float %121, %122
  %124 = select i1 %99, float 0x3F4042A160000000, float 0x3FB9F43480000000
  %125 = select i1 %20, float 0x3F49B0FF60000000, float %124
  %126 = fmul float %109, %123
  %127 = fadd float %125, %126
  %128 = select i1 %99, float 0xBF538DDA00000000, float 0xBFC31D9A40000000
  %129 = select i1 %20, float 0xBF2E13CE40000000, float %128
  %130 = fmul float %109, %127
  %131 = fadd float %129, %130
  %132 = select i1 %99, float 0x3F67B01FA0000000, float 0x3FC5BA65E0000000
  %133 = select i1 %20, float 0xBF65F72680000000, float %132
  %134 = fmul float %109, %131
  %135 = fadd float %133, %134
  %136 = select i1 %99, float 0xBF7E403520000000, float 0xBFCA8704E0000000
  %137 = select i1 %20, float 0x3F6C71C720000000, float %136
  %138 = fmul float %109, %135
  %139 = fadd float %137, %138
  %140 = select i1 %99, float 0x3F95132020000000, float 0x3FD1514D20000000
  %141 = select i1 %20, float 0x3FB5555560000000, float %140
  %142 = fmul float %109, %139
  %143 = fadd float %141, %142
  %144 = fadd float %94, -5.000000e-01
  %145 = fsub float %144, %94
  %146 = fsub float %144, %145
  %147 = fsub float %94, %146
  %148 = fsub float -5.000000e-01, %145
  %149 = fadd float %148, %147
  %150 = fadd float %95, %149
  %151 = fmul float %94, 0x3FF5555560000000
  %152 = fcmp uge float %151, 0x3BF0000000000000
  %153 = fmul float %151, 0x43F0000000000000
  %154 = select i1 %152, float %151, float %153
  %155 = bitcast float %154 to i32
  %156 = lshr i32 %155, 23
  %157 = and i32 %156, 255
  %158 = select i1 %152, i32 127, i32 191
  %159 = sub nsw i32 %157, %158
  %160 = shl i32 %159, 23
  %161 = sub i32 1065353216, %160
  %162 = bitcast i32 %161 to float
  %163 = fmul float %94, %162
  %164 = fmul float %95, %162
  %165 = fadd float %163, -1.000000e+00
  %166 = fsub float %165, %163
  %167 = fsub float %165, %166
  %168 = fsub float %163, %167
  %169 = fsub float -1.000000e+00, %166
  %170 = fadd float %169, %168
  %171 = fadd float %164, %170
  %172 = fadd float %163, 1.000000e+00
  %173 = fsub float %172, %163
  %174 = fsub float %172, %173
  %175 = fsub float %163, %174
  %176 = fsub float 1.000000e+00, %173
  %177 = fadd float %176, %175
  %178 = fadd float %164, %177
  %179 = fdiv float 1.000000e+00, %172
  %180 = bitcast float %172 to i32
  %181 = and i32 %180, -4096
  %182 = bitcast i32 %181 to float
  %183 = fsub float %172, %182
  %184 = bitcast float %179 to i32
  %185 = and i32 %184, -4096
  %186 = bitcast i32 %185 to float
  %187 = fsub float %179, %186
  %188 = bitcast float %165 to i32
  %189 = and i32 %188, -4096
  %190 = bitcast i32 %189 to float
  %191 = fsub float %165, %190
  %192 = fmul float %165, %179
  %193 = fmul float %182, %186
  %194 = fadd float %193, -1.000000e+00
  %195 = fmul float %187, %182
  %196 = fadd float %195, %194
  %197 = fmul float %183, %186
  %198 = fadd float %197, %196
  %199 = fmul float %183, %187
  %200 = fadd float %199, %198
  %201 = fmul float %190, %186
  %202 = fsub float %201, %192
  %203 = fmul float %187, %190
  %204 = fadd float %203, %202
  %205 = fmul float %191, %186
  %206 = fadd float %205, %204
  %207 = fmul float %191, %187
  %208 = fadd float %207, %206
  %209 = fmul float %192, %200
  %210 = fsub float %208, %209
  %211 = fmul float %192, %178
  %212 = fsub float %171, %211
  %213 = fmul float %179, %212
  %214 = fadd float %213, %210
  %215 = bitcast float %192 to i32
  %216 = and i32 %215, -4096
  %217 = bitcast i32 %216 to float
  %218 = fsub float %192, %217
  %219 = fmul float %192, %192
  %220 = fmul float %217, %217
  %221 = fsub float %220, %219
  %222 = fadd float %217, %217
  %223 = fmul float %222, %218
  %224 = fadd float %223, %221
  %225 = fmul float %218, %218
  %226 = fadd float %225, %224
  %227 = fadd float %214, %214
  %228 = fmul float %192, %227
  %229 = fadd float %226, %228
  %230 = fmul float %219, 0x3FCEA0D200000000
  %231 = fadd float %230, 0x3FD2406C80000000
  %232 = fmul float %219, %231
  %233 = fadd float %232, 0x3FD999B240000000
  %234 = fmul float %219, %233
  %235 = fadd float %234, 0x3FE5555560000000
  %236 = sitofp i32 %159 to float
  %237 = bitcast float %236 to i32
  %238 = and i32 %237, -4096
  %239 = bitcast i32 %238 to float
  %240 = fsub float %236, %239
  %241 = fmul float %236, 0x3FE62E4300000000
  %242 = fmul float %239, 0x3FE62E0000000000
  %243 = fsub float %242, %241
  %244 = fmul float %239, 0x3F00C00000000000
  %245 = fadd float %244, %243
  %246 = fmul float %240, 0x3FE62E0000000000
  %247 = fadd float %246, %245
  %248 = fmul float %240, 0x3F00C00000000000
  %249 = fadd float %248, %247
  %250 = fmul float %236, 0x3E205C6100000000
  %251 = fsub float %249, %250
  %252 = fmul float %192, 2.000000e+00
  %253 = fmul float %214, 2.000000e+00
  %254 = fadd float %241, %252
  %255 = fsub float %241, %254
  %256 = fadd float %252, %255
  %257 = fadd float %251, %256
  %258 = fadd float %257, %253
  %259 = bitcast float %219 to i32
  %260 = and i32 %259, -4096
  %261 = bitcast i32 %260 to float
  %262 = fsub float %219, %261
  %263 = fmul float %192, %219
  %264 = fmul float %217, %261
  %265 = fsub float %264, %263
  %266 = fmul float %262, %217
  %267 = fadd float %266, %265
  %268 = fmul float %218, %261
  %269 = fadd float %268, %267
  %270 = fmul float %218, %262
  %271 = fadd float %270, %269
  %272 = fmul float %219, %214
  %273 = fadd float %271, %272
  %274 = fmul float %192, %229
  %275 = fadd float %273, %274
  %276 = bitcast float %263 to i32
  %277 = and i32 %276, -4096
  %278 = bitcast i32 %277 to float
  %279 = fsub float %263, %278
  %280 = bitcast float %235 to i32
  %281 = and i32 %280, -4096
  %282 = bitcast i32 %281 to float
  %283 = fsub float %235, %282
  %284 = fmul float %263, %235
  %285 = fmul float %278, %282
  %286 = fsub float %285, %284
  %287 = fmul float %279, %282
  %288 = fadd float %287, %286
  %289 = fmul float %283, %278
  %290 = fadd float %289, %288
  %291 = fmul float %279, %283
  %292 = fadd float %291, %290
  %293 = fmul float %235, %275
  %294 = fadd float %292, %293
  %295 = fadd float %254, %284
  %296 = fsub float %254, %295
  %297 = fadd float %284, %296
  %298 = fadd float %297, %258
  %299 = fadd float %298, %294
  %300 = bitcast float %144 to i32
  %301 = and i32 %300, -4096
  %302 = bitcast i32 %301 to float
  %303 = fsub float %144, %302
  %304 = bitcast float %295 to i32
  %305 = and i32 %304, -4096
  %306 = bitcast i32 %305 to float
  %307 = fsub float %295, %306
  %308 = fmul float %144, %295
  %309 = fmul float %302, %306
  %310 = fsub float %309, %308
  %311 = fmul float %303, %306
  %312 = fadd float %311, %310
  %313 = fmul float %307, %302
  %314 = fadd float %313, %312
  %315 = fmul float %303, %307
  %316 = fadd float %315, %314
  %317 = fmul float %144, %299
  %318 = fadd float %316, %317
  %319 = fmul float %150, %295
  %320 = fadd float %319, %318
  %321 = fsub float -0.000000e+00, %94
  %322 = fsub float %308, %94
  %323 = fsub float %322, %308
  %324 = fsub float %322, %323
  %325 = fsub float %308, %324
  %326 = fsub float %321, %323
  %327 = fadd float %326, %325
  %328 = fsub float %320, %95
  %329 = fadd float %327, %328
  %330 = fadd float %322, 0x3FED67F1C0000000
  %331 = fsub float %330, %322
  %332 = fsub float %330, %331
  %333 = fsub float %322, %332
  %334 = fsub float 0x3FED67F1C0000000, %331
  %335 = fadd float %334, %333
  %336 = fadd float %329, 0x3E50C97D60000000
  %337 = fadd float %335, %336
  %338 = bitcast float %143 to i32
  %339 = and i32 %338, -4096
  %340 = bitcast i32 %339 to float
  %341 = fsub float %143, %340
  %342 = bitcast float %109 to i32
  %343 = and i32 %342, -4096
  %344 = bitcast i32 %343 to float
  %345 = fsub float %109, %344
  %346 = fmul float %109, %143
  %347 = fmul float %344, %340
  %348 = fsub float %347, %346
  %349 = fmul float %341, %344
  %350 = fadd float %349, %348
  %351 = fmul float %345, %340
  %352 = fadd float %351, %350
  %353 = fmul float %345, %341
  %354 = fadd float %353, %352
  %355 = select i1 %99, float 0xBFB13E0020000000, float 0xBFD9A4D920000000
  %356 = fadd float %355, %346
  %357 = fsub float %356, %346
  %358 = fsub float %356, %357
  %359 = fsub float %346, %358
  %360 = fsub float %355, %357
  %361 = fadd float %360, %359
  %362 = fadd float %361, %354
  %363 = bitcast float %356 to i32
  %364 = and i32 %363, -4096
  %365 = bitcast i32 %364 to float
  %366 = fsub float %356, %365
  %367 = fmul float %109, %356
  %368 = fmul float %344, %365
  %369 = fsub float %368, %367
  %370 = fmul float %366, %344
  %371 = fadd float %370, %369
  %372 = fmul float %345, %365
  %373 = fadd float %372, %371
  %374 = fmul float %345, %366
  %375 = fadd float %374, %373
  %376 = fmul float %109, %362
  %377 = fadd float %376, %375
  %378 = select i1 %99, float 0x3FD4A34CC0000000, float 0x3FEA51A640000000
  %379 = fadd float %378, %367
  %380 = fsub float %379, %367
  %381 = fsub float %379, %380
  %382 = fsub float %367, %381
  %383 = fsub float %378, %380
  %384 = fadd float %383, %382
  %385 = fadd float %384, %377
  %386 = bitcast float %379 to i32
  %387 = and i32 %386, -4096
  %388 = bitcast i32 %387 to float
  %389 = fsub float %379, %388
  %390 = fmul float %109, %379
  %391 = fmul float %344, %388
  %392 = fsub float %391, %390
  %393 = fmul float %389, %344
  %394 = fadd float %393, %392
  %395 = fmul float %345, %388
  %396 = fadd float %395, %394
  %397 = fmul float %345, %389
  %398 = fadd float %397, %396
  %399 = fmul float %109, %385
  %400 = fadd float %398, %399
  %401 = select i1 %99, float 0x3FDB0EE600000000, float 0xBFE2788D00000000
  %402 = fadd float %401, %390
  %403 = fsub float %402, %390
  %404 = fsub float %402, %403
  %405 = fsub float %390, %404
  %406 = fsub float %401, %403
  %407 = fadd float %406, %405
  %408 = fadd float %407, %400
  %409 = bitcast float %402 to i32
  %410 = and i32 %409, -4096
  %411 = bitcast i32 %410 to float
  %412 = fsub float %402, %411
  %413 = fmul float %109, %402
  %414 = fmul float %344, %411
  %415 = fsub float %414, %413
  %416 = fmul float %412, %344
  %417 = fadd float %416, %415
  %418 = fmul float %345, %411
  %419 = fadd float %418, %417
  %420 = fmul float %345, %412
  %421 = fadd float %420, %419
  %422 = fmul float %109, %408
  %423 = fadd float %421, %422
  %424 = select i1 %20, float %330, float %413
  %425 = select i1 %20, float %337, float %423
  %426 = fadd float %346, 1.000000e+00
  %427 = fsub float %426, %346
  %428 = fsub float %426, %427
  %429 = fsub float %346, %428
  %430 = fsub float 1.000000e+00, %427
  %431 = fadd float %430, %429
  %432 = fadd float %431, %354
  %433 = select i1 %20, float %426, float 1.000000e+00
  %434 = select i1 %20, float %432, float 0.000000e+00
  %435 = fsub float -0.000000e+00, %424
  %436 = fsub float 0x3FF250D040000000, %424
  %437 = fadd float %436, 0xBFF250D040000000
  %438 = fsub float %436, %437
  %439 = fsub float 0x3FF250D040000000, %438
  %440 = fsub float %435, %437
  %441 = fadd float %440, %439
  %442 = fsub float 0x3E61CF4380000000, %425
  %443 = fadd float %441, %442
  %444 = select i1 %6, float %436, float %424
  %445 = select i1 %6, float %443, float %425
  %446 = select i1 %5, float %444, float 0x4044CB5EC0000000
  %447 = select i1 %5, float %445, float 0x3EBE152CA0000000
  %448 = insertelement <2 x float> undef, float %446, i32 0
  %449 = insertelement <2 x float> %448, float %447, i32 1
  %450 = select i1 %6, float %85, float %433
  %451 = select i1 %6, float %86, float %434
  %452 = select i1 %5, float %450, float 1.000000e+00
  %453 = select i1 %5, float %451, float 0.000000e+00
  br i1 %6, label %454, label %602

; <label>:454:                                    ; preds = %1
  %455 = fmul float %0, 0x3F30000000000000
  %456 = fptosi float %455 to i64
  %457 = trunc i64 %456 to i32
  %458 = sitofp i32 %457 to float
  %459 = fmul float %458, 4.096000e+03
  %460 = fsub float %0, %459
  %461 = fmul float %460, 4.000000e+00
  %462 = fptosi float %461 to i64
  %463 = lshr i64 %462, 63
  %464 = lshr i64 %462, 31
  %465 = shl nuw nsw i64 %463, 32
  %466 = and i64 %464, 1
  %467 = or i64 %465, %466
  %468 = xor i64 %467, 1
  %469 = add i64 %468, %462
  %470 = shl i64 %469, 62
  %471 = ashr i64 %470, 63
  %472 = trunc i64 %471 to i32
  %473 = trunc i64 %469 to i32
  %474 = and i32 %473, -2
  %475 = sitofp i32 %474 to float
  %476 = fsub float %461, %475
  %477 = fmul float %476, %476
  %478 = bitcast float %476 to i32
  %479 = and i32 %478, -4096
  %480 = bitcast i32 %479 to float
  %481 = fsub float %476, %480
  %482 = fmul float %480, %480
  %483 = fsub float %482, %477
  %484 = fmul float %481, %480
  %485 = fadd float %484, %483
  %486 = fadd float %484, %485
  %487 = fmul float %481, %481
  %488 = fadd float %487, %486
  %489 = icmp eq i32 %472, 0
  %490 = select i1 %489, float 0x3E94C32E20000000, float 0xBE5A193700000000
  %491 = select i1 %489, float 0xBF032CC140000000, float 0x3ECE1EB4A0000000
  %492 = fmul float %490, %477
  %493 = fadd float %491, %492
  %494 = select i1 %489, float 0x3F6466BBE0000000, float 0xBF355D3C00000000
  %495 = fmul float %477, %493
  %496 = fadd float %494, %495
  %497 = fmul float %477, %496
  %498 = select i1 %489, float 0xBFB4ABBCE0000000, float 0x3F903C1F00000000
  %499 = select i1 %489, float 0xBE16F9CCE0000000, float 0x3DFEE1F000000000
  %500 = fadd float %498, %497
  %501 = fsub float %500, %497
  %502 = fsub float %500, %501
  %503 = fsub float %497, %502
  %504 = fsub float %498, %501
  %505 = fadd float %504, %503
  %506 = fadd float %499, %505
  %507 = bitcast float %477 to i32
  %508 = and i32 %507, -4096
  %509 = bitcast i32 %508 to float
  %510 = fsub float %477, %509
  %511 = bitcast float %500 to i32
  %512 = and i32 %511, -4096
  %513 = bitcast i32 %512 to float
  %514 = fsub float %500, %513
  %515 = fmul float %477, %500
  %516 = fmul float %509, %513
  %517 = fsub float %516, %515
  %518 = fmul float %510, %513
  %519 = fadd float %518, %517
  %520 = fmul float %514, %509
  %521 = fadd float %520, %519
  %522 = fmul float %510, %514
  %523 = fadd float %522, %521
  %524 = fmul float %477, %506
  %525 = fadd float %524, %523
  %526 = fmul float %500, %488
  %527 = fadd float %526, %525
  %528 = select i1 %489, float 0x3FE921FB60000000, float 0xBFD3BD3CC0000000
  %529 = select i1 %489, float 0xBE57781980000000, float 0xBE437BD7E0000000
  %530 = fadd float %528, %515
  %531 = fsub float %530, %515
  %532 = fsub float %530, %531
  %533 = fsub float %515, %532
  %534 = fsub float %528, %531
  %535 = fadd float %534, %533
  %536 = fadd float %529, %527
  %537 = fadd float %535, %536
  %538 = select i1 %489, float %476, float %477
  %539 = select i1 %489, float 0.000000e+00, float %488
  %540 = bitcast float %530 to i32
  %541 = and i32 %540, -4096
  %542 = bitcast i32 %541 to float
  %543 = fsub float %530, %542
  %544 = bitcast float %538 to i32
  %545 = and i32 %544, -4096
  %546 = bitcast i32 %545 to float
  %547 = fsub float %538, %546
  %548 = fmul float %538, %530
  %549 = fmul float %546, %542
  %550 = fsub float %549, %548
  %551 = fmul float %543, %546
  %552 = fadd float %551, %550
  %553 = fmul float %547, %542
  %554 = fadd float %553, %552
  %555 = fmul float %547, %543
  %556 = fadd float %555, %554
  %557 = fmul float %530, %539
  %558 = fadd float %557, %556
  %559 = fmul float %538, %537
  %560 = fadd float %558, %559
  %561 = fadd float %548, 1.000000e+00
  %562 = fsub float %561, %548
  %563 = fsub float %561, %562
  %564 = fsub float %548, %563
  %565 = fsub float 1.000000e+00, %562
  %566 = fadd float %565, %564
  %567 = fadd float %566, %560
  %568 = select i1 %489, float %548, float %561
  %569 = select i1 %489, float %560, float %567
  %570 = shl i64 %469, 61
  %571 = ashr i64 %570, 63
  %572 = bitcast float %568 to i32
  %573 = trunc i64 %571 to i32
  %574 = and i32 %573, -2147483648
  %575 = xor i32 %574, %572
  %576 = bitcast i32 %575 to float
  %577 = bitcast float %569 to i32
  %578 = xor i32 %574, %577
  %579 = bitcast i32 %578 to float
  %580 = bitcast float %433 to i32
  %581 = and i32 %580, -4096
  %582 = bitcast i32 %581 to float
  %583 = fsub float %433, %582
  %584 = and i32 %575, -4096
  %585 = bitcast i32 %584 to float
  %586 = fsub float %576, %585
  %587 = fmul float %433, %576
  %588 = fmul float %585, %582
  %589 = fsub float %588, %587
  %590 = fmul float %583, %585
  %591 = fadd float %590, %589
  %592 = fmul float %586, %582
  %593 = fadd float %592, %591
  %594 = fmul float %586, %583
  %595 = fadd float %594, %593
  %596 = fmul float %433, %579
  %597 = fadd float %595, %596
  %598 = fmul float %434, %576
  %599 = fadd float %598, %597
  %600 = insertelement <2 x float> undef, float %587, i32 0
  %601 = insertelement <2 x float> %600, float %599, i32 1
  br label %602

; <label>:602:                                    ; preds = %1, %454
  %603 = phi <2 x float> [ %97, %1 ], [ %601, %454 ]
  %604 = fmul float %0, 0x43B0000000000000
  %605 = extractelement <2 x float> %603, i32 0
  %606 = select i1 %6, float %605, float %85
  %607 = extractelement <2 x float> %603, i32 1
  %608 = select i1 %6, float %607, float %86
  %609 = select i1 %5, float %606, float %604
  %610 = select i1 %5, float %608, float 0.000000e+00
  %611 = fdiv float 1.000000e+00, %609
  %612 = bitcast float %611 to i32
  %613 = and i32 %612, -4096
  %614 = bitcast i32 %613 to float
  %615 = fsub float %611, %614
  %616 = insertelement <2 x float> undef, float %452, i32 0
  %617 = insertelement <2 x float> %616, float %609, i32 1
  %618 = bitcast <2 x float> %617 to <2 x i32>
  %619 = and <2 x i32> %618, <i32 -4096, i32 -4096>
  %620 = bitcast <2 x i32> %619 to <2 x float>
  %621 = fsub <2 x float> %617, %620
  %622 = fmul float %452, %611
  %623 = insertelement <2 x float> undef, float %614, i32 0
  %624 = shufflevector <2 x float> %623, <2 x float> undef, <2 x i32> zeroinitializer
  %625 = fmul <2 x float> %624, %620
  %626 = insertelement <2 x float> undef, float %622, i32 0
  %627 = insertelement <2 x float> %626, float -1.000000e+00, i32 1
  %628 = fsub <2 x float> %625, %627
  %629 = fadd <2 x float> %625, %627
  %630 = shufflevector <2 x float> %628, <2 x float> %629, <2 x i32> <i32 0, i32 3>
  %631 = insertelement <2 x float> undef, float %615, i32 0
  %632 = shufflevector <2 x float> %631, <2 x float> undef, <2 x i32> zeroinitializer
  %633 = fmul <2 x float> %632, %620
  %634 = fadd <2 x float> %633, %630
  %635 = fmul <2 x float> %621, %624
  %636 = fadd <2 x float> %635, %634
  %637 = fmul <2 x float> %621, %632
  %638 = fadd <2 x float> %637, %636
  %639 = extractelement <2 x float> %638, i32 1
  %640 = fmul float %622, %639
  %641 = extractelement <2 x float> %638, i32 0
  %642 = fsub float %641, %640
  %643 = fmul float %610, %622
  %644 = fsub float %453, %643
  %645 = fmul float %611, %644
  %646 = fadd float %645, %642
  %647 = insertelement <2 x float> %626, float %646, i32 1
  %648 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %449, 0
  %649 = insertvalue { <2 x float>, <2 x float> } %648, <2 x float> %647, 1
  ret { <2 x float>, <2 x float> } %649
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_lgammaf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call fastcc { <2 x float>, <2 x float> } @gammafk(float %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = bitcast <2 x float> %4 to <2 x i32>
  %6 = extractelement <2 x i32> %5, i32 0
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = extractelement <2 x i32> %5, i32 1
  %10 = and i32 %6, -2147483648
  %11 = xor i32 %10, %9
  %12 = bitcast i32 %11 to float
  %13 = fmul float %8, 0x3FF5555560000000
  %14 = fcmp uge float %13, 0x3BF0000000000000
  %15 = fmul float %13, 0x43F0000000000000
  %16 = select i1 %14, float %13, float %15
  %17 = bitcast float %16 to i32
  %18 = lshr i32 %17, 23
  %19 = and i32 %18, 255
  %20 = select i1 %14, i32 127, i32 191
  %21 = sub nsw i32 %19, %20
  %22 = shl i32 %21, 23
  %23 = sub i32 1065353216, %22
  %24 = bitcast i32 %23 to float
  %25 = fmul float %8, %24
  %26 = fmul float %12, %24
  %27 = fadd float %25, -1.000000e+00
  %28 = fsub float %27, %25
  %29 = fsub float %27, %28
  %30 = fsub float %25, %29
  %31 = fsub float -1.000000e+00, %28
  %32 = fadd float %31, %30
  %33 = fadd float %26, %32
  %34 = fadd float %25, 1.000000e+00
  %35 = fsub float %34, %25
  %36 = fsub float %34, %35
  %37 = fsub float %25, %36
  %38 = fsub float 1.000000e+00, %35
  %39 = fadd float %38, %37
  %40 = fadd float %26, %39
  %41 = fdiv float 1.000000e+00, %34
  %42 = bitcast float %34 to i32
  %43 = and i32 %42, -4096
  %44 = bitcast i32 %43 to float
  %45 = fsub float %34, %44
  %46 = bitcast float %41 to i32
  %47 = and i32 %46, -4096
  %48 = bitcast i32 %47 to float
  %49 = fsub float %41, %48
  %50 = bitcast float %27 to i32
  %51 = and i32 %50, -4096
  %52 = bitcast i32 %51 to float
  %53 = fsub float %27, %52
  %54 = fmul float %27, %41
  %55 = fmul float %44, %48
  %56 = fadd float %55, -1.000000e+00
  %57 = fmul float %49, %44
  %58 = fadd float %57, %56
  %59 = fmul float %45, %48
  %60 = fadd float %59, %58
  %61 = fmul float %45, %49
  %62 = fadd float %61, %60
  %63 = fmul float %52, %48
  %64 = fsub float %63, %54
  %65 = fmul float %49, %52
  %66 = fadd float %65, %64
  %67 = fmul float %53, %48
  %68 = fadd float %67, %66
  %69 = fmul float %53, %49
  %70 = fadd float %69, %68
  %71 = fmul float %54, %62
  %72 = fsub float %70, %71
  %73 = fmul float %54, %40
  %74 = fsub float %33, %73
  %75 = fmul float %41, %74
  %76 = fadd float %75, %72
  %77 = bitcast float %54 to i32
  %78 = and i32 %77, -4096
  %79 = bitcast i32 %78 to float
  %80 = fsub float %54, %79
  %81 = fmul float %54, %54
  %82 = fmul float %79, %79
  %83 = fsub float %82, %81
  %84 = fadd float %79, %79
  %85 = fmul float %84, %80
  %86 = fadd float %85, %83
  %87 = fmul float %80, %80
  %88 = fadd float %87, %86
  %89 = fadd float %76, %76
  %90 = fmul float %54, %89
  %91 = fadd float %88, %90
  %92 = fmul float %81, 0x3FCEA0D200000000
  %93 = fadd float %92, 0x3FD2406C80000000
  %94 = fmul float %81, %93
  %95 = fadd float %94, 0x3FD999B240000000
  %96 = fmul float %81, %95
  %97 = fadd float %96, 0x3FE5555560000000
  %98 = sitofp i32 %21 to float
  %99 = bitcast float %98 to i32
  %100 = and i32 %99, -4096
  %101 = bitcast i32 %100 to float
  %102 = fsub float %98, %101
  %103 = fmul float %98, 0x3FE62E4300000000
  %104 = fmul float %101, 0x3FE62E0000000000
  %105 = fsub float %104, %103
  %106 = fmul float %101, 0x3F00C00000000000
  %107 = fadd float %106, %105
  %108 = fmul float %102, 0x3FE62E0000000000
  %109 = fadd float %108, %107
  %110 = fmul float %102, 0x3F00C00000000000
  %111 = fadd float %110, %109
  %112 = fmul float %54, 2.000000e+00
  %113 = fadd float %103, %112
  %114 = fsub float %103, %113
  %115 = fadd float %112, %114
  %116 = bitcast float %81 to i32
  %117 = and i32 %116, -4096
  %118 = bitcast i32 %117 to float
  %119 = fsub float %81, %118
  %120 = fmul float %54, %81
  %121 = fmul float %79, %118
  %122 = fsub float %121, %120
  %123 = fmul float %119, %79
  %124 = fadd float %123, %122
  %125 = fmul float %80, %118
  %126 = fadd float %125, %124
  %127 = fmul float %80, %119
  %128 = fadd float %127, %126
  %129 = fmul float %81, %76
  %130 = fadd float %128, %129
  %131 = fmul float %54, %91
  %132 = fadd float %130, %131
  %133 = bitcast float %120 to i32
  %134 = and i32 %133, -4096
  %135 = bitcast i32 %134 to float
  %136 = fsub float %120, %135
  %137 = bitcast float %97 to i32
  %138 = and i32 %137, -4096
  %139 = bitcast i32 %138 to float
  %140 = fsub float %97, %139
  %141 = insertelement <2 x float> <float 0x3E205C6100000000, float undef>, float %120, i32 1
  %142 = insertelement <2 x float> undef, float %98, i32 0
  %143 = insertelement <2 x float> %142, float %97, i32 1
  %144 = fmul <2 x float> %141, %143
  %145 = fmul float %135, %139
  %146 = insertelement <2 x float> undef, float %111, i32 0
  %147 = insertelement <2 x float> %146, float %145, i32 1
  %148 = fsub <2 x float> %147, %144
  %149 = fmul float %136, %139
  %150 = insertelement <2 x float> undef, float %115, i32 0
  %151 = insertelement <2 x float> %150, float %149, i32 1
  %152 = fadd <2 x float> %148, %151
  %153 = insertelement <2 x float> <float 2.000000e+00, float undef>, float %140, i32 1
  %154 = insertelement <2 x float> undef, float %76, i32 0
  %155 = insertelement <2 x float> %154, float %135, i32 1
  %156 = fmul <2 x float> %153, %155
  %157 = fadd <2 x float> %152, %156
  %158 = fmul float %136, %140
  %159 = fmul float %97, %132
  %160 = extractelement <2 x float> %144, i32 1
  %161 = fadd float %113, %160
  %162 = fsub float %113, %161
  %163 = fadd float %160, %162
  %164 = insertelement <2 x float> undef, float %163, i32 0
  %165 = insertelement <2 x float> %164, float %158, i32 1
  %166 = fadd <2 x float> %165, %157
  %167 = extractelement <2 x float> %166, i32 1
  %168 = fadd float %167, %159
  %169 = extractelement <2 x float> %166, i32 0
  %170 = fadd float %169, %168
  %171 = insertelement <2 x float> undef, float %161, i32 0
  %172 = insertelement <2 x float> %171, float %170, i32 1
  %173 = fadd <2 x float> %3, %172
  %174 = extractelement <2 x float> %173, i32 0
  %175 = extractelement <2 x float> %3, i32 0
  %176 = fsub float %174, %175
  %177 = fsub float %174, %176
  %178 = fsub float %175, %177
  %179 = fsub float %161, %176
  %180 = fadd float %179, %178
  %181 = extractelement <2 x float> %173, i32 1
  %182 = fadd float %180, %181
  %183 = fadd float %174, %182
  %184 = fcmp oeq float %0, 0x7FF0000000000000
  %185 = fcmp oeq float %0, 0xFFF0000000000000
  %186 = or i1 %184, %185
  %187 = fcmp ole float %0, 0.000000e+00
  %188 = fptosi float %0 to i64
  %189 = trunc i64 %188 to i32
  %190 = sitofp i32 %189 to float
  %191 = fcmp oeq float %190, %0
  %192 = and i1 %187, %191
  %193 = fcmp uno float %0, 0.000000e+00
  %194 = or i1 %193, %186
  %195 = xor i1 %194, true
  %196 = fcmp uno float %183, 0.000000e+00
  %197 = and i1 %196, %195
  %198 = or i1 %192, %197
  %199 = or i1 %186, %198
  %200 = select i1 %199, float 0x7FF0000000000000, float %183
  ret float %200
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_erff1_u10purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3FF19999A0000000
  %6 = fcmp uge float %4, 0x4003333340000000
  %7 = fcmp uge float %4, 4.000000e+00
  %8 = fmul float %4, %4
  %9 = select i1 %5, float %4, float %8
  %10 = select i1 %6, float 0xBEE3E9FF00000000, float 0xBEF2CC2800000000
  %11 = select i1 %5, float %10, float 0x3F12958B20000000
  %12 = select i1 %6, float 0x3F30433580000000, float 0x3F39CE4080000000
  %13 = select i1 %5, float %12, float 0xBF49748820000000
  %14 = fmul float %9, %11
  %15 = fadd float %13, %14
  %16 = select i1 %6, float 0xBF67E7DC40000000, float 0xBF702D0440000000
  %17 = select i1 %5, float %16, float 0x3F75221700000000
  %18 = fmul float %9, %15
  %19 = fadd float %17, %18
  %20 = select i1 %6, float 0x3F951765C0000000, float 0x3F990AAA40000000
  %21 = select i1 %5, float %20, float 0xBF9B7B5F20000000
  %22 = fmul float %9, %19
  %23 = fadd float %21, %22
  %24 = select i1 %6, float 0xBFB9594F20000000, float 0xBFBB6AE160000000
  %25 = select i1 %5, float %24, float 0x3FBCE28B80000000
  %26 = fmul float %9, %23
  %27 = fadd float %25, %26
  %28 = bitcast float %27 to i32
  %29 = and i32 %28, -4096
  %30 = bitcast i32 %29 to float
  %31 = fsub float %27, %30
  %32 = bitcast float %9 to i32
  %33 = and i32 %32, -4096
  %34 = bitcast i32 %33 to float
  %35 = fsub float %9, %34
  %36 = fmul float %9, %27
  %37 = fmul float %34, %30
  %38 = fsub float %37, %36
  %39 = fmul float %31, %34
  %40 = fadd float %39, %38
  %41 = fmul float %35, %30
  %42 = fadd float %41, %40
  %43 = fmul float %35, %31
  %44 = fadd float %43, %42
  %45 = select i1 %6, float 0xBFE4985B00000000, float 0xBFE44E8D60000000
  %46 = select i1 %5, float %45, float 0xBFD8127240000000
  %47 = select i1 %6, float 0x3E5F482820000000, float 0xBE42A3F940000000
  %48 = select i1 %5, float %47, float 0xBE309A2820000000
  %49 = fadd float %46, %36
  %50 = fsub float %49, %36
  %51 = fsub float %49, %50
  %52 = fsub float %36, %51
  %53 = fsub float %46, %50
  %54 = fadd float %53, %52
  %55 = fadd float %48, %44
  %56 = fadd float %54, %55
  %57 = bitcast float %49 to i32
  %58 = and i32 %57, -4096
  %59 = bitcast i32 %58 to float
  %60 = fsub float %49, %59
  %61 = fmul float %9, %49
  %62 = fmul float %34, %59
  %63 = fsub float %62, %61
  %64 = fmul float %60, %34
  %65 = fadd float %64, %63
  %66 = fmul float %35, %59
  %67 = fadd float %66, %65
  %68 = fmul float %35, %60
  %69 = fadd float %68, %67
  %70 = fmul float %9, %56
  %71 = fadd float %69, %70
  %72 = select i1 %6, float 0xBFF1FE6C20000000, float 0xBFF20F8F20000000
  %73 = select i1 %5, float %72, float 0x3FF20DD740000000
  %74 = select i1 %6, float 0xBE66E4CF00000000, float 0x3E688F16C0000000
  %75 = select i1 %5, float %74, float 0x3E6CD2F540000000
  %76 = fadd float %73, %61
  %77 = fsub float %76, %61
  %78 = fsub float %76, %77
  %79 = fsub float %61, %78
  %80 = fsub float %73, %77
  %81 = fadd float %80, %79
  %82 = fadd float %75, %71
  %83 = fadd float %81, %82
  %84 = bitcast float %76 to i32
  %85 = and i32 %84, -4096
  %86 = bitcast i32 %85 to float
  %87 = fsub float %76, %86
  %88 = and i32 %2, 2147479552
  %89 = bitcast i32 %88 to float
  %90 = fsub float %4, %89
  %91 = fmul float %76, %4
  %92 = fmul float %89, %86
  %93 = fsub float %92, %91
  %94 = fmul float %87, %89
  %95 = fadd float %94, %93
  %96 = fmul float %90, %86
  %97 = fadd float %96, %95
  %98 = fmul float %90, %87
  %99 = fadd float %98, %97
  %100 = fmul float %83, %4
  %101 = fadd float %99, %100
  %102 = fadd float %91, %101
  %103 = fmul float %102, 0x3FF7154760000000
  %104 = fcmp ogt float %103, 0.000000e+00
  %105 = select i1 %104, float 5.000000e-01, float -5.000000e-01
  %106 = fadd float %103, %105
  %107 = bitcast float %106 to i32
  %108 = fptosi float %106 to i32
  %109 = and i32 %108, 1
  %110 = sub i32 %107, %109
  %111 = bitcast i32 %110 to float
  %112 = fptosi float %111 to i32
  %113 = sitofp i32 %112 to float
  %114 = fmul float %113, 0xBFE62E4000000000
  %115 = fadd float %91, %114
  %116 = fsub float %115, %91
  %117 = fsub float %115, %116
  %118 = fsub float %91, %117
  %119 = fsub float %114, %116
  %120 = fadd float %119, %118
  %121 = fadd float %101, %120
  %122 = fmul float %113, 0xBEB7F7D1C0000000
  %123 = fadd float %122, %115
  %124 = fsub float %123, %115
  %125 = fsub float %123, %124
  %126 = fsub float %115, %125
  %127 = fsub float %122, %124
  %128 = fadd float %127, %126
  %129 = fadd float %121, %128
  %130 = fmul float %123, 0x3F29F6FFE0000000
  %131 = fadd float %130, 0x3F56D7EF80000000
  %132 = fmul float %123, %131
  %133 = fadd float %132, 0x3F811121A0000000
  %134 = fmul float %123, %133
  %135 = fadd float %134, 0x3FA5554B80000000
  %136 = bitcast float %123 to i32
  %137 = and i32 %136, -4096
  %138 = bitcast i32 %137 to float
  %139 = fsub float %123, %138
  %140 = bitcast float %135 to i32
  %141 = and i32 %140, -4096
  %142 = bitcast i32 %141 to float
  %143 = fsub float %135, %142
  %144 = fmul float %123, %135
  %145 = fmul float %138, %142
  %146 = fsub float %145, %144
  %147 = fmul float %139, %142
  %148 = fadd float %147, %146
  %149 = fmul float %143, %138
  %150 = fadd float %149, %148
  %151 = fmul float %139, %143
  %152 = fadd float %151, %150
  %153 = fmul float %129, %135
  %154 = fadd float %153, %152
  %155 = fadd float %144, 0x3FC5555540000000
  %156 = fsub float %155, %144
  %157 = fsub float %155, %156
  %158 = fsub float %144, %157
  %159 = fsub float 0x3FC5555540000000, %156
  %160 = fadd float %159, %158
  %161 = fadd float %160, %154
  %162 = bitcast float %155 to i32
  %163 = and i32 %162, -4096
  %164 = bitcast i32 %163 to float
  %165 = fsub float %155, %164
  %166 = fmul float %123, %155
  %167 = fmul float %138, %164
  %168 = fsub float %167, %166
  %169 = fmul float %139, %164
  %170 = fadd float %169, %168
  %171 = fmul float %165, %138
  %172 = fadd float %171, %170
  %173 = fmul float %139, %165
  %174 = fadd float %173, %172
  %175 = fmul float %123, %161
  %176 = fadd float %174, %175
  %177 = fmul float %129, %155
  %178 = fadd float %177, %176
  %179 = fadd float %166, 5.000000e-01
  %180 = fsub float %179, %166
  %181 = fsub float %179, %180
  %182 = fsub float %166, %181
  %183 = fsub float 5.000000e-01, %180
  %184 = fadd float %183, %182
  %185 = fadd float %184, %178
  %186 = fmul float %123, %123
  %187 = fmul float %138, %138
  %188 = fsub float %187, %186
  %189 = fadd float %138, %138
  %190 = fmul float %189, %139
  %191 = fadd float %190, %188
  %192 = fmul float %139, %139
  %193 = fadd float %192, %191
  %194 = fadd float %129, %129
  %195 = fmul float %123, %194
  %196 = fadd float %195, %193
  %197 = bitcast float %186 to i32
  %198 = and i32 %197, -4096
  %199 = bitcast i32 %198 to float
  %200 = fsub float %186, %199
  %201 = bitcast float %179 to i32
  %202 = and i32 %201, -4096
  %203 = bitcast i32 %202 to float
  %204 = fsub float %179, %203
  %205 = fmul float %186, %179
  %206 = fmul float %199, %203
  %207 = fsub float %206, %205
  %208 = fmul float %200, %203
  %209 = fadd float %208, %207
  %210 = fmul float %204, %199
  %211 = fadd float %210, %209
  %212 = fmul float %200, %204
  %213 = fadd float %212, %211
  %214 = fmul float %186, %185
  %215 = fadd float %213, %214
  %216 = fmul float %196, %179
  %217 = fadd float %216, %215
  %218 = fadd float %123, %205
  %219 = fsub float %218, %123
  %220 = fsub float %218, %219
  %221 = fsub float %123, %220
  %222 = fsub float %205, %219
  %223 = fadd float %222, %221
  %224 = fadd float %129, %217
  %225 = fadd float %223, %224
  %226 = fadd float %218, 1.000000e+00
  %227 = fsub float 1.000000e+00, %226
  %228 = fadd float %218, %227
  %229 = fadd float %228, %225
  %230 = ashr i32 %112, 1
  %231 = shl i32 %230, 23
  %232 = add i32 %231, 1065353216
  %233 = bitcast i32 %232 to float
  %234 = fmul float %226, %233
  %235 = sub i32 %112, %230
  %236 = shl i32 %235, 23
  %237 = add i32 %236, 1065353216
  %238 = bitcast i32 %237 to float
  %239 = fmul float %234, %238
  %240 = fmul float %229, %233
  %241 = fmul float %240, %238
  %242 = fcmp uge float %91, -1.040000e+02
  %243 = bitcast float %239 to i32
  %244 = sext i1 %242 to i32
  %245 = and i32 %243, %244
  %246 = bitcast i32 %245 to float
  %247 = bitcast float %241 to i32
  %248 = and i32 %247, %244
  %249 = bitcast i32 %248 to float
  %250 = fsub float 1.000000e+00, %246
  %251 = fsub float 1.000000e+00, %250
  %252 = fsub float %251, %246
  %253 = fsub float %252, %249
  %254 = select i1 %5, float %250, float %91
  %255 = select i1 %5, float %253, float %101
  %256 = fadd float %254, %255
  %257 = bitcast float %256 to i32
  %258 = select i1 %7, i32 1065353216, i32 %257
  %259 = and i32 %2, -2147483648
  %260 = xor i32 %258, %259
  %261 = bitcast i32 %260 to float
  %262 = fcmp ord float %4, 0.000000e+00
  %263 = select i1 %262, float %261, float 0x7FF8000000000000
  ret float %263
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_erfcf1_u15purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 1.000000e+00
  %6 = fcmp uge float %4, 0x40019999A0000000
  %7 = fcmp uge float %4, 0x4011333340000000
  %8 = fcmp uge float %4, 0x4024333340000000
  %9 = fdiv float 1.000000e+00, %4
  %10 = and i32 %2, 2147479552
  %11 = bitcast i32 %10 to float
  %12 = fsub float %4, %11
  %13 = bitcast float %9 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %9, %15
  %17 = fmul float %11, %15
  %18 = fadd float %17, -1.000000e+00
  %19 = fmul float %16, %11
  %20 = fadd float %19, %18
  %21 = fmul float %12, %15
  %22 = fadd float %21, %20
  %23 = fmul float %12, %16
  %24 = fadd float %23, %22
  %25 = fsub float %15, %9
  %26 = fadd float %16, %25
  %27 = fmul float %15, 0.000000e+00
  %28 = fadd float %27, %26
  %29 = fmul float %16, 0.000000e+00
  %30 = fadd float %29, %28
  %31 = fmul float %9, %24
  %32 = fsub float %30, %31
  %33 = fmul float %9, 0.000000e+00
  %34 = fsub float 0.000000e+00, %33
  %35 = fmul float %9, %34
  %36 = fadd float %35, %32
  %37 = select i1 %6, float %9, float %4
  %38 = select i1 %6, float %36, float 0.000000e+00
  %39 = select i1 %7, float 0x3FF1D87320000000, float 0xBFD8C3CBA0000000
  %40 = select i1 %6, float %39, float 0xBEDA28E740000000
  %41 = select i1 %5, float %40, float 0xBF16A4E440000000
  %42 = select i1 %7, float 0xBFEE417520000000, float 0x3FF49BF6E0000000
  %43 = select i1 %6, float %42, float 0x3F0E2547A0000000
  %44 = select i1 %5, float %43, float 0x3F43A94DE0000000
  %45 = fmul float %37, %41
  %46 = fadd float %44, %45
  %47 = select i1 %7, float 0xBFD7787020000000, float 0xBFFD11A040000000
  %48 = select i1 %6, float %47, float 0x3ED92D8340000000
  %49 = select i1 %5, float %48, float 0xBF5B4A77A0000000
  %50 = fmul float %37, %46
  %51 = fadd float %49, %50
  %52 = select i1 %7, float 0x3FE6E5EB60000000, float 0x3FF3FC85A0000000
  %53 = select i1 %6, float %52, float 0xBF675B0E80000000
  %54 = select i1 %5, float %53, float 0x3F27878B80000000
  %55 = fmul float %37, %51
  %56 = fadd float %54, %55
  %57 = select i1 %7, float 0xBF89DD7B20000000, float 0xBFC10266E0000000
  %58 = select i1 %6, float %57, float 0x3F9725D000000000
  %59 = select i1 %5, float %58, float 0x3F9399B6E0000000
  %60 = fmul float %37, %56
  %61 = fadd float %59, %60
  %62 = bitcast float %37 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %37, %64
  %66 = bitcast float %61 to i32
  %67 = and i32 %66, -4096
  %68 = bitcast i32 %67 to float
  %69 = fsub float %61, %68
  %70 = fmul float %37, %61
  %71 = fmul float %64, %68
  %72 = fsub float %71, %70
  %73 = fmul float %65, %68
  %74 = fadd float %73, %72
  %75 = fmul float %69, %64
  %76 = fadd float %75, %74
  %77 = fmul float %65, %69
  %78 = fadd float %77, %76
  %79 = fmul float %61, %38
  %80 = fadd float %79, %78
  %81 = select i1 %7, float 0xBFDFEEFC60000000, float 0xBFDEDF12C0000000
  %82 = select i1 %6, float %81, float 0xBFBAF18180000000
  %83 = select i1 %5, float %82, float 0xBFBA4F7C60000000
  %84 = select i1 %7, float 0xBE418FFA80000000, float 0xBDE35EC900000000
  %85 = select i1 %6, float %84, float 0x3E2E1E43A0000000
  %86 = select i1 %5, float %85, float 0xBE1CDE0840000000
  %87 = fadd float %83, %70
  %88 = fsub float %87, %70
  %89 = fsub float %87, %88
  %90 = fsub float %70, %89
  %91 = fsub float %83, %88
  %92 = fadd float %91, %90
  %93 = fadd float %86, %80
  %94 = fadd float %92, %93
  %95 = bitcast float %87 to i32
  %96 = and i32 %95, -4096
  %97 = bitcast i32 %96 to float
  %98 = fsub float %87, %97
  %99 = fmul float %37, %87
  %100 = fmul float %64, %97
  %101 = fsub float %100, %99
  %102 = fmul float %98, %64
  %103 = fadd float %102, %101
  %104 = fmul float %65, %97
  %105 = fadd float %104, %103
  %106 = select i1 %7, float 0xBF08B45540000000, float 0xBF56074020000000
  %107 = select i1 %6, float %106, float 0xBFE456E9A0000000
  %108 = select i1 %5, float %107, float 0xBFE45F2FE0000000
  %109 = select i1 %7, float 0xBD7B31A100000000, float 0x3DCEFD2820000000
  %110 = select i1 %6, float %109, float 0xBE50C52E80000000
  %111 = select i1 %5, float %110, float 0x3E5AE7E1A0000000
  %112 = fadd float %108, %99
  %113 = fsub float %112, %99
  %114 = fsub float %112, %113
  %115 = fsub float %99, %114
  %116 = fsub float %108, %113
  %117 = fadd float %116, %115
  %118 = bitcast float %112 to i32
  %119 = and i32 %118, -4096
  %120 = bitcast i32 %119 to float
  %121 = fsub float %112, %120
  %122 = fmul float %37, %112
  %123 = insertelement <2 x float> undef, float %64, i32 0
  %124 = insertelement <2 x float> %123, float %65, i32 1
  %125 = insertelement <2 x float> undef, float %120, i32 0
  %126 = insertelement <2 x float> %125, float %98, i32 1
  %127 = fmul <2 x float> %124, %126
  %128 = insertelement <2 x float> undef, float %122, i32 0
  %129 = insertelement <2 x float> %128, float %105, i32 1
  %130 = fsub <2 x float> %127, %129
  %131 = fadd <2 x float> %127, %129
  %132 = shufflevector <2 x float> %130, <2 x float> %131, <2 x i32> <i32 0, i32 3>
  %133 = insertelement <2 x float> undef, float %121, i32 0
  %134 = insertelement <2 x float> %133, float %38, i32 1
  %135 = insertelement <2 x float> %123, float %87, i32 1
  %136 = fmul <2 x float> %134, %135
  %137 = fadd <2 x float> %136, %132
  %138 = insertelement <2 x float> undef, float %65, i32 0
  %139 = insertelement <2 x float> %138, float %37, i32 1
  %140 = insertelement <2 x float> %125, float %94, i32 1
  %141 = fmul <2 x float> %139, %140
  %142 = fadd <2 x float> %141, %137
  %143 = fmul float %65, %121
  %144 = insertelement <2 x float> undef, float %143, i32 0
  %145 = insertelement <2 x float> %144, float %111, i32 1
  %146 = fadd <2 x float> %145, %142
  %147 = fmul float %38, %112
  %148 = insertelement <2 x float> undef, float %147, i32 0
  %149 = insertelement <2 x float> %148, float %117, i32 1
  %150 = fadd <2 x float> %149, %146
  %151 = extractelement <2 x float> %150, i32 1
  %152 = fmul float %37, %151
  %153 = extractelement <2 x float> %150, i32 0
  %154 = fadd float %153, %152
  %155 = select i1 %7, float 0xBFE250CE60000000, float 0xBFE25071A0000000
  %156 = select i1 %6, float %155, float 0xBFF20E94C0000000
  %157 = select i1 %5, float %156, float 0xBFF20DD760000000
  %158 = select i1 %7, float 0x3E20AB5520000000, float 0x3E5A46B5C0000000
  %159 = select i1 %6, float %158, float 0xBE68ACFC60000000
  %160 = select i1 %5, float %159, float 0x3E69AD1700000000
  %161 = fadd float %157, %122
  %162 = fsub float %161, %122
  %163 = fsub float %161, %162
  %164 = fsub float %122, %163
  %165 = fsub float %157, %162
  %166 = fadd float %165, %164
  %167 = fadd float %160, %154
  %168 = fadd float %166, %167
  %169 = fsub float -0.000000e+00, %4
  %170 = select i1 %6, float %169, float %161
  %171 = select i1 %6, float 0.000000e+00, float %168
  %172 = bitcast float %170 to i32
  %173 = and i32 %172, -4096
  %174 = bitcast i32 %173 to float
  %175 = fsub float %170, %174
  %176 = fmul float %170, %4
  %177 = fmul float %11, %174
  %178 = fsub float %177, %176
  %179 = fmul float %175, %11
  %180 = fadd float %179, %178
  %181 = fmul float %12, %174
  %182 = fadd float %181, %180
  %183 = fmul float %12, %175
  %184 = fadd float %183, %182
  %185 = fmul float %171, %4
  %186 = fadd float %184, %185
  %187 = fadd float %161, %176
  %188 = fsub float %187, %176
  %189 = fsub float %187, %188
  %190 = fsub float %176, %189
  %191 = fsub float %161, %188
  %192 = fadd float %191, %190
  %193 = fadd float %168, %186
  %194 = fadd float %192, %193
  %195 = select i1 %6, float %187, float %176
  %196 = select i1 %6, float %194, float %186
  %197 = fadd float %195, %196
  %198 = fmul float %197, 0x3FF7154760000000
  %199 = fcmp ogt float %198, 0.000000e+00
  %200 = select i1 %199, float 5.000000e-01, float -5.000000e-01
  %201 = fadd float %198, %200
  %202 = bitcast float %201 to i32
  %203 = fptosi float %201 to i32
  %204 = and i32 %203, 1
  %205 = sub i32 %202, %204
  %206 = bitcast i32 %205 to float
  %207 = fptosi float %206 to i32
  %208 = sitofp i32 %207 to float
  %209 = fmul float %208, 0xBFE62E4000000000
  %210 = fadd float %195, %209
  %211 = fsub float %210, %195
  %212 = fsub float %210, %211
  %213 = fsub float %195, %212
  %214 = fsub float %209, %211
  %215 = fadd float %214, %213
  %216 = fadd float %196, %215
  %217 = fmul float %208, 0xBEB7F7D1C0000000
  %218 = fadd float %217, %210
  %219 = fsub float %218, %210
  %220 = fsub float %218, %219
  %221 = fsub float %210, %220
  %222 = fsub float %217, %219
  %223 = fadd float %222, %221
  %224 = fadd float %216, %223
  %225 = fmul float %218, 0x3F29F6FFE0000000
  %226 = fadd float %225, 0x3F56D7EF80000000
  %227 = fmul float %218, %226
  %228 = fadd float %227, 0x3F811121A0000000
  %229 = fmul float %218, %228
  %230 = fadd float %229, 0x3FA5554B80000000
  %231 = bitcast float %218 to i32
  %232 = and i32 %231, -4096
  %233 = bitcast i32 %232 to float
  %234 = fsub float %218, %233
  %235 = bitcast float %230 to i32
  %236 = and i32 %235, -4096
  %237 = bitcast i32 %236 to float
  %238 = fsub float %230, %237
  %239 = fmul float %218, %230
  %240 = fmul float %233, %237
  %241 = fsub float %240, %239
  %242 = fmul float %234, %237
  %243 = fadd float %242, %241
  %244 = fmul float %238, %233
  %245 = fadd float %244, %243
  %246 = fmul float %234, %238
  %247 = fadd float %246, %245
  %248 = fmul float %224, %230
  %249 = fadd float %248, %247
  %250 = fadd float %239, 0x3FC5555540000000
  %251 = fsub float %250, %239
  %252 = fsub float %250, %251
  %253 = fsub float %239, %252
  %254 = fsub float 0x3FC5555540000000, %251
  %255 = fadd float %254, %253
  %256 = fadd float %255, %249
  %257 = bitcast float %250 to i32
  %258 = and i32 %257, -4096
  %259 = bitcast i32 %258 to float
  %260 = fsub float %250, %259
  %261 = fmul float %218, %250
  %262 = fmul float %233, %259
  %263 = fsub float %262, %261
  %264 = fmul float %234, %259
  %265 = fadd float %264, %263
  %266 = fmul float %260, %233
  %267 = fadd float %266, %265
  %268 = fmul float %234, %260
  %269 = fadd float %268, %267
  %270 = fmul float %218, %256
  %271 = fadd float %269, %270
  %272 = fmul float %224, %250
  %273 = fadd float %272, %271
  %274 = fadd float %261, 5.000000e-01
  %275 = fsub float %274, %261
  %276 = fsub float %274, %275
  %277 = fsub float %261, %276
  %278 = fsub float 5.000000e-01, %275
  %279 = fadd float %278, %277
  %280 = fadd float %279, %273
  %281 = fmul float %218, %218
  %282 = fmul float %233, %233
  %283 = fsub float %282, %281
  %284 = fadd float %233, %233
  %285 = fmul float %284, %234
  %286 = fadd float %285, %283
  %287 = fmul float %234, %234
  %288 = fadd float %287, %286
  %289 = fadd float %224, %224
  %290 = fmul float %218, %289
  %291 = fadd float %290, %288
  %292 = bitcast float %281 to i32
  %293 = and i32 %292, -4096
  %294 = bitcast i32 %293 to float
  %295 = fsub float %281, %294
  %296 = bitcast float %274 to i32
  %297 = and i32 %296, -4096
  %298 = bitcast i32 %297 to float
  %299 = fsub float %274, %298
  %300 = fmul float %281, %274
  %301 = fmul float %294, %298
  %302 = fsub float %301, %300
  %303 = fmul float %295, %298
  %304 = fadd float %303, %302
  %305 = fmul float %299, %294
  %306 = fadd float %305, %304
  %307 = fmul float %295, %299
  %308 = fadd float %307, %306
  %309 = fmul float %281, %280
  %310 = fadd float %308, %309
  %311 = fmul float %291, %274
  %312 = fadd float %311, %310
  %313 = fadd float %218, %300
  %314 = fsub float %313, %218
  %315 = fsub float %313, %314
  %316 = fsub float %218, %315
  %317 = fsub float %300, %314
  %318 = fadd float %317, %316
  %319 = fadd float %224, %312
  %320 = fadd float %318, %319
  %321 = fadd float %313, 1.000000e+00
  %322 = fsub float 1.000000e+00, %321
  %323 = fadd float %313, %322
  %324 = fadd float %323, %320
  %325 = ashr i32 %207, 1
  %326 = shl i32 %325, 23
  %327 = add i32 %326, 1065353216
  %328 = bitcast i32 %327 to float
  %329 = fmul float %321, %328
  %330 = sub i32 %207, %325
  %331 = shl i32 %330, 23
  %332 = add i32 %331, 1065353216
  %333 = bitcast i32 %332 to float
  %334 = fmul float %329, %333
  %335 = fmul float %324, %328
  %336 = fmul float %335, %333
  %337 = fcmp uge float %195, -1.040000e+02
  %338 = bitcast float %334 to i32
  %339 = sext i1 %337 to i32
  %340 = and i32 %338, %339
  %341 = bitcast i32 %340 to float
  %342 = bitcast float %336 to i32
  %343 = and i32 %342, %339
  %344 = bitcast i32 %343 to float
  %345 = and i32 %340, -4096
  %346 = bitcast i32 %345 to float
  %347 = fsub float %341, %346
  %348 = fmul float %37, %341
  %349 = fmul float %64, %346
  %350 = fsub float %349, %348
  %351 = fmul float %347, %64
  %352 = fadd float %351, %350
  %353 = fmul float %65, %346
  %354 = fadd float %353, %352
  %355 = fmul float %65, %347
  %356 = fadd float %355, %354
  %357 = fmul float %38, %341
  %358 = fadd float %357, %356
  %359 = fmul float %37, %344
  %360 = fadd float %358, %359
  %361 = select i1 %6, float %348, float %341
  %362 = select i1 %6, float %360, float %344
  %363 = fadd float %361, %362
  %364 = select i1 %8, float 0.000000e+00, float %363
  %365 = fsub float 2.000000e+00, %364
  %366 = icmp sgt i32 %2, -1
  %367 = select i1 %366, float %364, float %365
  %368 = fcmp ord float %0, 0.000000e+00
  %369 = select i1 %368, float %367, float 0x7FF8000000000000
  ret float %369
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_cinz_sincospif1_u05purec(float) local_unnamed_addr #0 {
  %2 = tail call <2 x float> @Sleef_sincospif1_u05purec(float %0)
  ret <2 x float> %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_cinz_sincospif1_u35purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i64
  %4 = lshr i64 %3, 63
  %5 = lshr i64 %3, 31
  %6 = shl nuw nsw i64 %4, 32
  %7 = and i64 %5, 1
  %8 = or i64 %6, %7
  %9 = xor i64 %8, 1
  %10 = add i64 %9, %3
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, -2
  %13 = sitofp i32 %12 to float
  %14 = fsub float %2, %13
  %15 = fmul float %14, %14
  %16 = fmul float %15, 0x3F02E11480000000
  %17 = fsub float 0x3F646617E0000000, %16
  %18 = fmul float %15, %17
  %19 = fadd float %18, 0xBFB4ABBCE0000000
  %20 = fmul float %15, %19
  %21 = fadd float %20, 0x3FE921FB60000000
  %22 = fmul float %14, %21
  %23 = fmul float %15, 0x3ECDB1B200000000
  %24 = fadd float %23, 0xBF355CA860000000
  %25 = fmul float %15, %24
  %26 = fadd float %25, 0x3F903C1D20000000
  %27 = fmul float %15, %26
  %28 = fadd float %27, 0xBFD3BD3CC0000000
  %29 = fmul float %15, %28
  %30 = fadd float %29, 1.000000e+00
  %31 = and i64 %10, 2
  %32 = icmp ne i64 %31, 0
  %33 = select i1 %32, float %30, float %22
  %34 = select i1 %32, float %22, float %30
  %35 = shl i64 %10, 61
  %36 = ashr i64 %35, 63
  %37 = bitcast float %33 to i32
  %38 = trunc i64 %36 to i32
  %39 = and i32 %38, -2147483648
  %40 = xor i32 %39, %37
  %41 = shl i32 %12, 29
  %42 = add i32 %41, 1073741824
  %43 = and i32 %42, -2147483648
  %44 = bitcast float %34 to i32
  %45 = xor i32 %43, %44
  %46 = bitcast float %0 to i32
  %47 = and i32 %46, 2147483647
  %48 = bitcast i32 %47 to float
  %49 = fcmp ule float %48, 1.000000e+07
  %50 = sext i1 %49 to i32
  %51 = and i32 %40, %50
  %52 = and i32 %45, %50
  %53 = fcmp oeq float %0, 0x7FF0000000000000
  %54 = fcmp oeq float %0, 0xFFF0000000000000
  %55 = or i1 %53, %54
  %56 = sext i1 %55 to i32
  %57 = or i32 %51, %56
  %58 = bitcast i32 %57 to float
  %59 = or i32 %52, %56
  %60 = bitcast i32 %59 to float
  %61 = insertelement <2 x float> undef, float %58, i32 0
  %62 = insertelement <2 x float> %61, float %60, i32 1
  ret <2 x float> %62
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_cinz_modff1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = bitcast float %0 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp ule float %8, 0x4160000000000000
  %10 = select i1 %9, float %5, float 0.000000e+00
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = and i32 %6, -2147483648
  %14 = or i32 %12, %13
  %15 = bitcast i32 %14 to float
  %16 = fsub float %0, %10
  %17 = bitcast float %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = or i32 %18, %13
  %20 = bitcast i32 %19 to float
  %21 = insertelement <2 x float> undef, float %15, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  ret <2 x float> %22
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_atanf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = fcmp ule float %4, 1.000000e+00
  %7 = fdiv float 1.000000e+00, %4
  %8 = select i1 %6, float %4, float %7
  %9 = fmul float %8, %8
  %10 = fmul float %9, %9
  %11 = fmul float %10, %10
  %12 = insertelement <2 x float> undef, float %9, i32 0
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, <float 0x3FBB399E40000000, float 0x3F672199A0000000>
  %15 = fadd <2 x float> %14, <float 0xBFC22DF3E0000000, float 0xBF905701A0000000>
  %16 = fmul <2 x float> %13, <float 0x3FC99734E0000000, float 0x3FA5C336C0000000>
  %17 = fadd <2 x float> %16, <float 0xBFD5554BA0000000, float 0xBFB32BFF40000000>
  %18 = insertelement <2 x float> undef, float %10, i32 0
  %19 = shufflevector <2 x float> %18, <2 x float> undef, <2 x i32> zeroinitializer
  %20 = fmul <2 x float> %19, %15
  %21 = fadd <2 x float> %17, %20
  %22 = extractelement <2 x float> %21, i32 1
  %23 = fmul float %11, %22
  %24 = extractelement <2 x float> %21, i32 0
  %25 = fadd float %24, %23
  %26 = fmul float %9, %25
  %27 = fmul float %8, %26
  %28 = fadd float %8, %27
  %29 = fsub float 0x3FF921FB60000000, %28
  %30 = select i1 %5, float %29, float %28
  %31 = and i32 %2, -2147483648
  %32 = bitcast float %30 to i32
  %33 = xor i32 %31, %32
  %34 = bitcast i32 %33 to float
  ret float %34
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_atan2f1_u35purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = ashr i32 %6, 31
  %8 = and i32 %7, -2
  %9 = and i32 %6, 2147483647
  %10 = bitcast i32 %9 to float
  %11 = or i32 %7, 1
  %12 = fcmp uge float %10, %5
  %13 = select i1 %12, i32 %8, i32 %11
  %14 = fsub float -0.000000e+00, %10
  %15 = select i1 %12, float %5, float %14
  %16 = fcmp ogt float %10, %5
  %17 = select i1 %16, float %10, float %5
  %18 = fdiv float %15, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, %19
  %21 = fmul float %20, %20
  %22 = fmul float %19, 0x3F672199A0000000
  %23 = fadd float %22, 0xBF905701A0000000
  %24 = fmul float %19, 0x3FA5C336C0000000
  %25 = fadd float %24, 0xBFB32BFF40000000
  %26 = fmul float %20, %23
  %27 = fadd float %25, %26
  %28 = fmul float %19, 0x3FBB399E40000000
  %29 = fadd float %28, 0xBFC22DF3E0000000
  %30 = fmul float %19, 0x3FC99734E0000000
  %31 = fadd float %30, 0xBFD5554BA0000000
  %32 = fmul float %20, %29
  %33 = fadd float %31, %32
  %34 = fmul float %21, %27
  %35 = fadd float %33, %34
  %36 = fmul float %19, %35
  %37 = fmul float %18, %36
  %38 = fadd float %18, %37
  %39 = sitofp i32 %13 to float
  %40 = fmul float %39, 0x3FF921FB60000000
  %41 = fadd float %40, %38
  %42 = bitcast float %41 to i32
  %43 = and i32 %6, -2147483648
  %44 = xor i32 %43, %42
  %45 = bitcast i32 %44 to float
  %46 = fcmp oeq float %1, 0x7FF0000000000000
  %47 = fcmp oeq float %1, 0xFFF0000000000000
  %48 = or i1 %46, %47
  %49 = fcmp oeq float %1, 0.000000e+00
  %50 = or i1 %49, %48
  %51 = or i32 %43, 1070141403
  %52 = bitcast i32 %51 to float
  %53 = fsub float 0x3FF921FB60000000, %52
  %54 = select i1 %48, float %53, float 0x3FF921FB60000000
  %55 = select i1 %50, float %54, float %45
  %56 = fcmp une float %0, 0x7FF0000000000000
  %57 = fcmp une float %0, 0xFFF0000000000000
  %58 = or i32 %43, 1061752795
  %59 = bitcast i32 %58 to float
  %60 = fsub float 0x3FF921FB60000000, %59
  %61 = select i1 %48, float %60, float 0x3FF921FB60000000
  %62 = and i1 %57, %56
  %63 = select i1 %62, float %55, float %61
  %64 = fcmp une float %0, 0.000000e+00
  %65 = and i32 %7, 1078530011
  %66 = fcmp uno float %0, %1
  %67 = bitcast float %63 to i32
  %68 = select i1 %64, i32 %67, i32 %65
  %69 = and i32 %3, -2147483648
  %70 = xor i32 %68, %69
  %71 = bitcast i32 %70 to float
  %72 = select i1 %66, float 0xFFFFFFFFE0000000, float %71
  ret float %72
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_asinf1_u35purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %8, float %6
  %10 = tail call float @sqrtf(float %9) #3
  %11 = select i1 %5, float %10, float %4
  %12 = fmul float %9, 0x3FA57DB020000000
  %13 = fadd float %12, 0x3F98D27DC0000000
  %14 = fmul float %9, %13
  %15 = fadd float %14, 0x3FA7486640000000
  %16 = fmul float %9, %15
  %17 = fadd float %16, 0x3FB32FF140000000
  %18 = fmul float %9, %17
  %19 = fadd float %18, 0x3FC5555E40000000
  %20 = fmul float %9, %11
  %21 = fmul float %19, %20
  %22 = fadd float %11, %21
  %23 = fmul float %22, 2.000000e+00
  %24 = fsub float 0x3FF921FB60000000, %23
  %25 = select i1 %5, float %24, float %22
  %26 = bitcast float %25 to i32
  %27 = and i32 %2, -2147483648
  %28 = xor i32 %27, %26
  %29 = bitcast i32 %28 to float
  ret float %29
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_acosf1_u35purec(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  %6 = fmul float %0, %0
  %7 = fsub float 1.000000e+00, %4
  %8 = fmul float %7, 5.000000e-01
  %9 = select i1 %5, float %6, float %8
  %10 = tail call float @sqrtf(float %9) #3
  %11 = select i1 %5, float %4, float %10
  %12 = fcmp une float %4, 1.000000e+00
  %13 = select i1 %12, float %11, float 0.000000e+00
  %14 = fmul float %9, 0x3FA57DB020000000
  %15 = fadd float %14, 0x3F98D27DC0000000
  %16 = fmul float %9, %15
  %17 = fadd float %16, 0x3FA7486640000000
  %18 = fmul float %9, %17
  %19 = fadd float %18, 0x3FB32FF140000000
  %20 = fmul float %9, %19
  %21 = fadd float %20, 0x3FC5555E40000000
  %22 = fmul float %9, %13
  %23 = fmul float %21, %22
  %24 = bitcast float %13 to i32
  %25 = and i32 %2, -2147483648
  %26 = xor i32 %25, %24
  %27 = bitcast i32 %26 to float
  %28 = bitcast float %23 to i32
  %29 = xor i32 %25, %28
  %30 = bitcast i32 %29 to float
  %31 = fadd float %27, %30
  %32 = fsub float 0x3FF921FB60000000, %31
  %33 = fadd float %13, %23
  %34 = fmul float %33, 2.000000e+00
  %35 = select i1 %5, float %32, float %34
  %36 = fcmp uge float %0, 0.000000e+00
  %37 = fsub float 0x400921FB60000000, %35
  %38 = or i1 %36, %5
  %39 = select i1 %38, float %35, float %37
  ret float %39
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_atan2f1_u10purec(float, float) local_unnamed_addr #0 {
  %3 = tail call float @Sleef_atan2f1_u10purec(float %0, float %1)
  ret float %3
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_asinf1_u10purec(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_asinf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_acosf1_u10purec(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_acosf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_atanf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_atanf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_logf1_u35purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, 0x3FCEA0D200000000
  %21 = fadd float %20, 0x3FD2406C80000000
  %22 = fmul float %19, %21
  %23 = fadd float %22, 0x3FD999B240000000
  %24 = fmul float %19, %23
  %25 = fadd float %24, 0x3FE5555560000000
  %26 = fmul float %19, %25
  %27 = fadd float %26, 2.000000e+00
  %28 = sitofp i32 %15 to float
  %29 = fmul float %28, 0x3FE62E4300000000
  %30 = fmul float %18, %27
  %31 = fadd float %29, %30
  %32 = fcmp une float %4, 0x7FF0000000000000
  %33 = select i1 %32, float %31, float 0x7FF0000000000000
  %34 = fcmp oge float %4, 0.000000e+00
  %35 = select i1 %34, float %33, float 0x7FF8000000000000
  %36 = fcmp une float %4, 0.000000e+00
  %37 = select i1 %36, float %35, float 0xFFF0000000000000
  ret float %37
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_expf1_u10purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FF7154760000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fmul float %12, 0x3FE62E4000000000
  %14 = fsub float %0, %13
  %15 = fmul float %12, 0x3EB7F7D1C0000000
  %16 = fsub float %14, %15
  %17 = fmul float %16, 0x3F2A057B40000000
  %18 = fadd float %17, 0x3F56D2D920000000
  %19 = fmul float %16, %18
  %20 = fadd float %19, 0x3F811114C0000000
  %21 = fmul float %16, %20
  %22 = fadd float %21, 0x3FA5554F40000000
  %23 = fmul float %16, %22
  %24 = fadd float %23, 0x3FC5555560000000
  %25 = fmul float %16, %24
  %26 = fadd float %25, 5.000000e-01
  %27 = fmul float %16, %16
  %28 = fmul float %27, %26
  %29 = fadd float %16, %28
  %30 = fadd float %29, 1.000000e+00
  %31 = ashr i32 %11, 1
  %32 = shl i32 %31, 23
  %33 = add i32 %32, 1065353216
  %34 = bitcast i32 %33 to float
  %35 = fmul float %30, %34
  %36 = sub i32 %11, %31
  %37 = shl i32 %36, 23
  %38 = add i32 %37, 1065353216
  %39 = bitcast i32 %38 to float
  %40 = fmul float %35, %39
  %41 = fcmp uge float %0, -1.040000e+02
  %42 = select i1 %41, float %40, float 0.000000e+00
  %43 = fcmp ule float %0, 1.000000e+02
  %44 = select i1 %43, float %42, float 0x7FF0000000000000
  ret float %44
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_cbrtf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %4, float %6
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 127, i32 191
  %12 = sub nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 1
  %25 = sitofp i32 %24 to float
  %26 = fadd float %25, 6.144000e+03
  %27 = fmul float %26, 0x3FD5555560000000
  %28 = fptosi float %27 to i64
  %29 = trunc i64 %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 3.000000e+00
  %32 = fsub float %26, %31
  %33 = fptosi float %32 to i64
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, 1
  %36 = select i1 %35, float 0x3FF428A300000000, float 1.000000e+00
  %37 = icmp eq i32 %34, 2
  %38 = select i1 %37, float 0x3FF965FEA0000000, float %36
  %39 = add i32 %29, -2048
  %40 = ashr i32 %39, 1
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %38, %43
  %45 = sub i32 %39, %40
  %46 = shl i32 %45, 23
  %47 = add i32 %46, 1065353216
  %48 = bitcast i32 %47 to float
  %49 = fmul float %44, %48
  %50 = bitcast float %49 to i32
  %51 = bitcast float %23 to i32
  %52 = and i32 %51, -2147483648
  %53 = xor i32 %52, %50
  %54 = bitcast i32 %53 to float
  %55 = and i32 %51, 2147483647
  %56 = bitcast i32 %55 to float
  %57 = fmul float %56, 0x3FE3400420000000
  %58 = fsub float 0x4006912E60000000, %57
  %59 = fmul float %58, %56
  %60 = fadd float %59, 0xC01620F460000000
  %61 = fmul float %60, %56
  %62 = fadd float %61, 0x401797D220000000
  %63 = fmul float %62, %56
  %64 = fadd float %63, 0xC00E79F100000000
  %65 = fmul float %64, %56
  %66 = fadd float %65, 0x4001CB0260000000
  %67 = fmul float %66, %56
  %68 = fmul float %66, %67
  %69 = fmul float %68, 0x3FE5555560000000
  %70 = fmul float %66, %68
  %71 = fadd float %70, -1.000000e+00
  %72 = fmul float %69, %71
  %73 = fsub float %68, %72
  %74 = fmul float %73, %54
  ret float %74
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_cbrtf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_cbrtf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_logf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_logf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_powf1_u10purec(float, float) local_unnamed_addr #0 {
  %3 = tail call float @Sleef_powf1_u10purec(float %0, float %1)
  ret float %3
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_sinhf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_sinhf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_coshf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_coshf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_tanhf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_tanhf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_sinhf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = fcmp ogt float %5, 0.000000e+00
  %7 = select i1 %6, float 5.000000e-01, float -5.000000e-01
  %8 = fadd float %5, %7
  %9 = bitcast float %8 to i32
  %10 = fptosi float %8 to i32
  %11 = and i32 %10, 1
  %12 = sub i32 %9, %11
  %13 = bitcast i32 %12 to float
  %14 = fptosi float %13 to i32
  %15 = sitofp i32 %14 to float
  %16 = fmul float %15, 0x3FE62E4000000000
  %17 = fsub float %4, %16
  %18 = fmul float %15, 0x3EB7F7D1C0000000
  %19 = fsub float %17, %18
  %20 = fmul float %19, %19
  %21 = fmul float %20, %20
  %22 = insertelement <2 x float> undef, float %19, i32 0
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <2 x i32> zeroinitializer
  %24 = fmul <2 x float> %23, <float 0x3F2A057B40000000, float 0x3F811114C0000000>
  %25 = fadd <2 x float> %24, <float 0x3F56D2D920000000, float 0x3FA5554F40000000>
  %26 = fmul float %19, 0x3FC5555560000000
  %27 = fadd float %26, 5.000000e-01
  %28 = insertelement <2 x float> undef, float %21, i32 0
  %29 = insertelement <2 x float> %28, float %20, i32 1
  %30 = fmul <2 x float> %29, %25
  %31 = extractelement <2 x float> %30, i32 1
  %32 = fadd float %27, %31
  %33 = extractelement <2 x float> %30, i32 0
  %34 = fadd float %33, %32
  %35 = fmul float %20, %34
  %36 = fadd float %19, %35
  %37 = icmp eq i32 %14, 0
  %38 = fadd float %36, 1.000000e+00
  %39 = ashr i32 %14, 1
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = sub i32 %14, %39
  %45 = shl i32 %44, 23
  %46 = add i32 %45, 1065353216
  %47 = bitcast i32 %46 to float
  %48 = fmul float %43, %47
  %49 = fadd float %48, -1.000000e+00
  %50 = select i1 %37, float %36, float %49
  %51 = fadd float %50, 2.000000e+00
  %52 = fadd float %50, 1.000000e+00
  %53 = fdiv float %51, %52
  %54 = fmul float %50, 5.000000e-01
  %55 = fmul float %54, %53
  %56 = fcmp ule float %4, 8.800000e+01
  %57 = fcmp ord float %55, 0.000000e+00
  %58 = and i1 %56, %57
  %59 = bitcast float %55 to i32
  %60 = select i1 %58, i32 %59, i32 2139095040
  %61 = and i32 %2, -2147483648
  %62 = xor i32 %60, %61
  %63 = fcmp uno float %0, 0.000000e+00
  %64 = bitcast i32 %62 to float
  %65 = select i1 %63, float 0xFFFFFFFFE0000000, float %64
  ret float %65
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_coshf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = fcmp ogt float %5, 0.000000e+00
  %7 = select i1 %6, float 5.000000e-01, float -5.000000e-01
  %8 = fadd float %5, %7
  %9 = bitcast float %8 to i32
  %10 = fptosi float %8 to i32
  %11 = and i32 %10, 1
  %12 = sub i32 %9, %11
  %13 = bitcast i32 %12 to float
  %14 = fptosi float %13 to i32
  %15 = sitofp i32 %14 to float
  %16 = fmul float %15, 0x3FE62E4000000000
  %17 = fsub float %4, %16
  %18 = fmul float %15, 0x3EB7F7D1C0000000
  %19 = fsub float %17, %18
  %20 = fmul float %19, 0x3F2A057B40000000
  %21 = fadd float %20, 0x3F56D2D920000000
  %22 = fmul float %19, %21
  %23 = fadd float %22, 0x3F811114C0000000
  %24 = fmul float %19, %23
  %25 = fadd float %24, 0x3FA5554F40000000
  %26 = fmul float %19, %25
  %27 = fadd float %26, 0x3FC5555560000000
  %28 = fmul float %19, %27
  %29 = fadd float %28, 5.000000e-01
  %30 = fmul float %19, %19
  %31 = fmul float %30, %29
  %32 = fadd float %19, %31
  %33 = fadd float %32, 1.000000e+00
  %34 = ashr i32 %14, 1
  %35 = shl i32 %34, 23
  %36 = add i32 %35, 1065353216
  %37 = bitcast i32 %36 to float
  %38 = fmul float %33, %37
  %39 = sub i32 %14, %34
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = fcmp uge float %4, -1.040000e+02
  %45 = select i1 %44, float %43, float 0.000000e+00
  %46 = fcmp ule float %4, 1.000000e+02
  %47 = select i1 %46, float %45, float 0x7FF0000000000000
  %48 = fdiv float 5.000000e-01, %47
  %49 = fmul float %47, 5.000000e-01
  %50 = fadd float %49, %48
  %51 = fcmp ule float %4, 8.800000e+01
  %52 = fcmp ord float %50, 0.000000e+00
  %53 = and i1 %51, %52
  %54 = fcmp uno float %0, 0.000000e+00
  %55 = select i1 %53, float %50, float 0x7FF0000000000000
  %56 = select i1 %54, float 0xFFFFFFFFE0000000, float %55
  ret float %56
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_tanhf1_u35purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 2.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = select i1 %7, float 5.000000e-01, float -5.000000e-01
  %9 = fadd float %6, %8
  %10 = bitcast float %9 to i32
  %11 = fptosi float %9 to i32
  %12 = and i32 %11, 1
  %13 = sub i32 %10, %12
  %14 = bitcast i32 %13 to float
  %15 = fptosi float %14 to i32
  %16 = sitofp i32 %15 to float
  %17 = fmul float %16, 0x3FE62E4000000000
  %18 = fsub float %5, %17
  %19 = fmul float %16, 0x3EB7F7D1C0000000
  %20 = fsub float %18, %19
  %21 = fmul float %20, %20
  %22 = fmul float %21, %21
  %23 = insertelement <2 x float> undef, float %20, i32 0
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <2 x i32> zeroinitializer
  %25 = fmul <2 x float> %24, <float 0x3F2A057B40000000, float 0x3F811114C0000000>
  %26 = fadd <2 x float> %25, <float 0x3F56D2D920000000, float 0x3FA5554F40000000>
  %27 = fmul float %20, 0x3FC5555560000000
  %28 = fadd float %27, 5.000000e-01
  %29 = insertelement <2 x float> undef, float %22, i32 0
  %30 = insertelement <2 x float> %29, float %21, i32 1
  %31 = fmul <2 x float> %30, %26
  %32 = extractelement <2 x float> %31, i32 1
  %33 = fadd float %28, %32
  %34 = extractelement <2 x float> %31, i32 0
  %35 = fadd float %34, %33
  %36 = fmul float %21, %35
  %37 = fadd float %20, %36
  %38 = icmp eq i32 %15, 0
  %39 = fadd float %37, 1.000000e+00
  %40 = ashr i32 %15, 1
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %39, %43
  %45 = sub i32 %15, %40
  %46 = shl i32 %45, 23
  %47 = add i32 %46, 1065353216
  %48 = bitcast i32 %47 to float
  %49 = fmul float %44, %48
  %50 = fadd float %49, -1.000000e+00
  %51 = select i1 %38, float %37, float %50
  %52 = fadd float %51, 2.000000e+00
  %53 = fdiv float %51, %52
  %54 = fcmp ule float %4, 0x4021542460000000
  %55 = fcmp ord float %53, 0.000000e+00
  %56 = and i1 %54, %55
  %57 = bitcast float %53 to i32
  %58 = select i1 %56, i32 %57, i32 1065353216
  %59 = and i32 %2, -2147483648
  %60 = xor i32 %58, %59
  %61 = fcmp uno float %0, 0.000000e+00
  %62 = bitcast i32 %60 to float
  %63 = select i1 %61, float 0xFFFFFFFFE0000000, float %62
  ret float %63
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_asinhf1_u10purec(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_asinhf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_acoshf1_u10purec(float) local_unnamed_addr #1 {
  %2 = tail call float @Sleef_acoshf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_atanhf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_atanhf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_exp2f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = select i1 %2, float 5.000000e-01, float -5.000000e-01
  %4 = fadd float %3, %0
  %5 = bitcast float %4 to i32
  %6 = fptosi float %4 to i32
  %7 = and i32 %6, 1
  %8 = sub i32 %5, %7
  %9 = bitcast i32 %8 to float
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = icmp sgt i32 %10, 0
  %13 = select i1 %12, float 5.000000e-01, float -5.000000e-01
  %14 = fadd float %13, %11
  %15 = bitcast float %14 to i32
  %16 = fptosi float %14 to i32
  %17 = and i32 %16, 1
  %18 = sub i32 %15, %17
  %19 = bitcast i32 %18 to float
  %20 = fptosi float %19 to i32
  %21 = fsub float %0, %11
  %22 = fmul float %21, 0x3F2421B200000000
  %23 = fadd float %22, 0x3F55F14660000000
  %24 = fmul float %21, %23
  %25 = fadd float %24, 0x3F83B2CDC0000000
  %26 = fmul float %21, %25
  %27 = fadd float %26, 0x3FAC6AF380000000
  %28 = fmul float %21, %27
  %29 = fadd float %28, 0x3FCEBFBD80000000
  %30 = fmul float %21, %29
  %31 = fadd float %30, 0x3FE62E4300000000
  %32 = bitcast float %31 to i32
  %33 = and i32 %32, -4096
  %34 = bitcast i32 %33 to float
  %35 = fsub float %31, %34
  %36 = bitcast float %21 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %21, %38
  %40 = fmul float %21, %31
  %41 = fmul float %38, %34
  %42 = fsub float %41, %40
  %43 = fmul float %35, %38
  %44 = fadd float %43, %42
  %45 = fmul float %39, %34
  %46 = fadd float %45, %44
  %47 = fmul float %39, %35
  %48 = fadd float %47, %46
  %49 = fadd float %40, 1.000000e+00
  %50 = fsub float 1.000000e+00, %49
  %51 = fadd float %40, %50
  %52 = fadd float %51, %48
  %53 = fadd float %49, %52
  %54 = ashr i32 %20, 1
  %55 = shl i32 %54, 23
  %56 = add i32 %55, 1065353216
  %57 = bitcast i32 %56 to float
  %58 = fmul float %53, %57
  %59 = sub i32 %20, %54
  %60 = shl i32 %59, 23
  %61 = add i32 %60, 1065353216
  %62 = bitcast i32 %61 to float
  %63 = fmul float %58, %62
  %64 = fcmp ult float %0, 1.280000e+02
  %65 = fcmp olt float %0, -1.500000e+02
  %66 = select i1 %64, float %63, float 0x7FF0000000000000
  %67 = select i1 %65, float 0.000000e+00, float %66
  ret float %67
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_exp2f1_u35purec(float) local_unnamed_addr #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = select i1 %2, float 5.000000e-01, float -5.000000e-01
  %4 = fadd float %3, %0
  %5 = bitcast float %4 to i32
  %6 = fptosi float %4 to i32
  %7 = and i32 %6, 1
  %8 = sub i32 %5, %7
  %9 = bitcast i32 %8 to float
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = icmp sgt i32 %10, 0
  %13 = select i1 %12, float 5.000000e-01, float -5.000000e-01
  %14 = fadd float %13, %11
  %15 = bitcast float %14 to i32
  %16 = fptosi float %14 to i32
  %17 = and i32 %16, 1
  %18 = sub i32 %15, %17
  %19 = bitcast i32 %18 to float
  %20 = fptosi float %19 to i32
  %21 = fsub float %0, %11
  %22 = fmul float %21, 0x3F2421B200000000
  %23 = fadd float %22, 0x3F55F14660000000
  %24 = fmul float %21, %23
  %25 = fadd float %24, 0x3F83B2CDC0000000
  %26 = fmul float %21, %25
  %27 = fadd float %26, 0x3FAC6AF380000000
  %28 = fmul float %21, %27
  %29 = fadd float %28, 0x3FCEBFBD80000000
  %30 = fmul float %21, %29
  %31 = fadd float %30, 0x3FE62E4300000000
  %32 = fmul float %21, %31
  %33 = fadd float %32, 1.000000e+00
  %34 = ashr i32 %20, 1
  %35 = shl i32 %34, 23
  %36 = add i32 %35, 1065353216
  %37 = bitcast i32 %36 to float
  %38 = fmul float %33, %37
  %39 = sub i32 %20, %34
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = fcmp ult float %0, 1.280000e+02
  %45 = fcmp olt float %0, -1.500000e+02
  %46 = select i1 %44, float %43, float 0x7FF0000000000000
  %47 = select i1 %45, float 0.000000e+00, float %46
  ret float %47
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_exp10f1_u10purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = icmp sgt i32 %11, 0
  %14 = select i1 %13, float 5.000000e-01, float -5.000000e-01
  %15 = fadd float %14, %12
  %16 = bitcast float %15 to i32
  %17 = fptosi float %15 to i32
  %18 = and i32 %17, 1
  %19 = sub i32 %16, %18
  %20 = bitcast i32 %19 to float
  %21 = fptosi float %20 to i32
  %22 = fmul float %12, 0x3FD3440000000000
  %23 = fsub float %0, %22
  %24 = fmul float %12, 0x3ED3509F80000000
  %25 = fsub float %23, %24
  %26 = fmul float %25, 0x3FB16A1F80000000
  %27 = fadd float %26, 0x3FCA997420000000
  %28 = fmul float %25, %27
  %29 = fadd float %28, 0x3FE142AFA0000000
  %30 = fmul float %25, %29
  %31 = fadd float %30, 0x3FF2BD6BC0000000
  %32 = fmul float %25, %31
  %33 = fadd float %32, 0x40004705A0000000
  %34 = fmul float %25, %33
  %35 = fadd float %34, 0x40053524C0000000
  %36 = fmul float %25, %35
  %37 = fadd float %36, 0x40026BB1C0000000
  %38 = fsub float 0x40026BB1C0000000, %37
  %39 = fadd float %36, %38
  %40 = fadd float %39, 0xBE610586A0000000
  %41 = bitcast float %37 to i32
  %42 = and i32 %41, -4096
  %43 = bitcast i32 %42 to float
  %44 = fsub float %37, %43
  %45 = bitcast float %25 to i32
  %46 = and i32 %45, -4096
  %47 = bitcast i32 %46 to float
  %48 = fsub float %25, %47
  %49 = fmul float %25, %37
  %50 = fmul float %47, %43
  %51 = fsub float %50, %49
  %52 = fmul float %44, %47
  %53 = fadd float %52, %51
  %54 = fmul float %48, %43
  %55 = fadd float %54, %53
  %56 = fmul float %48, %44
  %57 = fadd float %56, %55
  %58 = fmul float %25, %40
  %59 = fadd float %58, %57
  %60 = fadd float %49, 1.000000e+00
  %61 = fsub float 1.000000e+00, %60
  %62 = fadd float %49, %61
  %63 = fadd float %62, %59
  %64 = fadd float %60, %63
  %65 = ashr i32 %21, 1
  %66 = shl i32 %65, 23
  %67 = add i32 %66, 1065353216
  %68 = bitcast i32 %67 to float
  %69 = fmul float %64, %68
  %70 = sub i32 %21, %65
  %71 = shl i32 %70, 23
  %72 = add i32 %71, 1065353216
  %73 = bitcast i32 %72 to float
  %74 = fmul float %69, %73
  %75 = fcmp ule float %0, 0x4043441360000000
  %76 = fcmp olt float %0, -5.000000e+01
  %77 = select i1 %75, float %74, float 0x7FF0000000000000
  %78 = select i1 %76, float 0.000000e+00, float %77
  ret float %78
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_exp10f1_u35purec(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = fcmp ogt float %2, 0.000000e+00
  %4 = select i1 %3, float 5.000000e-01, float -5.000000e-01
  %5 = fadd float %2, %4
  %6 = bitcast float %5 to i32
  %7 = fptosi float %5 to i32
  %8 = and i32 %7, 1
  %9 = sub i32 %6, %8
  %10 = bitcast i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = icmp sgt i32 %11, 0
  %14 = select i1 %13, float 5.000000e-01, float -5.000000e-01
  %15 = fadd float %14, %12
  %16 = bitcast float %15 to i32
  %17 = fptosi float %15 to i32
  %18 = and i32 %17, 1
  %19 = sub i32 %16, %18
  %20 = bitcast i32 %19 to float
  %21 = fptosi float %20 to i32
  %22 = fmul float %12, 0x3FD3440000000000
  %23 = fsub float %0, %22
  %24 = fmul float %12, 0x3ED3509F80000000
  %25 = fsub float %23, %24
  %26 = fmul float %25, 0x3FCA6B54E0000000
  %27 = fadd float %26, 0x3FE1565340000000
  %28 = fmul float %25, %27
  %29 = fadd float %28, 0x3FF2BD9740000000
  %30 = fmul float %25, %29
  %31 = fadd float %30, 0x400046F9C0000000
  %32 = fmul float %25, %31
  %33 = fadd float %32, 0x40053524A0000000
  %34 = fmul float %25, %33
  %35 = fadd float %34, 0x40026BB1C0000000
  %36 = fmul float %25, %35
  %37 = fadd float %36, 1.000000e+00
  %38 = ashr i32 %21, 1
  %39 = shl i32 %38, 23
  %40 = add i32 %39, 1065353216
  %41 = bitcast i32 %40 to float
  %42 = fmul float %37, %41
  %43 = sub i32 %21, %38
  %44 = shl i32 %43, 23
  %45 = add i32 %44, 1065353216
  %46 = bitcast i32 %45 to float
  %47 = fmul float %42, %46
  %48 = fcmp ule float %0, 0x4043441360000000
  %49 = fcmp olt float %0, -5.000000e+01
  %50 = select i1 %48, float %47, float 0x7FF0000000000000
  %51 = select i1 %49, float 0.000000e+00, float %50
  ret float %51
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_expm1f1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_expm1f1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_log10f1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_log10f1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_log2f1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_log2f1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_log2f1_u35purec(float) local_unnamed_addr #0 {
  %2 = fcmp uge float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %0, float %3
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -127, i32 -191
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %13, 1.000000e+00
  %18 = fdiv float %16, %17
  %19 = fmul float %18, %18
  %20 = fmul float %19, 0x3FDBFE81A0000000
  %21 = fadd float %20, 0x3FE2728F60000000
  %22 = fmul float %19, %21
  %23 = fadd float %22, 0x3FEEC715E0000000
  %24 = fmul float %18, %19
  %25 = sitofp i32 %15 to float
  %26 = fmul float %18, 0x4007154760000000
  %27 = fadd float %26, %25
  %28 = fmul float %24, %23
  %29 = fadd float %27, %28
  %30 = fcmp une float %4, 0x7FF0000000000000
  %31 = select i1 %30, float %29, float 0x7FF0000000000000
  %32 = fcmp oge float %4, 0.000000e+00
  %33 = select i1 %32, float %31, float 0x7FF8000000000000
  %34 = fcmp une float %4, 0.000000e+00
  %35 = select i1 %34, float %33, float 0xFFF0000000000000
  ret float %35
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_log1pf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_log1pf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fabsf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  ret float %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_copysignf1_purec(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, -2147483648
  %7 = or i32 %6, %4
  %8 = bitcast i32 %7 to float
  ret float %8
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fmaxf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp ogt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fminf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fcmp ord float %1, 0.000000e+00
  %4 = fcmp olt float %0, %1
  %5 = select i1 %4, float %0, float %1
  %6 = select i1 %3, float %5, float %0
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fdimf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fsub float %0, %1
  %4 = fcmp uge float %3, 0.000000e+00
  %5 = fcmp une float %0, %1
  %6 = and i1 %5, %4
  %7 = select i1 %6, float %3, float 0.000000e+00
  ret float %7
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_truncf1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp oeq float %0, 0x7FF0000000000000
  %7 = fcmp oeq float %0, 0xFFF0000000000000
  %8 = or i1 %6, %7
  %9 = bitcast float %0 to i32
  %10 = and i32 %9, 2147483647
  %11 = bitcast i32 %10 to float
  %12 = fcmp oge float %11, 0x4160000000000000
  %13 = or i1 %8, %12
  %14 = fsub float %0, %5
  %15 = bitcast float %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = and i32 %9, -2147483648
  %18 = or i32 %16, %17
  %19 = bitcast i32 %18 to float
  %20 = select i1 %13, float %0, float %19
  ret float %20
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_floorf1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp uge float %5, 0.000000e+00
  %7 = fadd float %5, 1.000000e+00
  %8 = select i1 %6, float %5, float %7
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_ceilf1_purec(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %0, %4
  %6 = fcmp ugt float %5, 0.000000e+00
  %7 = fadd float %5, -1.000000e+00
  %8 = select i1 %6, float %7, float %5
  %9 = fcmp oeq float %0, 0x7FF0000000000000
  %10 = fcmp oeq float %0, 0xFFF0000000000000
  %11 = or i1 %9, %10
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp oge float %14, 0x4160000000000000
  %16 = or i1 %11, %15
  %17 = fsub float %0, %8
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  %23 = select i1 %16, float %0, float %22
  ret float %23
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_roundf1_purec(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 5.000000e-01
  %3 = fptosi float %2 to i64
  %4 = trunc i64 %3 to i32
  %5 = sitofp i32 %4 to float
  %6 = fsub float %2, %5
  %7 = fcmp ugt float %2, 0.000000e+00
  %8 = fcmp une float %6, 0.000000e+00
  %9 = fadd float %2, -1.000000e+00
  %10 = or i1 %7, %8
  %11 = select i1 %10, float %2, float %9
  %12 = fcmp uge float %6, 0.000000e+00
  %13 = fadd float %6, 1.000000e+00
  %14 = select i1 %12, float %6, float %13
  %15 = fcmp une float %0, 0x3FDFFFFFE0000000
  %16 = select i1 %15, float %11, float 0.000000e+00
  %17 = fcmp oeq float %0, 0x7FF0000000000000
  %18 = fcmp oeq float %0, 0xFFF0000000000000
  %19 = or i1 %17, %18
  %20 = bitcast float %0 to i32
  %21 = and i32 %20, 2147483647
  %22 = bitcast i32 %21 to float
  %23 = fcmp oge float %22, 0x4160000000000000
  %24 = or i1 %19, %23
  %25 = fsub float %16, %14
  %26 = bitcast float %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = and i32 %20, -2147483648
  %29 = or i32 %27, %28
  %30 = bitcast i32 %29 to float
  %31 = select i1 %24, float %0, float %30
  ret float %31
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_rintf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, -2147483648
  %4 = or i32 %3, 1258291200
  %5 = bitcast i32 %4 to float
  %6 = and i32 %2, 2147483647
  %7 = bitcast i32 %6 to float
  %8 = fcmp ule float %7, 0x4160000000000000
  %9 = fadd float %5, %0
  %10 = fsub float %9, %5
  %11 = bitcast float %10 to i32
  %12 = or i32 %3, %11
  %13 = bitcast i32 %12 to float
  %14 = select i1 %8, float %13, float %0
  ret float %14
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fmaf1_purec(float, float, float) local_unnamed_addr #0 {
  %4 = fmul float %0, %1
  %5 = fadd float %4, %2
  %6 = bitcast float %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp uge float %8, 0x380B38FB80000000
  %10 = insertelement <2 x float> undef, float %1, i32 0
  %11 = insertelement <2 x float> %10, float %0, i32 1
  %12 = fmul <2 x float> %11, <float 0x4310000000000000, float 0x4310000000000000>
  %13 = insertelement <2 x i1> undef, i1 %9, i32 0
  %14 = shufflevector <2 x i1> %13, <2 x i1> undef, <2 x i32> zeroinitializer
  %15 = select <2 x i1> %14, <2 x float> %11, <2 x float> %12
  %16 = fmul float %2, 0x4630000000000000
  %17 = select i1 %9, float %2, float %16
  %18 = select i1 %9, float 1.000000e+00, float 0x39B0000000000000
  %19 = fcmp ule float %8, 0x47D2CED320000000
  %20 = fmul <2 x float> %15, <float 0x3CD0000000000000, float 0x3CD0000000000000>
  %21 = insertelement <2 x i1> undef, i1 %19, i32 0
  %22 = shufflevector <2 x i1> %21, <2 x i1> undef, <2 x i32> zeroinitializer
  %23 = select <2 x i1> %22, <2 x float> %15, <2 x float> %20
  %24 = fmul float %17, 0x39B0000000000000
  %25 = select i1 %19, float %17, float %24
  %26 = select i1 %19, float %18, float 0x4630000000000000
  %27 = bitcast <2 x float> %23 to <2 x i32>
  %28 = and <2 x i32> %27, <i32 -4096, i32 -4096>
  %29 = bitcast <2 x i32> %28 to <2 x float>
  %30 = fsub <2 x float> %23, %29
  %31 = extractelement <2 x float> %23, i32 0
  %32 = extractelement <2 x float> %23, i32 1
  %33 = fmul float %32, %31
  %34 = extractelement <2 x float> %29, i32 0
  %35 = extractelement <2 x float> %29, i32 1
  %36 = fmul float %35, %34
  %37 = fsub float %36, %33
  %38 = shufflevector <2 x float> %29, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %39 = fmul <2 x float> %30, %38
  %40 = extractelement <2 x float> %39, i32 1
  %41 = fadd float %40, %37
  %42 = extractelement <2 x float> %39, i32 0
  %43 = fadd float %42, %41
  %44 = extractelement <2 x float> %30, i32 0
  %45 = extractelement <2 x float> %30, i32 1
  %46 = fmul float %45, %44
  %47 = fadd float %46, %43
  %48 = fadd float %25, %33
  %49 = fsub float %48, %33
  %50 = fsub float %48, %49
  %51 = fsub float %33, %50
  %52 = fsub float %25, %49
  %53 = fadd float %52, %51
  %54 = fadd float %53, %47
  %55 = fcmp une float %32, 0.000000e+00
  %56 = fcmp une float %31, 0.000000e+00
  %57 = fadd float %48, %54
  %58 = and i1 %55, %56
  %59 = select i1 %58, float %57, float %25
  %60 = fcmp oeq float %25, 0x7FF0000000000000
  %61 = fcmp oeq float %25, 0xFFF0000000000000
  %62 = or i1 %60, %61
  %63 = fcmp une float %32, 0x7FF0000000000000
  %64 = fcmp une float %32, 0xFFF0000000000000
  %65 = and i1 %64, %63
  %66 = and i1 %65, %62
  %67 = fcmp ord float %32, 0.000000e+00
  %68 = and i1 %67, %66
  %69 = fcmp une float %31, 0x7FF0000000000000
  %70 = fcmp une float %31, 0xFFF0000000000000
  %71 = and i1 %70, %69
  %72 = and i1 %71, %68
  %73 = fcmp ord float %31, 0.000000e+00
  %74 = and i1 %73, %72
  %75 = select i1 %74, float %25, float %5
  %76 = fcmp oeq float %75, 0x7FF0000000000000
  %77 = fcmp oeq float %75, 0xFFF0000000000000
  %78 = or i1 %76, %77
  %79 = fcmp uno float %75, 0.000000e+00
  %80 = or i1 %79, %78
  %81 = fmul float %26, %59
  %82 = select i1 %80, float %75, float %81
  ret float %82
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_hypotf1_u05purec(float, float) local_unnamed_addr #1 {
  %3 = tail call float @Sleef_hypotf1_u05purec(float %0, float %1)
  ret float %3
}

; Function Attrs: nounwind uwtable
define float @Sleef_cinz_hypotf1_u35purec(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fdiv float %10, %12
  %14 = fmul float %13, %13
  %15 = fadd float %14, 1.000000e+00
  %16 = tail call float @sqrtf(float %15) #3
  %17 = fmul float %12, %16
  %18 = fcmp une float %10, 0.000000e+00
  %19 = select i1 %18, float %17, float %12
  %20 = fcmp ord float %8, %5
  %21 = select i1 %20, float %19, float 0x7FF8000000000000
  %22 = fcmp une float %5, 0x7FF0000000000000
  %23 = fcmp une float %8, 0x7FF0000000000000
  %24 = and i1 %22, %23
  %25 = select i1 %24, float %21, float 0x7FF0000000000000
  ret float %25
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_nextafterf1_purec(float, float) local_unnamed_addr #0 {
  %3 = fcmp une float %0, 0.000000e+00
  %4 = bitcast float %1 to i32
  %5 = and i32 %4, -2147483648
  %6 = bitcast i32 %5 to float
  %7 = select i1 %3, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = zext i32 %8 to i64
  %10 = ashr i32 %8, 31
  %11 = fcmp ole float %7, %1
  %12 = sext i1 %11 to i32
  %13 = xor i64 %9, 2147483648
  %14 = sub nsw i64 0, %13
  %15 = and i64 %14, 4294967295
  %16 = or i64 %15, 4294967296
  %17 = icmp eq i32 %10, %12
  %18 = select i1 %17, i64 %9, i64 %16
  %19 = fcmp oeq float %7, %1
  %20 = add nuw nsw i64 %18, 4294967295
  %21 = and i64 %18, 4294967296
  %22 = and i64 %20, 4294967295
  %23 = or i64 %22, %21
  %24 = select i1 %19, i64 %18, i64 %23
  %25 = xor i64 %24, 2147483648
  %26 = sub nsw i64 0, %25
  %27 = select i1 %17, i64 %24, i64 %26
  %28 = trunc i64 %27 to i32
  %29 = bitcast i32 %28 to float
  %30 = fcmp une float %29, 0.000000e+00
  %31 = fcmp oeq float %7, 0.000000e+00
  %32 = and i32 %8, -2147483648
  %33 = bitcast i32 %32 to float
  %34 = or i1 %31, %30
  %35 = select i1 %34, float %29, float %33
  %36 = fcmp une float %7, 0.000000e+00
  %37 = fcmp une float %1, 0.000000e+00
  %38 = or i1 %37, %36
  %39 = select i1 %38, float %35, float %1
  %40 = fcmp ord float %7, %1
  %41 = select i1 %40, float %39, float 0x7FF8000000000000
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_frfrexpf1_purec(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp uge float %4, 0x3810000000000000
  %6 = fmul float %0, 0x41D0000000000000
  %7 = select i1 %5, float %0, float %6
  %8 = bitcast float %7 to i32
  %9 = and i32 %8, -2139095041
  %10 = or i32 %9, 1056964608
  %11 = fcmp une float %7, 0x7FF0000000000000
  %12 = fcmp une float %7, 0xFFF0000000000000
  %13 = and i32 %8, -2147483648
  %14 = or i32 %13, 2139095040
  %15 = and i1 %12, %11
  %16 = select i1 %15, i32 %10, i32 %14
  %17 = bitcast i32 %16 to float
  %18 = fcmp une float %7, 0.000000e+00
  %19 = select i1 %18, float %17, float %7
  ret float %19
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fmodf1_purec(float, float) local_unnamed_addr #0 {
  %3 = tail call float @Sleef_fmodf1_purec(float %0, float %1)
  ret float %3
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_remainderf1_purec(float, float) local_unnamed_addr #0 {
  %3 = tail call float @Sleef_remainderf1_purec(float %0, float %1)
  ret float %3
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_sinpif1_u05purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_sinpif1_u05purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_cospif1_u05purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_cospif1_u05purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_tgammaf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_tgammaf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_lgammaf1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_lgammaf1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_erff1_u10purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_erff1_u10purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_erfcf1_u15purec(float) local_unnamed_addr #0 {
  %2 = tail call float @Sleef_erfcf1_u15purec(float %0)
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cinz_fastpowf1_u3500purec(float, float) local_unnamed_addr #0 {
  %3 = tail call float @Sleef_fastpowf1_u3500purec(float %0, float %1)
  ret float %3
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @Sleef_getIntf1_purec(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 10
  %4 = sext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define i8* @Sleef_getPtrf1_purec(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* null
  ret i8* %3
}

; Function Attrs: nounwind
declare float @sqrtf(float) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !4, i64 0}
!4 = !{!"float", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
