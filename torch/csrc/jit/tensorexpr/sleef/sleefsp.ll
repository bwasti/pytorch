; ModuleID = '/home/bwasti/pytorch/sleef/src/libm/sleefsp.c'
source_filename = "/home/bwasti/pytorch/sleef/src/libm/sleefsp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@rempitabsp = external local_unnamed_addr constant [0 x float], align 4

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @Sleef_ilogbf(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %6, float %4
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 -191, i32 -127
  %12 = add nsw i32 %10, %11
  %13 = fcmp oeq float %0, 0.000000e+00
  %14 = select i1 %13, i32 -2147483648, i32 %12
  %15 = fcmp uno float %0, 0.000000e+00
  %16 = fcmp oeq float %0, 0x7FF0000000000000
  %17 = fcmp oeq float %0, 0xFFF0000000000000
  %18 = or i1 %16, %17
  %19 = or i1 %15, %18
  %20 = select i1 %19, i32 2147483647, i32 %14
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %21

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fcmp olt float %7, 0.000000e+00
  %9 = select i1 %8, float -5.000000e-01, float 5.000000e-01
  %10 = fadd float %7, %9
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fptosi float %12 to i32
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 0x400921C000000000
  %16 = fsub float %0, %15
  %17 = fmul float %14, 0x3F1DAA0000000000
  %18 = fsub float %16, %17
  %19 = fmul float %14, 0x3E210B4620000000
  %20 = fsub float %18, %19
  br label %83

; <label>:21:                                     ; preds = %1
  %22 = fcmp olt float %4, 3.900000e+04
  br i1 %22, label %23, label %40

; <label>:23:                                     ; preds = %21
  %24 = fmul float %0, 0x3FD45F3060000000
  %25 = fcmp olt float %24, 0.000000e+00
  %26 = select i1 %25, float -5.000000e-01, float 5.000000e-01
  %27 = fadd float %24, %26
  %28 = fptosi float %27 to i32
  %29 = sitofp i32 %28 to float
  %30 = fptosi float %29 to i32
  %31 = sitofp i32 %30 to float
  %32 = fmul float %31, 0x4009200000000000
  %33 = fsub float %0, %32
  %34 = fmul float %31, 0x3F4FB00000000000
  %35 = fsub float %33, %34
  %36 = fmul float %31, 0x3EA5100000000000
  %37 = fsub float %35, %36
  %38 = fmul float %31, 0x3DE0B46120000000
  %39 = fsub float %37, %38
  br label %83

; <label>:40:                                     ; preds = %21
  %41 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %42 = extractvalue { <2 x float>, i32 } %41, 0
  %43 = extractvalue { <2 x float>, i32 } %41, 1
  %44 = shl i32 %43, 1
  %45 = and i32 %44, 6
  %46 = extractelement <2 x float> %42, i32 0
  %47 = fcmp ogt float %46, 0.000000e+00
  %48 = zext i1 %47 to i32
  %49 = or i32 %45, %48
  %50 = add nuw nsw i32 %49, 1
  %51 = lshr i32 %50, 2
  %52 = and i32 %43, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %72, label %54

; <label>:54:                                     ; preds = %40
  %55 = bitcast float %46 to i32
  %56 = and i32 %55, -2147483648
  %57 = xor i32 %56, -1077342245
  %58 = bitcast i32 %57 to float
  %59 = or i32 %56, 859553070
  %60 = bitcast i32 %59 to float
  %61 = fadd float %46, %58
  %62 = fsub float %61, %46
  %63 = fsub float %61, %62
  %64 = fsub float %46, %63
  %65 = fsub float %58, %62
  %66 = fadd float %65, %64
  %67 = extractelement <2 x float> %42, i32 1
  %68 = fadd float %67, %60
  %69 = fadd float %68, %66
  %70 = insertelement <2 x float> undef, float %61, i32 0
  %71 = insertelement <2 x float> %70, float %69, i32 1
  br label %72

; <label>:72:                                     ; preds = %40, %54
  %73 = phi <2 x float> [ %71, %54 ], [ %42, %40 ]
  %74 = fcmp une float %0, 0x7FF0000000000000
  %75 = fcmp une float %0, 0xFFF0000000000000
  %76 = and i1 %75, %74
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %72
  %78 = extractelement <2 x float> %73, i32 0
  %79 = extractelement <2 x float> %73, i32 1
  %80 = fadd float %78, %79
  %81 = fcmp ord float %0, 0.000000e+00
  br i1 %81, label %83, label %82

; <label>:82:                                     ; preds = %77, %72
  br label %83

; <label>:83:                                     ; preds = %82, %77, %23, %6
  %84 = phi i32 [ %13, %6 ], [ %30, %23 ], [ %51, %77 ], [ %51, %82 ]
  %85 = phi float [ %20, %6 ], [ %39, %23 ], [ %80, %77 ], [ 0x7FF8000000000000, %82 ]
  %86 = fmul float %85, %85
  %87 = and i32 %84, 1
  %88 = icmp eq i32 %87, 0
  %89 = fsub float -0.000000e+00, %85
  %90 = select i1 %88, float %85, float %89
  %91 = fmul float %86, 0x3EC5E150E0000000
  %92 = fadd float %91, 0xBF29F75D60000000
  %93 = fmul float %86, %92
  %94 = fadd float %93, 0x3F8110EEE0000000
  %95 = fmul float %86, %94
  %96 = fadd float %95, 0xBFC55554C0000000
  %97 = fmul float %90, %96
  %98 = fmul float %86, %97
  %99 = fadd float %90, %98
  %100 = icmp eq i32 %2, -2147483648
  %101 = select i1 %100, float -0.000000e+00, float %99
  ret float %101
}

; Function Attrs: norecurse nounwind readnone uwtable
define internal fastcc { <2 x float>, i32 } @rempif(float) unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = lshr i32 %2, 23
  %4 = and i32 %3, 255
  %5 = icmp ugt i32 %4, 217
  %6 = select i1 %5, i32 -536870912, i32 0
  %7 = add nsw i32 %6, %2
  %8 = bitcast i32 %7 to float
  %9 = icmp ult i32 %4, 152
  %10 = shl nuw nsw i32 %4, 2
  %11 = add nsw i32 %10, -608
  %12 = select i1 %9, i32 0, i32 %11
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !2
  %16 = and i32 %7, -4096
  %17 = bitcast i32 %16 to float
  %18 = fsub float %8, %17
  %19 = bitcast float %15 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %15, %21
  %23 = fmul float %15, %8
  %24 = fmul float %17, %21
  %25 = fsub float %24, %23
  %26 = fmul float %18, %21
  %27 = fadd float %26, %25
  %28 = fmul float %22, %17
  %29 = fadd float %28, %27
  %30 = fmul float %18, %22
  %31 = fadd float %30, %29
  %32 = fmul float %23, 0x3F50000000000000
  %33 = fptosi float %32 to i32
  %34 = sitofp i32 %33 to float
  %35 = fmul float %34, 1.024000e+03
  %36 = fsub float %23, %35
  %37 = fcmp ogt float %23, 0.000000e+00
  %38 = select i1 %37, i32 4, i32 3
  %39 = fmul float %36, 8.000000e+00
  %40 = fptosi float %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = and i32 %41, 7
  %43 = add nsw i32 %42, -3
  %44 = ashr i32 %43, 1
  %45 = fmul float %36, 4.000000e+00
  %46 = bitcast float %23 to i32
  %47 = and i32 %46, -2147483648
  %48 = or i32 %47, 1056964608
  %49 = bitcast i32 %48 to float
  %50 = fadd float %45, %49
  %51 = fptosi float %50 to i32
  %52 = sitofp i32 %51 to float
  %53 = fmul float %52, 2.500000e-01
  %54 = fsub float %36, %53
  %55 = bitcast float %54 to i32
  %56 = and i32 %55, 2147483647
  %57 = bitcast i32 %56 to float
  %58 = fcmp ogt float %57, 1.250000e-01
  %59 = fsub float %54, %49
  %60 = select i1 %58, float %59, float %54
  %61 = bitcast float %60 to i32
  %62 = and i32 %61, 2147483647
  %63 = bitcast i32 %62 to float
  %64 = fcmp ogt float %63, 1.000000e+10
  %65 = select i1 %64, float 0.000000e+00, float %60
  %66 = and i32 %46, 2147483647
  %67 = bitcast i32 %66 to float
  %68 = fcmp oeq float %67, 0x3FBFFFFFE0000000
  %69 = select i1 %68, float %23, float %65
  %70 = select i1 %68, i32 0, i32 %44
  %71 = fadd float %31, %69
  %72 = fsub float %69, %71
  %73 = fadd float %31, %72
  %74 = or i32 %12, 1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = bitcast float %77 to i32
  %79 = and i32 %78, -4096
  %80 = bitcast i32 %79 to float
  %81 = fsub float %77, %80
  %82 = fmul float %77, %8
  %83 = fmul float %17, %80
  %84 = fsub float %83, %82
  %85 = fmul float %18, %80
  %86 = fadd float %85, %84
  %87 = fmul float %81, %17
  %88 = fadd float %87, %86
  %89 = fmul float %18, %81
  %90 = fadd float %89, %88
  %91 = fadd float %82, %71
  %92 = fsub float %91, %71
  %93 = fsub float %91, %92
  %94 = fsub float %71, %93
  %95 = fsub float %82, %92
  %96 = fadd float %95, %94
  %97 = fadd float %90, %73
  %98 = fadd float %97, %96
  %99 = fmul float %91, 0x3F50000000000000
  %100 = fptosi float %99 to i32
  %101 = sitofp i32 %100 to float
  %102 = fmul float %101, 1.024000e+03
  %103 = fsub float %91, %102
  %104 = fcmp ogt float %91, 0.000000e+00
  %105 = select i1 %104, i32 4, i32 3
  %106 = fmul float %103, 8.000000e+00
  %107 = fptosi float %106 to i32
  %108 = add nsw i32 %105, %107
  %109 = and i32 %108, 7
  %110 = add nsw i32 %109, -3
  %111 = ashr i32 %110, 1
  %112 = fmul float %103, 4.000000e+00
  %113 = bitcast float %91 to i32
  %114 = and i32 %113, -2147483648
  %115 = or i32 %114, 1056964608
  %116 = bitcast i32 %115 to float
  %117 = fadd float %112, %116
  %118 = fptosi float %117 to i32
  %119 = sitofp i32 %118 to float
  %120 = fmul float %119, 2.500000e-01
  %121 = fsub float %103, %120
  %122 = bitcast float %121 to i32
  %123 = and i32 %122, 2147483647
  %124 = bitcast i32 %123 to float
  %125 = fcmp ogt float %124, 1.250000e-01
  %126 = fsub float %121, %116
  %127 = select i1 %125, float %126, float %121
  %128 = bitcast float %127 to i32
  %129 = and i32 %128, 2147483647
  %130 = bitcast i32 %129 to float
  %131 = fcmp ogt float %130, 1.000000e+10
  %132 = select i1 %131, float 0.000000e+00, float %127
  %133 = and i32 %113, 2147483647
  %134 = bitcast i32 %133 to float
  %135 = fcmp oeq float %134, 0x3FBFFFFFE0000000
  %136 = select i1 %135, float %91, float %132
  %137 = select i1 %135, i32 0, i32 %111
  %138 = add nsw i32 %137, %70
  %139 = fadd float %98, %136
  %140 = fsub float %136, %139
  %141 = fadd float %98, %140
  %142 = or i32 %12, 2
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %143
  %145 = load float, float* %144, align 4, !tbaa !2
  %146 = or i32 %12, 3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [0 x float], [0 x float]* @rempitabsp, i64 0, i64 %147
  %149 = load float, float* %148, align 4, !tbaa !2
  %150 = bitcast float %145 to i32
  %151 = and i32 %150, -4096
  %152 = bitcast i32 %151 to float
  %153 = fsub float %145, %152
  %154 = fmul float %145, %8
  %155 = fmul float %17, %152
  %156 = fsub float %155, %154
  %157 = fmul float %153, %17
  %158 = fadd float %156, %157
  %159 = fmul float %18, %152
  %160 = fadd float %159, %158
  %161 = fmul float %18, %153
  %162 = fadd float %161, %160
  %163 = fmul float %149, %8
  %164 = fadd float %163, %162
  %165 = fadd float %154, %139
  %166 = fsub float %165, %139
  %167 = fsub float %165, %166
  %168 = fsub float %139, %167
  %169 = fsub float %154, %166
  %170 = fadd float %169, %168
  %171 = fadd float %164, %141
  %172 = fadd float %171, %170
  %173 = fadd float %165, %172
  %174 = fsub float %165, %173
  %175 = fadd float %172, %174
  %176 = bitcast float %173 to i32
  %177 = and i32 %176, -4096
  %178 = bitcast i32 %177 to float
  %179 = fsub float %173, %178
  %180 = fmul float %173, 0x401921FB60000000
  %181 = fmul float %178, 6.281250e+00
  %182 = fsub float %181, %180
  %183 = fmul float %179, 6.281250e+00
  %184 = fadd float %183, %182
  %185 = fmul float %178, 0x3F5FB60000000000
  %186 = fadd float %185, %184
  %187 = fmul float %179, 0x3F5FB60000000000
  %188 = fadd float %187, %186
  %189 = fmul float %173, 0x3E8777A5C0000000
  %190 = fsub float %188, %189
  %191 = fmul float %175, 0x401921FB60000000
  %192 = fadd float %191, %190
  %193 = insertelement <2 x float> undef, float %180, i32 0
  %194 = insertelement <2 x float> %193, float %192, i32 1
  %195 = and i32 %7, 2147483647
  %196 = bitcast i32 %195 to float
  %197 = fcmp olt float %196, 0x3FE6666660000000
  %198 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %8, i32 0
  %199 = select i1 %197, <2 x float> %198, <2 x float> %194
  %200 = insertvalue { <2 x float>, i32 } undef, <2 x float> %199, 0
  %201 = insertvalue { <2 x float>, i32 } %200, i32 %138, 1
  ret { <2 x float>, i32 } %201
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %31

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fcmp olt float %7, 0.000000e+00
  %9 = select i1 %8, float -5.000000e-01, float 5.000000e-01
  %10 = fadd float %7, %9
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fptosi float %12 to i32
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 0x400921C000000000
  %16 = fsub float %0, %15
  %17 = fmul float %14, 0xBF1DAA0000000000
  %18 = fadd float %17, %16
  %19 = fsub float %18, %16
  %20 = fsub float %18, %19
  %21 = fsub float %16, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fmul float %14, 0xBE210B4620000000
  %25 = fadd float %24, %18
  %26 = fsub float %18, %25
  %27 = fadd float %24, %26
  %28 = fadd float %27, %23
  %29 = insertelement <2 x float> undef, float %25, i32 0
  %30 = insertelement <2 x float> %29, float %28, i32 1
  br label %79

; <label>:31:                                     ; preds = %1
  %32 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %33 = extractvalue { <2 x float>, i32 } %32, 0
  %34 = extractvalue { <2 x float>, i32 } %32, 1
  %35 = shl i32 %34, 1
  %36 = and i32 %35, 6
  %37 = extractelement <2 x float> %33, i32 0
  %38 = fcmp ogt float %37, 0.000000e+00
  %39 = zext i1 %38 to i32
  %40 = or i32 %36, %39
  %41 = add nuw nsw i32 %40, 1
  %42 = lshr i32 %41, 2
  %43 = and i32 %34, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %63, label %45

; <label>:45:                                     ; preds = %31
  %46 = bitcast float %37 to i32
  %47 = and i32 %46, -2147483648
  %48 = xor i32 %47, -1077342245
  %49 = bitcast i32 %48 to float
  %50 = or i32 %47, 859553070
  %51 = bitcast i32 %50 to float
  %52 = fadd float %37, %49
  %53 = fsub float %52, %37
  %54 = fsub float %52, %53
  %55 = fsub float %37, %54
  %56 = fsub float %49, %53
  %57 = fadd float %56, %55
  %58 = extractelement <2 x float> %33, i32 1
  %59 = fadd float %58, %51
  %60 = fadd float %59, %57
  %61 = insertelement <2 x float> undef, float %52, i32 0
  %62 = insertelement <2 x float> %61, float %60, i32 1
  br label %63

; <label>:63:                                     ; preds = %31, %45
  %64 = phi float [ %37, %31 ], [ %52, %45 ]
  %65 = phi <2 x float> [ %33, %31 ], [ %62, %45 ]
  %66 = extractelement <2 x float> %65, i32 1
  %67 = fadd float %64, %66
  %68 = fsub float %64, %67
  %69 = fadd float %66, %68
  %70 = insertelement <2 x float> undef, float %67, i32 0
  %71 = insertelement <2 x float> %70, float %69, i32 1
  %72 = fcmp une float %0, 0x7FF0000000000000
  %73 = fcmp une float %0, 0xFFF0000000000000
  %74 = and i1 %73, %72
  %75 = fcmp ord float %0, 0.000000e+00
  %76 = and i1 %75, %74
  %77 = insertelement <2 x float> %71, float 0x7FF8000000000000, i32 0
  %78 = select i1 %76, <2 x float> %71, <2 x float> %77
  br label %79

; <label>:79:                                     ; preds = %63, %6
  %80 = phi <2 x float> [ %30, %6 ], [ %78, %63 ]
  %81 = phi i32 [ %13, %6 ], [ %42, %63 ]
  %82 = extractelement <2 x float> %80, i32 0
  %83 = fmul float %82, %82
  %84 = insertelement <2 x float> %80, float %83, i32 1
  %85 = bitcast <2 x float> %84 to <2 x i32>
  %86 = and <2 x i32> %85, <i32 -4096, i32 -4096>
  %87 = bitcast <2 x i32> %86 to <2 x float>
  %88 = extractelement <2 x float> %87, i32 0
  %89 = fadd float %88, %88
  %90 = extractelement <2 x float> %80, i32 1
  %91 = fmul float %83, 0x3EC5E150E0000000
  %92 = fadd float %91, 0xBF29F75D60000000
  %93 = fmul float %83, %92
  %94 = fadd float %93, 0x3F8110EEE0000000
  %95 = fmul float %83, %94
  %96 = fadd float %95, 0xBFC55554C0000000
  %97 = fsub float 0xBFC55554C0000000, %96
  %98 = fadd float %95, %97
  %99 = bitcast float %96 to i32
  %100 = and i32 %99, -4096
  %101 = bitcast i32 %100 to float
  %102 = shufflevector <2 x float> %80, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %103 = insertelement <2 x float> %102, float %96, i32 1
  %104 = insertelement <2 x float> %102, float %101, i32 1
  %105 = fadd <2 x float> %103, %104
  %106 = fsub <2 x float> %103, %104
  %107 = shufflevector <2 x float> %105, <2 x float> %106, <2 x i32> <i32 0, i32 3>
  %108 = fsub <2 x float> %84, %87
  %109 = fmul float %83, %96
  %110 = insertelement <2 x float> undef, float %88, i32 0
  %111 = insertelement <2 x float> %110, float %101, i32 1
  %112 = fmul <2 x float> %111, %87
  %113 = insertelement <2 x float> undef, float %83, i32 0
  %114 = insertelement <2 x float> %113, float %109, i32 1
  %115 = fsub <2 x float> %112, %114
  %116 = insertelement <2 x float> undef, float %89, i32 0
  %117 = shufflevector <2 x float> %116, <2 x float> %87, <2 x i32> <i32 0, i32 3>
  %118 = extractelement <2 x float> %108, i32 0
  %119 = shufflevector <2 x float> %108, <2 x float> %106, <2 x i32> <i32 0, i32 3>
  %120 = fmul <2 x float> %117, %119
  %121 = fadd <2 x float> %115, %120
  %122 = insertelement <2 x float> %108, float %101, i32 1
  %123 = fmul <2 x float> %108, %122
  %124 = fadd <2 x float> %123, %121
  %125 = shufflevector <2 x float> %80, <2 x float> %108, <2 x i32> <i32 0, i32 3>
  %126 = fmul <2 x float> %125, %107
  %127 = fadd <2 x float> %126, %124
  %128 = extractelement <2 x float> %127, i32 0
  %129 = fmul float %96, %128
  %130 = extractelement <2 x float> %127, i32 1
  %131 = fadd float %129, %130
  %132 = fmul float %83, %98
  %133 = fadd float %132, %131
  %134 = fadd float %109, 1.000000e+00
  %135 = fsub float 1.000000e+00, %134
  %136 = fadd float %109, %135
  %137 = fadd float %136, %133
  %138 = bitcast float %134 to i32
  %139 = and i32 %138, -4096
  %140 = bitcast i32 %139 to float
  %141 = fsub float %134, %140
  %142 = fmul float %90, %140
  %143 = fmul float %137, %88
  %144 = fadd float %142, %143
  %145 = fmul float %118, %141
  %146 = fadd float %145, %144
  %147 = fmul float %141, %88
  %148 = fadd float %147, %146
  %149 = fmul float %118, %140
  %150 = fadd float %149, %148
  %151 = fmul float %88, %140
  %152 = fadd float %151, %150
  %153 = and i32 %81, 1
  %154 = icmp eq i32 %153, 0
  %155 = fsub float -0.000000e+00, %152
  %156 = select i1 %154, float %152, float %155
  %157 = icmp eq i32 %2, -2147483648
  %158 = select i1 %157, float %0, float %156
  ret float %158
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cosf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %24

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FD45F3060000000
  %8 = fadd float %7, -5.000000e-01
  %9 = fcmp olt float %8, 0.000000e+00
  %10 = select i1 %9, float -5.000000e-01, float 5.000000e-01
  %11 = fadd float %8, %10
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fptosi float %13 to i32
  %15 = shl nsw i32 %14, 1
  %16 = or i32 %15, 1
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, 0x3FF921C000000000
  %19 = fsub float %0, %18
  %20 = fmul float %17, 0x3F0DAA0000000000
  %21 = fsub float %19, %20
  %22 = fmul float %17, 0x3E110B4620000000
  %23 = fsub float %21, %22
  br label %88

; <label>:24:                                     ; preds = %1
  %25 = fcmp olt float %4, 3.900000e+04
  br i1 %25, label %26, label %46

; <label>:26:                                     ; preds = %24
  %27 = fmul float %0, 0x3FD45F3060000000
  %28 = fadd float %27, -5.000000e-01
  %29 = fcmp olt float %28, 0.000000e+00
  %30 = select i1 %29, float -5.000000e-01, float 5.000000e-01
  %31 = fadd float %28, %30
  %32 = fptosi float %31 to i32
  %33 = sitofp i32 %32 to float
  %34 = fptosi float %33 to i32
  %35 = shl nsw i32 %34, 1
  %36 = or i32 %35, 1
  %37 = sitofp i32 %36 to float
  %38 = fmul float %37, 0x3FF9200000000000
  %39 = fsub float %0, %38
  %40 = fmul float %37, 0x3F3FB00000000000
  %41 = fsub float %39, %40
  %42 = fmul float %37, 0x3E95100000000000
  %43 = fsub float %41, %42
  %44 = fmul float %37, 0x3DD0B46120000000
  %45 = fsub float %43, %44
  br label %88

; <label>:46:                                     ; preds = %24
  %47 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %48 = extractvalue { <2 x float>, i32 } %47, 0
  %49 = extractvalue { <2 x float>, i32 } %47, 1
  %50 = shl i32 %49, 1
  %51 = and i32 %50, 6
  %52 = extractelement <2 x float> %48, i32 0
  %53 = fcmp ogt float %52, 0.000000e+00
  %54 = zext i1 %53 to i32
  %55 = or i32 %51, %54
  %56 = add nuw nsw i32 %55, 7
  %57 = lshr i32 %56, 1
  %58 = and i32 %49, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %77

; <label>:60:                                     ; preds = %46
  %61 = select i1 %53, i32 0, i32 -2147483648
  %62 = xor i32 %61, -1077342245
  %63 = bitcast i32 %62 to float
  %64 = or i32 %61, 859553070
  %65 = bitcast i32 %64 to float
  %66 = fadd float %52, %63
  %67 = fsub float %66, %52
  %68 = fsub float %66, %67
  %69 = fsub float %52, %68
  %70 = fsub float %63, %67
  %71 = fadd float %70, %69
  %72 = extractelement <2 x float> %48, i32 1
  %73 = fadd float %72, %65
  %74 = fadd float %73, %71
  %75 = insertelement <2 x float> undef, float %66, i32 0
  %76 = insertelement <2 x float> %75, float %74, i32 1
  br label %77

; <label>:77:                                     ; preds = %60, %46
  %78 = phi <2 x float> [ %76, %60 ], [ %48, %46 ]
  %79 = fcmp une float %0, 0x7FF0000000000000
  %80 = fcmp une float %0, 0xFFF0000000000000
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %87

; <label>:82:                                     ; preds = %77
  %83 = extractelement <2 x float> %78, i32 0
  %84 = extractelement <2 x float> %78, i32 1
  %85 = fadd float %83, %84
  %86 = fcmp ord float %0, 0.000000e+00
  br i1 %86, label %88, label %87

; <label>:87:                                     ; preds = %82, %77
  br label %88

; <label>:88:                                     ; preds = %87, %82, %26, %6
  %89 = phi i32 [ %16, %6 ], [ %36, %26 ], [ %57, %82 ], [ %57, %87 ]
  %90 = phi float [ %23, %6 ], [ %45, %26 ], [ %85, %82 ], [ 0x7FF8000000000000, %87 ]
  %91 = fmul float %90, %90
  %92 = and i32 %89, 2
  %93 = icmp eq i32 %92, 0
  %94 = fsub float -0.000000e+00, %90
  %95 = select i1 %93, float %94, float %90
  %96 = fmul float %91, 0x3EC5E150E0000000
  %97 = fadd float %96, 0xBF29F75D60000000
  %98 = fmul float %91, %97
  %99 = fadd float %98, 0x3F8110EEE0000000
  %100 = fmul float %91, %99
  %101 = fadd float %100, 0xBFC55554C0000000
  %102 = fmul float %95, %101
  %103 = fmul float %91, %102
  %104 = fadd float %95, %103
  ret float %104
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cosf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %42

; <label>:6:                                      ; preds = %1
  %7 = fmul float %4, 0x3FD45F3060000000
  %8 = fadd float %7, -5.000000e-01
  %9 = fcmp olt float %8, 0.000000e+00
  %10 = select i1 %9, float -5.000000e-01, float 5.000000e-01
  %11 = fadd float %8, %10
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 2.000000e+00
  %15 = fadd float %14, 1.000000e+00
  %16 = fptosi float %15 to i32
  %17 = fmul float %15, 0xBFF921C000000000
  %18 = fadd float %17, %4
  %19 = fsub float %18, %4
  %20 = fsub float %18, %19
  %21 = fsub float %4, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fmul float %15, 0xBF0DAA0000000000
  %25 = fadd float %24, %18
  %26 = fsub float %25, %18
  %27 = fsub float %25, %26
  %28 = fsub float %18, %27
  %29 = fsub float %24, %26
  %30 = fadd float %29, %28
  %31 = fadd float %23, %30
  %32 = fmul float %15, 0xBE110B4620000000
  %33 = fadd float %32, %25
  %34 = fsub float %33, %25
  %35 = fsub float %33, %34
  %36 = fsub float %25, %35
  %37 = fsub float %32, %34
  %38 = fadd float %37, %36
  %39 = fadd float %31, %38
  %40 = insertelement <2 x float> undef, float %33, i32 0
  %41 = insertelement <2 x float> %40, float %39, i32 1
  br label %89

; <label>:42:                                     ; preds = %1
  %43 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %44 = extractvalue { <2 x float>, i32 } %43, 0
  %45 = extractvalue { <2 x float>, i32 } %43, 1
  %46 = shl i32 %45, 1
  %47 = and i32 %46, 6
  %48 = extractelement <2 x float> %44, i32 0
  %49 = fcmp ogt float %48, 0.000000e+00
  %50 = zext i1 %49 to i32
  %51 = or i32 %47, %50
  %52 = add nuw nsw i32 %51, 7
  %53 = lshr i32 %52, 1
  %54 = and i32 %45, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %73

; <label>:56:                                     ; preds = %42
  %57 = select i1 %49, i32 0, i32 -2147483648
  %58 = xor i32 %57, -1077342245
  %59 = bitcast i32 %58 to float
  %60 = or i32 %57, 859553070
  %61 = bitcast i32 %60 to float
  %62 = fadd float %48, %59
  %63 = fsub float %62, %48
  %64 = fsub float %62, %63
  %65 = fsub float %48, %64
  %66 = fsub float %59, %63
  %67 = fadd float %66, %65
  %68 = extractelement <2 x float> %44, i32 1
  %69 = fadd float %68, %61
  %70 = fadd float %69, %67
  %71 = insertelement <2 x float> undef, float %62, i32 0
  %72 = insertelement <2 x float> %71, float %70, i32 1
  br label %73

; <label>:73:                                     ; preds = %56, %42
  %74 = phi float [ %62, %56 ], [ %48, %42 ]
  %75 = phi <2 x float> [ %72, %56 ], [ %44, %42 ]
  %76 = extractelement <2 x float> %75, i32 1
  %77 = fadd float %74, %76
  %78 = fsub float %74, %77
  %79 = fadd float %76, %78
  %80 = insertelement <2 x float> undef, float %77, i32 0
  %81 = insertelement <2 x float> %80, float %79, i32 1
  %82 = fcmp une float %0, 0x7FF0000000000000
  %83 = fcmp une float %0, 0xFFF0000000000000
  %84 = and i1 %83, %82
  %85 = fcmp ord float %0, 0.000000e+00
  %86 = and i1 %85, %84
  %87 = insertelement <2 x float> %81, float 0x7FF8000000000000, i32 0
  %88 = select i1 %86, <2 x float> %81, <2 x float> %87
  br label %89

; <label>:89:                                     ; preds = %73, %6
  %90 = phi i32 [ %16, %6 ], [ %53, %73 ]
  %91 = phi <2 x float> [ %41, %6 ], [ %88, %73 ]
  %92 = extractelement <2 x float> %91, i32 0
  %93 = fmul float %92, %92
  %94 = insertelement <2 x float> %91, float %93, i32 1
  %95 = bitcast <2 x float> %94 to <2 x i32>
  %96 = and <2 x i32> %95, <i32 -4096, i32 -4096>
  %97 = bitcast <2 x i32> %96 to <2 x float>
  %98 = extractelement <2 x float> %97, i32 0
  %99 = fadd float %98, %98
  %100 = extractelement <2 x float> %91, i32 1
  %101 = fmul float %93, 0x3EC5E150E0000000
  %102 = fadd float %101, 0xBF29F75D60000000
  %103 = fmul float %93, %102
  %104 = fadd float %103, 0x3F8110EEE0000000
  %105 = fmul float %93, %104
  %106 = fadd float %105, 0xBFC55554C0000000
  %107 = fsub float 0xBFC55554C0000000, %106
  %108 = fadd float %105, %107
  %109 = bitcast float %106 to i32
  %110 = and i32 %109, -4096
  %111 = bitcast i32 %110 to float
  %112 = shufflevector <2 x float> %91, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %113 = insertelement <2 x float> %112, float %106, i32 1
  %114 = insertelement <2 x float> %112, float %111, i32 1
  %115 = fadd <2 x float> %113, %114
  %116 = fsub <2 x float> %113, %114
  %117 = shufflevector <2 x float> %115, <2 x float> %116, <2 x i32> <i32 0, i32 3>
  %118 = fsub <2 x float> %94, %97
  %119 = fmul float %93, %106
  %120 = insertelement <2 x float> undef, float %98, i32 0
  %121 = insertelement <2 x float> %120, float %111, i32 1
  %122 = fmul <2 x float> %121, %97
  %123 = insertelement <2 x float> undef, float %93, i32 0
  %124 = insertelement <2 x float> %123, float %119, i32 1
  %125 = fsub <2 x float> %122, %124
  %126 = insertelement <2 x float> undef, float %99, i32 0
  %127 = shufflevector <2 x float> %126, <2 x float> %97, <2 x i32> <i32 0, i32 3>
  %128 = extractelement <2 x float> %118, i32 0
  %129 = shufflevector <2 x float> %118, <2 x float> %116, <2 x i32> <i32 0, i32 3>
  %130 = fmul <2 x float> %127, %129
  %131 = fadd <2 x float> %125, %130
  %132 = insertelement <2 x float> %118, float %111, i32 1
  %133 = fmul <2 x float> %118, %132
  %134 = fadd <2 x float> %133, %131
  %135 = shufflevector <2 x float> %91, <2 x float> %118, <2 x i32> <i32 0, i32 3>
  %136 = fmul <2 x float> %135, %117
  %137 = fadd <2 x float> %136, %134
  %138 = extractelement <2 x float> %137, i32 0
  %139 = fmul float %106, %138
  %140 = extractelement <2 x float> %137, i32 1
  %141 = fadd float %139, %140
  %142 = fmul float %93, %108
  %143 = fadd float %142, %141
  %144 = fadd float %119, 1.000000e+00
  %145 = fsub float 1.000000e+00, %144
  %146 = fadd float %119, %145
  %147 = fadd float %146, %143
  %148 = bitcast float %144 to i32
  %149 = and i32 %148, -4096
  %150 = bitcast i32 %149 to float
  %151 = fsub float %144, %150
  %152 = fmul float %100, %150
  %153 = fmul float %147, %98
  %154 = fadd float %152, %153
  %155 = fmul float %128, %151
  %156 = fadd float %155, %154
  %157 = fmul float %151, %98
  %158 = fadd float %157, %156
  %159 = fmul float %128, %150
  %160 = fadd float %159, %158
  %161 = fmul float %98, %150
  %162 = fadd float %161, %160
  %163 = and i32 %90, 2
  %164 = icmp eq i32 %163, 0
  %165 = fsub float -0.000000e+00, %162
  %166 = select i1 %164, float %165, float %162
  ret float %166
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fastsinf_u3500(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FD45F3060000000
  %3 = fcmp olt float %2, 0.000000e+00
  %4 = select i1 %3, float -5.000000e-01, float 5.000000e-01
  %5 = fadd float %2, %4
  %6 = fptosi float %5 to i32
  %7 = sitofp i32 %6 to float
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0x400921FB60000000
  %11 = fsub float %0, %10
  %12 = fmul float %11, %11
  %13 = fmul float %12, 0x3F28AA1960000000
  %14 = fsub float 0x3F810BE9A0000000, %13
  %15 = fmul float %12, %14
  %16 = fadd float %15, 0xBFC5554880000000
  %17 = fmul float %11, %12
  %18 = fmul float %17, %16
  %19 = fadd float %11, %18
  %20 = and i32 %8, 1
  %21 = icmp eq i32 %20, 0
  %22 = fsub float -0.000000e+00, %19
  %23 = select i1 %21, float %19, float %22
  %24 = bitcast float %0 to i32
  %25 = and i32 %24, 2147483647
  %26 = bitcast i32 %25 to float
  %27 = fcmp ogt float %26, 3.000000e+01
  br i1 %27, label %28, label %30, !prof !6

; <label>:28:                                     ; preds = %1
  %29 = tail call float @Sleef_sinf_u35(float %0)
  br label %30

; <label>:30:                                     ; preds = %1, %28
  %31 = phi float [ %29, %28 ], [ %23, %1 ]
  ret float %31
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fastcosf_u3500(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FD45F3060000000
  %3 = fadd float %2, -5.000000e-01
  %4 = fcmp olt float %3, 0.000000e+00
  %5 = select i1 %4, float -5.000000e-01, float 5.000000e-01
  %6 = fadd float %3, %5
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = fptosi float %8 to i32
  %10 = sitofp i32 %9 to float
  %11 = fadd float %0, 0xBFF921FB60000000
  %12 = fmul float %10, 0x400921FB60000000
  %13 = fsub float %11, %12
  %14 = fmul float %13, %13
  %15 = fmul float %14, 0x3F28AA1960000000
  %16 = fsub float 0x3F810BE9A0000000, %15
  %17 = fmul float %14, %16
  %18 = fadd float %17, 0xBFC5554880000000
  %19 = fmul float %13, %14
  %20 = fmul float %19, %18
  %21 = fadd float %13, %20
  %22 = and i32 %9, 1
  %23 = icmp eq i32 %22, 0
  %24 = fsub float -0.000000e+00, %21
  %25 = select i1 %23, float %24, float %21
  %26 = bitcast float %0 to i32
  %27 = and i32 %26, 2147483647
  %28 = bitcast i32 %27 to float
  %29 = fcmp ogt float %28, 3.000000e+01
  br i1 %29, label %30, label %32, !prof !6

; <label>:30:                                     ; preds = %1
  %31 = tail call float @Sleef_cosf_u35(float %0)
  br label %32

; <label>:32:                                     ; preds = %1, %30
  %33 = phi float [ %31, %30 ], [ %25, %1 ]
  ret float %33
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincosf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %21

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp olt float %7, 0.000000e+00
  %9 = select i1 %8, float -5.000000e-01, float 5.000000e-01
  %10 = fadd float %7, %9
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fptosi float %12 to i32
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 0x3FF921C000000000
  %16 = fsub float %0, %15
  %17 = fmul float %14, 0x3F0DAA0000000000
  %18 = fsub float %16, %17
  %19 = fmul float %14, 0x3E110B4620000000
  %20 = fsub float %18, %19
  br label %53

; <label>:21:                                     ; preds = %1
  %22 = fcmp olt float %4, 3.900000e+04
  br i1 %22, label %23, label %40

; <label>:23:                                     ; preds = %21
  %24 = fmul float %0, 0x3FE45F3060000000
  %25 = fcmp olt float %24, 0.000000e+00
  %26 = select i1 %25, float -5.000000e-01, float 5.000000e-01
  %27 = fadd float %24, %26
  %28 = fptosi float %27 to i32
  %29 = sitofp i32 %28 to float
  %30 = fptosi float %29 to i32
  %31 = sitofp i32 %30 to float
  %32 = fmul float %31, 0x3FF9200000000000
  %33 = fsub float %0, %32
  %34 = fmul float %31, 0x3F3FB00000000000
  %35 = fsub float %33, %34
  %36 = fmul float %31, 0x3E95100000000000
  %37 = fsub float %35, %36
  %38 = fmul float %31, 0x3DD0B46120000000
  %39 = fsub float %37, %38
  br label %53

; <label>:40:                                     ; preds = %21
  %41 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %42 = extractvalue { <2 x float>, i32 } %41, 0
  %43 = extractvalue { <2 x float>, i32 } %41, 1
  %44 = fcmp une float %0, 0x7FF0000000000000
  %45 = fcmp une float %0, 0xFFF0000000000000
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %52

; <label>:47:                                     ; preds = %40
  %48 = extractelement <2 x float> %42, i32 0
  %49 = extractelement <2 x float> %42, i32 1
  %50 = fadd float %48, %49
  %51 = fcmp ord float %0, 0.000000e+00
  br i1 %51, label %53, label %52

; <label>:52:                                     ; preds = %47, %40
  br label %53

; <label>:53:                                     ; preds = %52, %47, %23, %6
  %54 = phi float [ %20, %6 ], [ %39, %23 ], [ 0x7FF8000000000000, %52 ], [ %50, %47 ]
  %55 = phi i32 [ %13, %6 ], [ %30, %23 ], [ %43, %52 ], [ %43, %47 ]
  %56 = fmul float %54, %54
  %57 = fmul float %56, 0x3F2994CB60000000
  %58 = fsub float 0x3F81107340000000, %57
  %59 = fmul float %56, %58
  %60 = fadd float %59, 0xBFC5555440000000
  %61 = fmul float %56, %60
  %62 = fmul float %54, %61
  %63 = fadd float %54, %62
  %64 = icmp eq i32 %2, -2147483648
  %65 = select i1 %64, float -0.000000e+00, float %63
  %66 = fmul float %56, 0x3E923DB120000000
  %67 = fsub float 0x3EFA00F160000000, %66
  %68 = fmul float %56, %67
  %69 = fadd float %68, 0xBF56C16B00000000
  %70 = fmul float %56, %69
  %71 = fadd float %70, 0x3FA5555540000000
  %72 = fmul float %56, %71
  %73 = fadd float %72, -5.000000e-01
  %74 = fmul float %56, %73
  %75 = fadd float %74, 1.000000e+00
  %76 = and i32 %55, 1
  %77 = icmp eq i32 %76, 0
  %78 = select i1 %77, float %75, float %65
  %79 = select i1 %77, float %65, float %75
  %80 = and i32 %55, 2
  %81 = icmp eq i32 %80, 0
  %82 = fsub float -0.000000e+00, %79
  %83 = select i1 %81, float %79, float %82
  %84 = add nsw i32 %55, 1
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = fsub float -0.000000e+00, %78
  %88 = select i1 %86, float %78, float %87
  %89 = insertelement <2 x float> undef, float %83, i32 0
  %90 = insertelement <2 x float> %89, float %88, i32 1
  ret <2 x float> %90
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincosf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %31

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp olt float %7, 0.000000e+00
  %9 = select i1 %8, float -5.000000e-01, float 5.000000e-01
  %10 = fadd float %7, %9
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fptosi float %12 to i32
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 0x3FF921C000000000
  %16 = fsub float %0, %15
  %17 = fmul float %14, 0xBF0DAA0000000000
  %18 = fadd float %17, %16
  %19 = fsub float %18, %16
  %20 = fsub float %18, %19
  %21 = fsub float %16, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fmul float %14, 0xBE110B4620000000
  %25 = fadd float %24, %18
  %26 = fsub float %18, %25
  %27 = fadd float %24, %26
  %28 = fadd float %27, %23
  %29 = insertelement <2 x float> undef, float %25, i32 0
  %30 = insertelement <2 x float> %29, float %28, i32 1
  br label %42

; <label>:31:                                     ; preds = %1
  %32 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %33 = extractvalue { <2 x float>, i32 } %32, 0
  %34 = extractvalue { <2 x float>, i32 } %32, 1
  %35 = fcmp une float %0, 0x7FF0000000000000
  %36 = fcmp une float %0, 0xFFF0000000000000
  %37 = and i1 %36, %35
  %38 = fcmp ord float %0, 0.000000e+00
  %39 = and i1 %38, %37
  %40 = insertelement <2 x float> %33, float 0x7FF8000000000000, i32 0
  %41 = select i1 %39, <2 x float> %33, <2 x float> %40
  br label %42

; <label>:42:                                     ; preds = %31, %6
  %43 = phi <2 x float> [ %30, %6 ], [ %41, %31 ]
  %44 = phi i32 [ %13, %6 ], [ %34, %31 ]
  %45 = extractelement <2 x float> %43, i32 0
  %46 = bitcast float %45 to i32
  %47 = and i32 %46, -4096
  %48 = bitcast i32 %47 to float
  %49 = fsub float %45, %48
  %50 = extractelement <2 x float> %43, i32 1
  %51 = fmul float %49, %49
  %52 = insertelement <2 x float> undef, float %50, i32 0
  %53 = insertelement <2 x float> %52, float %49, i32 1
  %54 = insertelement <2 x float> undef, float %48, i32 0
  %55 = shufflevector <2 x float> %54, <2 x float> undef, <2 x i32> zeroinitializer
  %56 = fmul <2 x float> %53, %55
  %57 = fadd <2 x float> %56, %56
  %58 = extractelement <2 x float> %57, i32 0
  %59 = fadd float %58, %51
  %60 = extractelement <2 x float> %57, i32 1
  %61 = fadd float %59, %60
  %62 = fmul float %48, %48
  %63 = fadd float %62, %61
  %64 = fmul float %63, 0x3F2994CB60000000
  %65 = fsub float 0x3F81107340000000, %64
  %66 = fmul float %63, %65
  %67 = fadd float %66, 0xBFC5555440000000
  %68 = fmul float %45, %63
  %69 = fmul float %68, %67
  %70 = fadd float %45, %69
  %71 = fsub float %45, %70
  %72 = fadd float %69, %71
  %73 = fadd float %50, %72
  %74 = fadd float %70, %73
  %75 = icmp eq i32 %2, -2147483648
  %76 = select i1 %75, float -0.000000e+00, float %74
  %77 = fmul float %63, 0x3E923DB120000000
  %78 = fsub float 0x3EFA00F160000000, %77
  %79 = fmul float %63, %78
  %80 = fadd float %79, 0xBF56C16B00000000
  %81 = fmul float %63, %80
  %82 = fadd float %81, 0x3FA5555540000000
  %83 = fmul float %63, %82
  %84 = fadd float %83, -5.000000e-01
  %85 = bitcast float %63 to i32
  %86 = and i32 %85, -4096
  %87 = bitcast i32 %86 to float
  %88 = fsub float %63, %87
  %89 = bitcast float %84 to i32
  %90 = and i32 %89, -4096
  %91 = bitcast i32 %90 to float
  %92 = fsub float %84, %91
  %93 = fmul float %63, %84
  %94 = fmul float %87, %91
  %95 = fsub float %94, %93
  %96 = fmul float %88, %91
  %97 = fadd float %96, %95
  %98 = fmul float %92, %87
  %99 = fadd float %98, %97
  %100 = fmul float %88, %92
  %101 = fadd float %100, %99
  %102 = fadd float %93, 1.000000e+00
  %103 = fsub float 1.000000e+00, %102
  %104 = fadd float %93, %103
  %105 = fadd float %104, %101
  %106 = fadd float %102, %105
  %107 = and i32 %44, 1
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, float %76, float %106
  %110 = select i1 %108, float %106, float %76
  %111 = and i32 %44, 2
  %112 = icmp eq i32 %111, 0
  %113 = fsub float -0.000000e+00, %109
  %114 = select i1 %112, float %109, float %113
  %115 = add nsw i32 %44, 1
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = fsub float -0.000000e+00, %110
  %119 = select i1 %117, float %110, float %118
  %120 = insertelement <2 x float> undef, float %114, i32 0
  %121 = insertelement <2 x float> %120, float %119, i32 1
  ret <2 x float> %121
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincospif_u05(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i32
  %4 = fcmp uge float %2, 0.000000e+00
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %5, %3
  %7 = and i32 %6, -2
  %8 = sitofp i32 %7 to float
  %9 = fsub float %2, %8
  %10 = fmul float %9, %9
  %11 = bitcast float %9 to i32
  %12 = and i32 %11, -4096
  %13 = bitcast i32 %12 to float
  %14 = fsub float %9, %13
  %15 = fmul float %10, 0x3E94C32E20000000
  %16 = fadd float %15, 0xBF032CC140000000
  %17 = fmul float %10, %16
  %18 = fadd float %17, 0x3F6466BBE0000000
  %19 = fmul float %10, %18
  %20 = fadd float %19, 0xBFB4ABBCE0000000
  %21 = fsub float %20, %19
  %22 = fsub float %20, %21
  %23 = fsub float %19, %22
  %24 = fsub float 0xBFB4ABBCE0000000, %21
  %25 = fadd float %24, %23
  %26 = fadd float %25, 0xBE16F9CCE0000000
  %27 = bitcast float %10 to i32
  %28 = and i32 %27, -4096
  %29 = bitcast i32 %28 to float
  %30 = fsub float %10, %29
  %31 = bitcast float %20 to i32
  %32 = and i32 %31, -4096
  %33 = bitcast i32 %32 to float
  %34 = fsub float %20, %33
  %35 = fmul float %10, %20
  %36 = fmul float %29, %33
  %37 = fsub float %36, %35
  %38 = insertelement <2 x float> undef, float %13, i32 0
  %39 = insertelement <2 x float> %38, float %30, i32 1
  %40 = insertelement <2 x float> %38, float %33, i32 1
  %41 = fmul <2 x float> %39, %40
  %42 = insertelement <2 x float> undef, float %10, i32 0
  %43 = insertelement <2 x float> %42, float %37, i32 1
  %44 = fsub <2 x float> %41, %43
  %45 = fadd <2 x float> %41, %43
  %46 = shufflevector <2 x float> %44, <2 x float> %45, <2 x i32> <i32 0, i32 3>
  %47 = fmul float %34, %29
  %48 = insertelement <2 x float> undef, float %14, i32 0
  %49 = insertelement <2 x float> %48, float %30, i32 1
  %50 = insertelement <2 x float> %38, float %34, i32 1
  %51 = fmul <2 x float> %49, %50
  %52 = extractelement <2 x float> %51, i32 0
  %53 = insertelement <2 x float> undef, float %52, i32 0
  %54 = insertelement <2 x float> %53, float %47, i32 1
  %55 = fadd <2 x float> %54, %46
  %56 = fadd <2 x float> %51, %55
  %57 = insertelement <2 x float> %48, float %10, i32 1
  %58 = insertelement <2 x float> %48, float %26, i32 1
  %59 = fmul <2 x float> %57, %58
  %60 = fadd <2 x float> %59, %56
  %61 = extractelement <2 x float> %60, i32 0
  %62 = fmul float %20, %61
  %63 = extractelement <2 x float> %60, i32 1
  %64 = fadd float %62, %63
  %65 = fadd float %35, 0x3FE921FB60000000
  %66 = fsub float %65, %35
  %67 = fsub float %65, %66
  %68 = fsub float %35, %67
  %69 = fsub float 0x3FE921FB60000000, %66
  %70 = fadd float %69, %68
  %71 = fadd float %64, 0xBE57781980000000
  %72 = fadd float %70, %71
  %73 = bitcast float %65 to i32
  %74 = and i32 %73, -4096
  %75 = bitcast i32 %74 to float
  %76 = fsub float %65, %75
  %77 = fmul float %9, %65
  %78 = fmul float %13, %75
  %79 = fsub float %78, %77
  %80 = fmul float %76, %13
  %81 = fadd float %79, %80
  %82 = fmul float %14, %75
  %83 = fadd float %82, %81
  %84 = fmul float %14, %76
  %85 = fadd float %84, %83
  %86 = fmul float %9, %72
  %87 = fadd float %85, %86
  %88 = fadd float %77, %87
  %89 = bitcast float %0 to i32
  %90 = icmp eq i32 %89, -2147483648
  %91 = select i1 %90, float -0.000000e+00, float %88
  %92 = fmul float %10, 0x3E5A193700000000
  %93 = fsub float 0x3ECE1EB4A0000000, %92
  %94 = fmul float %10, %93
  %95 = fadd float %94, 0xBF355D3C00000000
  %96 = fmul float %10, %95
  %97 = fadd float %96, 0x3F903C1F00000000
  %98 = fsub float %97, %96
  %99 = fsub float %97, %98
  %100 = fsub float %96, %99
  %101 = fsub float 0x3F903C1F00000000, %98
  %102 = fadd float %101, %100
  %103 = fadd float %102, 0x3DFEE1F000000000
  %104 = bitcast float %97 to i32
  %105 = and i32 %104, -4096
  %106 = bitcast i32 %105 to float
  %107 = fsub float %97, %106
  %108 = fmul float %10, %97
  %109 = fmul float %29, %106
  %110 = fsub float %109, %108
  %111 = fmul float %30, %106
  %112 = fadd float %111, %110
  %113 = fmul float %107, %29
  %114 = fadd float %113, %112
  %115 = fmul float %30, %107
  %116 = fadd float %115, %114
  %117 = fmul float %10, %103
  %118 = fadd float %117, %116
  %119 = fmul float %97, %61
  %120 = fadd float %119, %118
  %121 = fadd float %108, 0xBFD3BD3CC0000000
  %122 = fsub float %121, %108
  %123 = fsub float %121, %122
  %124 = fsub float %108, %123
  %125 = fsub float 0xBFD3BD3CC0000000, %122
  %126 = fadd float %125, %124
  %127 = fadd float %120, 0xBE437BD7E0000000
  %128 = fadd float %126, %127
  %129 = bitcast float %121 to i32
  %130 = and i32 %129, -4096
  %131 = bitcast i32 %130 to float
  %132 = fsub float %121, %131
  %133 = fmul float %10, %121
  %134 = fmul float %29, %131
  %135 = fsub float %134, %133
  %136 = fmul float %132, %29
  %137 = fadd float %136, %135
  %138 = fmul float %30, %131
  %139 = fadd float %138, %137
  %140 = fmul float %30, %132
  %141 = fadd float %140, %139
  %142 = fmul float %61, %121
  %143 = fadd float %142, %141
  %144 = fmul float %10, %128
  %145 = fadd float %143, %144
  %146 = fadd float %133, 1.000000e+00
  %147 = fsub float %146, %133
  %148 = fsub float %146, %147
  %149 = fsub float %133, %148
  %150 = fsub float 1.000000e+00, %147
  %151 = fadd float %150, %149
  %152 = fadd float %151, %145
  %153 = fadd float %146, %152
  %154 = and i32 %6, 2
  %155 = icmp eq i32 %154, 0
  %156 = select i1 %155, float %91, float %153
  %157 = select i1 %155, float %153, float %91
  %158 = and i32 %6, 4
  %159 = icmp eq i32 %158, 0
  %160 = fsub float -0.000000e+00, %156
  %161 = select i1 %159, float %156, float %160
  %162 = add nsw i32 %7, 2
  %163 = and i32 %162, 4
  %164 = icmp eq i32 %163, 0
  %165 = fsub float -0.000000e+00, %157
  %166 = select i1 %164, float %157, float %165
  %167 = and i32 %89, 2147483647
  %168 = bitcast i32 %167 to float
  %169 = fcmp ogt float %168, 1.000000e+07
  %170 = select i1 %169, float 0.000000e+00, float %161
  %171 = select i1 %169, float 1.000000e+00, float %166
  %172 = fcmp une float %0, 0x7FF0000000000000
  %173 = fcmp une float %0, 0xFFF0000000000000
  %174 = and i1 %173, %172
  %175 = select i1 %174, float %170, float 0x7FF8000000000000
  %176 = select i1 %174, float %171, float 0x7FF8000000000000
  %177 = insertelement <2 x float> undef, float %175, i32 0
  %178 = insertelement <2 x float> %177, float %176, i32 1
  ret <2 x float> %178
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_sincospif_u35(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i32
  %4 = fcmp uge float %2, 0.000000e+00
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %5, %3
  %7 = and i32 %6, -2
  %8 = sitofp i32 %7 to float
  %9 = fsub float %2, %8
  %10 = fmul float %9, %9
  %11 = fmul float %10, 0x3F02E11480000000
  %12 = fsub float 0x3F646617E0000000, %11
  %13 = fmul float %10, %12
  %14 = fadd float %13, 0xBFB4ABBCE0000000
  %15 = fmul float %10, %14
  %16 = fadd float %15, 0x3FE921FB60000000
  %17 = fmul float %9, %16
  %18 = fmul float %10, 0x3ECDB1B200000000
  %19 = fadd float %18, 0xBF355CA860000000
  %20 = fmul float %10, %19
  %21 = fadd float %20, 0x3F903C1D20000000
  %22 = fmul float %10, %21
  %23 = fadd float %22, 0xBFD3BD3CC0000000
  %24 = fmul float %10, %23
  %25 = fadd float %24, 1.000000e+00
  %26 = and i32 %6, 2
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, float %25, float %17
  %29 = select i1 %27, float %17, float %25
  %30 = and i32 %6, 4
  %31 = icmp eq i32 %30, 0
  %32 = fsub float -0.000000e+00, %29
  %33 = select i1 %31, float %29, float %32
  %34 = add nsw i32 %7, 2
  %35 = and i32 %34, 4
  %36 = icmp eq i32 %35, 0
  %37 = fsub float -0.000000e+00, %28
  %38 = select i1 %36, float %28, float %37
  %39 = bitcast float %0 to i32
  %40 = and i32 %39, 2147483647
  %41 = bitcast i32 %40 to float
  %42 = fcmp ogt float %41, 1.000000e+07
  %43 = select i1 %42, float 1.000000e+00, float %38
  %44 = select i1 %42, float 0.000000e+00, float %33
  %45 = fcmp une float %0, 0x7FF0000000000000
  %46 = fcmp une float %0, 0xFFF0000000000000
  %47 = and i1 %46, %45
  %48 = select i1 %47, float %43, float 0x7FF8000000000000
  %49 = select i1 %47, float %44, float 0x7FF8000000000000
  %50 = insertelement <2 x float> undef, float %49, i32 0
  %51 = insertelement <2 x float> %50, float %48, i32 1
  ret <2 x float> %51
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 6.250000e+01
  br i1 %5, label %6, label %21

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp olt float %7, 0.000000e+00
  %9 = select i1 %8, float -5.000000e-01, float 5.000000e-01
  %10 = fadd float %7, %9
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fptosi float %12 to i32
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 0x3FF921C000000000
  %16 = fsub float %0, %15
  %17 = fmul float %14, 0x3F0DAA0000000000
  %18 = fsub float %16, %17
  %19 = fmul float %14, 0x3E110B4620000000
  %20 = fsub float %18, %19
  br label %53

; <label>:21:                                     ; preds = %1
  %22 = fcmp olt float %4, 3.900000e+04
  br i1 %22, label %23, label %40

; <label>:23:                                     ; preds = %21
  %24 = fmul float %0, 0x3FE45F3060000000
  %25 = fcmp olt float %24, 0.000000e+00
  %26 = select i1 %25, float -5.000000e-01, float 5.000000e-01
  %27 = fadd float %24, %26
  %28 = fptosi float %27 to i32
  %29 = sitofp i32 %28 to float
  %30 = fptosi float %29 to i32
  %31 = sitofp i32 %30 to float
  %32 = fmul float %31, 0x3FF9200000000000
  %33 = fsub float %0, %32
  %34 = fmul float %31, 0x3F3FB00000000000
  %35 = fsub float %33, %34
  %36 = fmul float %31, 0x3E95100000000000
  %37 = fsub float %35, %36
  %38 = fmul float %31, 0x3DD0B46120000000
  %39 = fsub float %37, %38
  br label %53

; <label>:40:                                     ; preds = %21
  %41 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %42 = extractvalue { <2 x float>, i32 } %41, 0
  %43 = extractvalue { <2 x float>, i32 } %41, 1
  %44 = fcmp une float %0, 0x7FF0000000000000
  %45 = fcmp une float %0, 0xFFF0000000000000
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %52

; <label>:47:                                     ; preds = %40
  %48 = extractelement <2 x float> %42, i32 0
  %49 = extractelement <2 x float> %42, i32 1
  %50 = fadd float %48, %49
  %51 = fcmp ord float %0, 0.000000e+00
  br i1 %51, label %53, label %52

; <label>:52:                                     ; preds = %47, %40
  br label %53

; <label>:53:                                     ; preds = %52, %47, %23, %6
  %54 = phi float [ %20, %6 ], [ %39, %23 ], [ 0x7FF8000000000000, %52 ], [ %50, %47 ]
  %55 = phi i32 [ %13, %6 ], [ %30, %23 ], [ %43, %52 ], [ %43, %47 ]
  %56 = fmul float %54, %54
  %57 = and i32 %55, 1
  %58 = icmp ne i32 %57, 0
  %59 = fsub float -0.000000e+00, %54
  %60 = select i1 %58, float %59, float %54
  %61 = fmul float %56, %56
  %62 = fmul float %61, %61
  %63 = fmul float %56, 0x3F82FD7040000000
  %64 = fadd float %63, 0x3F6B323AE0000000
  %65 = fmul float %56, 0x3F98E20C80000000
  %66 = fadd float %65, 0x3FAB5DBCA0000000
  %67 = fmul float %56, 0x3FC112B1C0000000
  %68 = fadd float %67, 0x3FD5554F20000000
  %69 = fmul float %61, %66
  %70 = fadd float %68, %69
  %71 = fmul float %62, %64
  %72 = fadd float %71, %70
  %73 = fmul float %60, %72
  %74 = fmul float %56, %73
  %75 = fadd float %60, %74
  %76 = fdiv float 1.000000e+00, %75
  %77 = select i1 %58, float %76, float %75
  ret float %77
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.250000e+02
  br i1 %5, label %6, label %31

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, 0x3FE45F3060000000
  %8 = fcmp olt float %7, 0.000000e+00
  %9 = select i1 %8, float -5.000000e-01, float 5.000000e-01
  %10 = fadd float %7, %9
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fptosi float %12 to i32
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 0x3FF921C000000000
  %16 = fsub float %0, %15
  %17 = fmul float %14, 0xBF0DAA0000000000
  %18 = fadd float %17, %16
  %19 = fsub float %18, %16
  %20 = fsub float %18, %19
  %21 = fsub float %16, %20
  %22 = fsub float %17, %19
  %23 = fadd float %22, %21
  %24 = fmul float %14, 0xBE110B4620000000
  %25 = fadd float %24, %18
  %26 = fsub float %18, %25
  %27 = fadd float %24, %26
  %28 = fadd float %27, %23
  %29 = insertelement <2 x float> undef, float %25, i32 0
  %30 = insertelement <2 x float> %29, float %28, i32 1
  br label %42

; <label>:31:                                     ; preds = %1
  %32 = tail call fastcc { <2 x float>, i32 } @rempif(float %0)
  %33 = extractvalue { <2 x float>, i32 } %32, 0
  %34 = extractvalue { <2 x float>, i32 } %32, 1
  %35 = fcmp une float %0, 0x7FF0000000000000
  %36 = fcmp une float %0, 0xFFF0000000000000
  %37 = and i1 %36, %35
  %38 = fcmp ord float %0, 0.000000e+00
  %39 = and i1 %38, %37
  %40 = insertelement <2 x float> %33, float 0x7FF8000000000000, i32 0
  %41 = select i1 %39, <2 x float> %33, <2 x float> %40
  br label %42

; <label>:42:                                     ; preds = %31, %6
  %43 = phi <2 x float> [ %30, %6 ], [ %41, %31 ]
  %44 = phi i32 [ %13, %6 ], [ %34, %31 ]
  %45 = and i32 %44, 1
  %46 = icmp ne i32 %45, 0
  %47 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %43
  %48 = select i1 %46, <2 x float> %47, <2 x float> %43
  %49 = extractelement <2 x float> %48, i32 0
  %50 = bitcast float %49 to i32
  %51 = and i32 %50, -4096
  %52 = bitcast i32 %51 to float
  %53 = fsub float %49, %52
  %54 = fmul float %49, %49
  %55 = fmul float %52, %52
  %56 = fsub float %55, %54
  %57 = fadd float %52, %52
  %58 = fmul float %57, %53
  %59 = fadd float %56, %58
  %60 = fmul float %53, %53
  %61 = fadd float %60, %59
  %62 = extractelement <2 x float> %48, i32 1
  %63 = fadd float %62, %62
  %64 = fmul float %49, %63
  %65 = fadd float %64, %61
  %66 = fadd float %54, %65
  %67 = fsub float %54, %66
  %68 = fadd float %65, %67
  %69 = fmul float %66, 0x3F724B52A0000000
  %70 = fadd float %69, 0xBF15FFC9C0000000
  %71 = fmul float %66, %70
  %72 = fadd float %71, 0x3F86744100000000
  %73 = fmul float %66, %72
  %74 = fadd float %73, 0x3F95BEE5E0000000
  %75 = fmul float %66, %74
  %76 = fadd float %75, 0x3FABAEE500000000
  %77 = fmul float %66, %76
  %78 = fadd float %77, 0x3FC110D0C0000000
  %79 = fsub float 0x3FC110D0C0000000, %78
  %80 = fadd float %77, %79
  %81 = bitcast float %66 to i32
  %82 = and i32 %81, -4096
  %83 = bitcast i32 %82 to float
  %84 = fsub float %66, %83
  %85 = bitcast float %78 to i32
  %86 = and i32 %85, -4096
  %87 = bitcast i32 %86 to float
  %88 = fsub float %78, %87
  %89 = fmul float %66, %78
  %90 = fmul float %83, %87
  %91 = fsub float %90, %89
  %92 = fmul float %84, %87
  %93 = fadd float %92, %91
  %94 = fmul float %88, %83
  %95 = fadd float %94, %93
  %96 = fmul float %84, %88
  %97 = fadd float %96, %95
  %98 = fmul float %66, %80
  %99 = fadd float %98, %97
  %100 = fmul float %68, %78
  %101 = fadd float %100, %99
  %102 = fadd float %89, 0x3FD5555680000000
  %103 = fsub float 0x3FD5555680000000, %102
  %104 = fadd float %89, %103
  %105 = fadd float %104, %101
  %106 = bitcast float %102 to i32
  %107 = and i32 %106, -4096
  %108 = bitcast i32 %107 to float
  %109 = fsub float %102, %108
  %110 = fmul float %66, %102
  %111 = fmul float %83, %108
  %112 = fsub float %111, %110
  %113 = fmul float %109, %83
  %114 = fadd float %113, %112
  %115 = fmul float %84, %108
  %116 = fadd float %115, %114
  %117 = fmul float %84, %109
  %118 = fadd float %117, %116
  %119 = fmul float %68, %102
  %120 = fadd float %119, %118
  %121 = fmul float %66, %105
  %122 = fadd float %120, %121
  %123 = fadd float %110, 1.000000e+00
  %124 = fsub float 1.000000e+00, %123
  %125 = fadd float %110, %124
  %126 = fadd float %125, %122
  %127 = bitcast float %123 to i32
  %128 = and i32 %127, -4096
  %129 = bitcast i32 %128 to float
  %130 = fsub float %123, %129
  %131 = fmul float %49, %123
  %132 = fmul float %52, %129
  %133 = fsub float %132, %131
  %134 = fmul float %53, %129
  %135 = fadd float %134, %133
  %136 = fmul float %130, %52
  %137 = fadd float %136, %135
  %138 = fmul float %53, %130
  %139 = fadd float %138, %137
  %140 = fmul float %49, %126
  %141 = fadd float %139, %140
  %142 = fmul float %62, %123
  %143 = fadd float %142, %141
  %144 = insertelement <2 x float> undef, float %131, i32 0
  %145 = insertelement <2 x float> %144, float %143, i32 1
  br i1 %46, label %146, label %169

; <label>:146:                                    ; preds = %42
  %147 = fdiv float 1.000000e+00, %131
  %148 = bitcast float %131 to i32
  %149 = and i32 %148, -4096
  %150 = bitcast i32 %149 to float
  %151 = fsub float %131, %150
  %152 = bitcast float %147 to i32
  %153 = and i32 %152, -4096
  %154 = bitcast i32 %153 to float
  %155 = fsub float %147, %154
  %156 = fmul float %150, %154
  %157 = fsub float 1.000000e+00, %156
  %158 = fmul float %155, %150
  %159 = fsub float %157, %158
  %160 = fmul float %151, %154
  %161 = fsub float %159, %160
  %162 = fmul float %151, %155
  %163 = fsub float %161, %162
  %164 = fmul float %147, %143
  %165 = fsub float %163, %164
  %166 = fmul float %147, %165
  %167 = insertelement <2 x float> undef, float %147, i32 0
  %168 = insertelement <2 x float> %167, float %166, i32 1
  br label %169

; <label>:169:                                    ; preds = %146, %42
  %170 = phi <2 x float> [ %168, %146 ], [ %145, %42 ]
  %171 = extractelement <2 x float> %170, i32 0
  %172 = extractelement <2 x float> %170, i32 1
  %173 = fadd float %171, %172
  %174 = icmp eq i32 %2, -2147483648
  %175 = select i1 %174, float -0.000000e+00, float %173
  ret float %175
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atanf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, -2147483648
  %4 = or i32 %3, 1065353216
  %5 = bitcast i32 %4 to float
  %6 = fcmp oeq float %5, -1.000000e+00
  %7 = fsub float -0.000000e+00, %0
  %8 = select i1 %6, i32 2, i32 0
  %9 = select i1 %6, float %7, float %0
  %10 = fcmp ogt float %9, 1.000000e+00
  br i1 %10, label %11, label %14

; <label>:11:                                     ; preds = %1
  %12 = fdiv float 1.000000e+00, %9
  %13 = or i32 %8, 1
  br label %14

; <label>:14:                                     ; preds = %11, %1
  %15 = phi i32 [ %13, %11 ], [ %8, %1 ]
  %16 = phi float [ %12, %11 ], [ %9, %1 ]
  %17 = fmul float %16, %16
  %18 = fmul float %17, %17
  %19 = fmul float %18, %18
  %20 = insertelement <2 x float> undef, float %17, i32 0
  %21 = shufflevector <2 x float> %20, <2 x float> undef, <2 x i32> zeroinitializer
  %22 = fmul <2 x float> %21, <float 0x3FBB399E40000000, float 0x3F672199A0000000>
  %23 = fadd <2 x float> %22, <float 0xBFC22DF3E0000000, float 0xBF905701A0000000>
  %24 = fmul <2 x float> %21, <float 0x3FC99734E0000000, float 0x3FA5C336C0000000>
  %25 = fadd <2 x float> %24, <float 0xBFD5554BA0000000, float 0xBFB32BFF40000000>
  %26 = insertelement <2 x float> undef, float %18, i32 0
  %27 = shufflevector <2 x float> %26, <2 x float> undef, <2 x i32> zeroinitializer
  %28 = fmul <2 x float> %27, %23
  %29 = fadd <2 x float> %25, %28
  %30 = extractelement <2 x float> %29, i32 1
  %31 = fmul float %19, %30
  %32 = extractelement <2 x float> %29, i32 0
  %33 = fadd float %32, %31
  %34 = fmul float %17, %33
  %35 = fmul float %16, %34
  %36 = fadd float %16, %35
  %37 = and i32 %15, 1
  %38 = icmp eq i32 %37, 0
  %39 = fsub float 0x3FF921FB60000000, %36
  %40 = select i1 %38, float %36, float %39
  %41 = fsub float -0.000000e+00, %40
  %42 = select i1 %6, float %41, float %40
  ret float %42
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atan2f_u35(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp olt float %1, 0.000000e+00
  %7 = fsub float -0.000000e+00, %1
  %8 = select i1 %6, i32 -2, i32 0
  %9 = select i1 %6, float %7, float %1
  %10 = fcmp olt float %9, %5
  %11 = fsub float -0.000000e+00, %9
  %12 = zext i1 %10 to i32
  %13 = or i32 %8, %12
  %14 = select i1 %10, float %5, float %9
  %15 = select i1 %10, float %11, float %5
  %16 = fdiv float %15, %14
  %17 = fmul float %16, %16
  %18 = fmul float %17, %17
  %19 = fmul float %18, %18
  %20 = fmul float %17, 0x3F672199A0000000
  %21 = fadd float %20, 0xBF905701A0000000
  %22 = fmul float %17, 0x3FA5C336C0000000
  %23 = fadd float %22, 0xBFB32BFF40000000
  %24 = fmul float %18, %21
  %25 = fadd float %23, %24
  %26 = fmul float %17, 0x3FBB399E40000000
  %27 = fadd float %26, 0xBFC22DF3E0000000
  %28 = fmul float %17, 0x3FC99734E0000000
  %29 = fadd float %28, 0xBFD5554BA0000000
  %30 = fmul float %18, %27
  %31 = fadd float %29, %30
  %32 = fmul float %19, %25
  %33 = fadd float %31, %32
  %34 = fmul float %17, %33
  %35 = fmul float %16, %34
  %36 = fadd float %16, %35
  %37 = sitofp i32 %13 to float
  %38 = fmul float %37, 0x3FF921FB60000000
  %39 = fadd float %38, %36
  %40 = bitcast float %39 to i32
  %41 = bitcast float %1 to i32
  %42 = and i32 %41, -2147483648
  %43 = xor i32 %42, %40
  %44 = bitcast i32 %43 to float
  %45 = fcmp oeq float %1, 0x7FF0000000000000
  %46 = fcmp oeq float %1, 0xFFF0000000000000
  %47 = or i1 %45, %46
  %48 = fcmp oeq float %1, 0.000000e+00
  %49 = or i1 %48, %47
  br i1 %49, label %50, label %58

; <label>:50:                                     ; preds = %2
  br i1 %47, label %51, label %55

; <label>:51:                                     ; preds = %50
  %52 = or i32 %42, 1065353216
  %53 = bitcast i32 %52 to float
  %54 = fmul float %53, 0x3FF921FB60000000
  br label %55

; <label>:55:                                     ; preds = %50, %51
  %56 = phi float [ %54, %51 ], [ 0.000000e+00, %50 ]
  %57 = fsub float 0x3FF921FB60000000, %56
  br label %58

; <label>:58:                                     ; preds = %2, %55
  %59 = phi float [ %57, %55 ], [ %44, %2 ]
  %60 = fcmp une float %0, 0x7FF0000000000000
  %61 = fcmp une float %0, 0xFFF0000000000000
  %62 = and i1 %61, %60
  br i1 %62, label %71, label %63

; <label>:63:                                     ; preds = %58
  br i1 %47, label %64, label %68

; <label>:64:                                     ; preds = %63
  %65 = or i32 %42, 1065353216
  %66 = bitcast i32 %65 to float
  %67 = fmul float %66, 0x3FE921FB60000000
  br label %68

; <label>:68:                                     ; preds = %63, %64
  %69 = phi float [ %67, %64 ], [ 0.000000e+00, %63 ]
  %70 = fsub float 0x3FF921FB60000000, %69
  br label %71

; <label>:71:                                     ; preds = %58, %68
  %72 = phi float [ %70, %68 ], [ %59, %58 ]
  %73 = fcmp oeq float %0, 0.000000e+00
  br i1 %73, label %74, label %79

; <label>:74:                                     ; preds = %71
  %75 = or i32 %42, 1065353216
  %76 = bitcast i32 %75 to float
  %77 = fcmp oeq float %76, -1.000000e+00
  %78 = select i1 %77, float 0x400921FB60000000, float 0.000000e+00
  br label %79

; <label>:79:                                     ; preds = %74, %71
  %80 = phi float [ %78, %74 ], [ %72, %71 ]
  %81 = fcmp ord float %0, %1
  br i1 %81, label %82, label %87

; <label>:82:                                     ; preds = %79
  %83 = bitcast float %80 to i32
  %84 = and i32 %3, -2147483648
  %85 = xor i32 %84, %83
  %86 = bitcast i32 %85 to float
  br label %87

; <label>:87:                                     ; preds = %79, %82
  %88 = phi float [ %86, %82 ], [ 0x7FF8000000000000, %79 ]
  ret float %88
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinf_u35(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  br i1 %5, label %6, label %8

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, %0
  br label %12

; <label>:8:                                      ; preds = %1
  %9 = fsub float 1.000000e+00, %4
  %10 = fmul float %9, 5.000000e-01
  %11 = tail call float @sqrtf(float %10) #3
  br label %12

; <label>:12:                                     ; preds = %8, %6
  %13 = phi float [ %7, %6 ], [ %10, %8 ]
  %14 = phi float [ %4, %6 ], [ %11, %8 ]
  %15 = fmul float %13, 0x3FA57DB020000000
  %16 = fadd float %15, 0x3F98D27DC0000000
  %17 = fmul float %13, %16
  %18 = fadd float %17, 0x3FA7486640000000
  %19 = fmul float %13, %18
  %20 = fadd float %19, 0x3FB32FF140000000
  %21 = fmul float %13, %20
  %22 = fadd float %21, 0x3FC5555E40000000
  %23 = fmul float %13, %14
  %24 = fmul float %23, %22
  %25 = fadd float %14, %24
  %26 = fmul float %25, 2.000000e+00
  %27 = fsub float 0x3FF921FB60000000, %26
  %28 = select i1 %5, float %25, float %27
  %29 = bitcast float %28 to i32
  %30 = and i32 %2, -2147483648
  %31 = xor i32 %30, %29
  %32 = bitcast i32 %31 to float
  ret float %32
}

; Function Attrs: nounwind
declare float @sqrtf(float) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define float @Sleef_acosf_u35(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  br i1 %5, label %6, label %8

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, %0
  br label %12

; <label>:8:                                      ; preds = %1
  %9 = fsub float 1.000000e+00, %4
  %10 = fmul float %9, 5.000000e-01
  %11 = tail call float @sqrtf(float %10) #3
  br label %12

; <label>:12:                                     ; preds = %8, %6
  %13 = phi float [ %7, %6 ], [ %10, %8 ]
  %14 = phi float [ %4, %6 ], [ %11, %8 ]
  %15 = fcmp oeq float %4, 1.000000e+00
  %16 = select i1 %15, float 0.000000e+00, float %14
  %17 = fmul float %13, 0x3FA57DB020000000
  %18 = fadd float %17, 0x3F98D27DC0000000
  %19 = fmul float %13, %18
  %20 = fadd float %19, 0x3FA7486640000000
  %21 = fmul float %13, %20
  %22 = fadd float %21, 0x3FB32FF140000000
  %23 = fmul float %13, %22
  %24 = fadd float %23, 0x3FC5555E40000000
  %25 = fmul float %13, %16
  %26 = fmul float %25, %24
  %27 = bitcast float %16 to i32
  %28 = and i32 %2, -2147483648
  %29 = xor i32 %28, %27
  %30 = bitcast i32 %29 to float
  %31 = bitcast float %26 to i32
  %32 = xor i32 %28, %31
  %33 = bitcast i32 %32 to float
  %34 = fadd float %30, %33
  %35 = fsub float 0x3FF921FB60000000, %34
  %36 = fadd float %16, %26
  %37 = fmul float %36, 2.000000e+00
  %38 = select i1 %5, float %35, float %37
  %39 = xor i1 %5, true
  %40 = fcmp olt float %0, 0.000000e+00
  %41 = and i1 %40, %39
  %42 = fsub float 0x400921FB60000000, %38
  %43 = select i1 %41, float %42, float %38
  ret float %43
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atan2f_u10(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %1 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp olt float %5, 0x37F0000080000000
  %7 = fmul float %0, 0x4170000000000000
  %8 = fmul float %1, 0x4170000000000000
  %9 = select i1 %6, float %8, float %1
  %10 = select i1 %6, float %7, float %0
  %11 = bitcast float %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = bitcast i32 %12 to float
  %14 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %13, i32 0
  %15 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %9, i32 0
  %16 = tail call fastcc <2 x float> @atan2kf_u1(<2 x float> %14, <2 x float> %15)
  %17 = extractelement <2 x float> %16, i32 0
  %18 = extractelement <2 x float> %16, i32 1
  %19 = fadd float %17, %18
  %20 = bitcast float %19 to i32
  %21 = bitcast float %9 to i32
  %22 = and i32 %21, -2147483648
  %23 = xor i32 %22, %20
  %24 = bitcast i32 %23 to float
  %25 = fcmp oeq float %9, 0x7FF0000000000000
  %26 = fcmp oeq float %9, 0xFFF0000000000000
  %27 = or i1 %25, %26
  %28 = fcmp oeq float %9, 0.000000e+00
  %29 = or i1 %28, %27
  br i1 %29, label %30, label %38

; <label>:30:                                     ; preds = %2
  br i1 %27, label %31, label %35

; <label>:31:                                     ; preds = %30
  %32 = or i32 %22, 1065353216
  %33 = bitcast i32 %32 to float
  %34 = fmul float %33, 0x3FF921FB60000000
  br label %35

; <label>:35:                                     ; preds = %30, %31
  %36 = phi float [ %34, %31 ], [ 0.000000e+00, %30 ]
  %37 = fsub float 0x3FF921FB60000000, %36
  br label %38

; <label>:38:                                     ; preds = %2, %35
  %39 = phi float [ %37, %35 ], [ %24, %2 ]
  %40 = fcmp une float %10, 0x7FF0000000000000
  %41 = fcmp une float %10, 0xFFF0000000000000
  %42 = and i1 %41, %40
  br i1 %42, label %51, label %43

; <label>:43:                                     ; preds = %38
  br i1 %27, label %44, label %48

; <label>:44:                                     ; preds = %43
  %45 = or i32 %22, 1065353216
  %46 = bitcast i32 %45 to float
  %47 = fmul float %46, 0x3FE921FB60000000
  br label %48

; <label>:48:                                     ; preds = %43, %44
  %49 = phi float [ %47, %44 ], [ 0.000000e+00, %43 ]
  %50 = fsub float 0x3FF921FB60000000, %49
  br label %51

; <label>:51:                                     ; preds = %38, %48
  %52 = phi float [ %50, %48 ], [ %39, %38 ]
  %53 = fcmp oeq float %10, 0.000000e+00
  br i1 %53, label %54, label %59

; <label>:54:                                     ; preds = %51
  %55 = or i32 %22, 1065353216
  %56 = bitcast i32 %55 to float
  %57 = fcmp oeq float %56, -1.000000e+00
  %58 = select i1 %57, float 0x400921FB60000000, float 0.000000e+00
  br label %59

; <label>:59:                                     ; preds = %54, %51
  %60 = phi float [ %58, %54 ], [ %52, %51 ]
  %61 = fcmp ord float %9, %10
  br i1 %61, label %62, label %67

; <label>:62:                                     ; preds = %59
  %63 = bitcast float %60 to i32
  %64 = and i32 %11, -2147483648
  %65 = xor i32 %64, %63
  %66 = bitcast i32 %65 to float
  br label %67

; <label>:67:                                     ; preds = %59, %62
  %68 = phi float [ %66, %62 ], [ 0x7FF8000000000000, %59 ]
  ret float %68
}

; Function Attrs: norecurse nounwind readnone uwtable
define internal fastcc <2 x float> @atan2kf_u1(<2 x float>, <2 x float>) unnamed_addr #0 {
  %3 = extractelement <2 x float> %1, i32 0
  %4 = fcmp olt float %3, 0.000000e+00
  %5 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %1
  %6 = extractelement <2 x float> %5, i32 0
  %7 = select i1 %4, float %6, float %3
  %8 = select i1 %4, i32 -2, i32 0
  %9 = select i1 %4, <2 x float> %5, <2 x float> %1
  %10 = extractelement <2 x float> %0, i32 0
  %11 = fcmp ogt float %10, %7
  br i1 %11, label %12, label %19

; <label>:12:                                     ; preds = %2
  %13 = fsub float -0.000000e+00, %7
  %14 = insertelement <2 x float> undef, float %13, i32 0
  %15 = extractelement <2 x float> %9, i32 1
  %16 = fsub float -0.000000e+00, %15
  %17 = insertelement <2 x float> %14, float %16, i32 1
  %18 = or i32 %8, 1
  br label %19

; <label>:19:                                     ; preds = %12, %2
  %20 = phi float [ %13, %12 ], [ %10, %2 ]
  %21 = phi float [ %10, %12 ], [ %7, %2 ]
  %22 = phi i32 [ %18, %12 ], [ %8, %2 ]
  %23 = phi <2 x float> [ %0, %12 ], [ %9, %2 ]
  %24 = phi <2 x float> [ %17, %12 ], [ %0, %2 ]
  %25 = fdiv float 1.000000e+00, %21
  %26 = bitcast float %21 to i32
  %27 = and i32 %26, -4096
  %28 = bitcast i32 %27 to float
  %29 = fsub float %21, %28
  %30 = bitcast float %25 to i32
  %31 = and i32 %30, -4096
  %32 = bitcast i32 %31 to float
  %33 = fsub float %25, %32
  %34 = bitcast float %20 to i32
  %35 = and i32 %34, -4096
  %36 = bitcast i32 %35 to float
  %37 = fsub float %20, %36
  %38 = fmul float %20, %25
  %39 = fmul float %36, %32
  %40 = fsub float %39, %38
  %41 = fmul float %33, %36
  %42 = fadd float %40, %41
  %43 = fmul float %37, %32
  %44 = fadd float %43, %42
  %45 = fmul float %37, %33
  %46 = fadd float %45, %44
  %47 = fmul float %28, %32
  %48 = fsub float 1.000000e+00, %47
  %49 = fmul float %33, %28
  %50 = fsub float %48, %49
  %51 = fmul float %29, %32
  %52 = fsub float %50, %51
  %53 = extractelement <2 x float> %24, i32 1
  %54 = extractelement <2 x float> %23, i32 1
  %55 = insertelement <2 x float> undef, float %54, i32 0
  %56 = insertelement <2 x float> %55, float %29, i32 1
  %57 = insertelement <2 x float> undef, float %38, i32 0
  %58 = insertelement <2 x float> %57, float %33, i32 1
  %59 = fmul <2 x float> %56, %58
  %60 = insertelement <2 x float> undef, float %53, i32 0
  %61 = insertelement <2 x float> %60, float %52, i32 1
  %62 = fsub <2 x float> %61, %59
  %63 = insertelement <2 x float> undef, float %25, i32 0
  %64 = insertelement <2 x float> %63, float %38, i32 1
  %65 = fmul <2 x float> %64, %62
  %66 = extractelement <2 x float> %65, i32 1
  %67 = fadd float %46, %66
  %68 = extractelement <2 x float> %65, i32 0
  %69 = fadd float %68, %67
  %70 = bitcast float %38 to i32
  %71 = and i32 %70, -4096
  %72 = bitcast i32 %71 to float
  %73 = fsub float %38, %72
  %74 = fmul float %38, %38
  %75 = fmul float %72, %72
  %76 = fsub float %75, %74
  %77 = fadd float %72, %72
  %78 = fmul float %77, %73
  %79 = fadd float %76, %78
  %80 = fmul float %73, %73
  %81 = fadd float %80, %79
  %82 = fadd float %69, %69
  %83 = fmul float %38, %82
  %84 = fadd float %81, %83
  %85 = fadd float %74, %84
  %86 = fsub float %74, %85
  %87 = fadd float %84, %86
  %88 = fmul float %85, 0x3F5CE6AA20000000
  %89 = fsub float 0x3F86191D60000000, %88
  %90 = fmul float %85, %89
  %91 = fadd float %90, 0xBF9FB30CE0000000
  %92 = fmul float %85, %91
  %93 = fadd float %92, 0x3FAD8FA3C0000000
  %94 = fmul float %85, %93
  %95 = fadd float %94, 0xBFB57A25C0000000
  %96 = fmul float %85, %95
  %97 = fadd float %96, 0x3FBC05CDC0000000
  %98 = fmul float %85, %97
  %99 = fadd float %98, 0xBFC2419880000000
  %100 = fmul float %85, %99
  %101 = fadd float %100, 0x3FC9990CA0000000
  %102 = fmul float %85, %101
  %103 = fadd float %102, 0xBFD5555360000000
  %104 = fsub float 0xBFD5555360000000, %103
  %105 = fadd float %102, %104
  %106 = bitcast float %85 to i32
  %107 = and i32 %106, -4096
  %108 = bitcast i32 %107 to float
  %109 = fsub float %85, %108
  %110 = bitcast float %103 to i32
  %111 = and i32 %110, -4096
  %112 = bitcast i32 %111 to float
  %113 = fsub float %103, %112
  %114 = fmul float %85, %103
  %115 = fmul float %108, %112
  %116 = fsub float %115, %114
  %117 = fmul float %109, %112
  %118 = fadd float %117, %116
  %119 = fmul float %113, %108
  %120 = fadd float %119, %118
  %121 = fmul float %109, %113
  %122 = fadd float %121, %120
  %123 = fmul float %85, %105
  %124 = fadd float %123, %122
  %125 = fmul float %87, %103
  %126 = fadd float %125, %124
  %127 = fadd float %114, 1.000000e+00
  %128 = fsub float 1.000000e+00, %127
  %129 = fadd float %114, %128
  %130 = fadd float %129, %126
  %131 = bitcast float %127 to i32
  %132 = and i32 %131, -4096
  %133 = bitcast i32 %132 to float
  %134 = fsub float %127, %133
  %135 = fmul float %38, %127
  %136 = fmul float %72, %133
  %137 = fsub float %136, %135
  %138 = fmul float %73, %133
  %139 = fadd float %138, %137
  %140 = fmul float %134, %72
  %141 = fadd float %140, %139
  %142 = fmul float %73, %134
  %143 = fadd float %142, %141
  %144 = fmul float %38, %130
  %145 = fadd float %143, %144
  %146 = fmul float %69, %127
  %147 = fadd float %146, %145
  %148 = sitofp i32 %22 to float
  %149 = bitcast float %148 to i32
  %150 = and i32 %149, -4096
  %151 = bitcast i32 %150 to float
  %152 = fsub float %148, %151
  %153 = fmul float %148, 0x3FF921FB60000000
  %154 = fmul float %151, 0x3FF9200000000000
  %155 = fsub float %154, %153
  %156 = fmul float %151, 0x3F3FB60000000000
  %157 = fadd float %156, %155
  %158 = fmul float %152, 0x3FF9200000000000
  %159 = fadd float %158, %157
  %160 = fmul float %152, 0x3F3FB60000000000
  %161 = fadd float %160, %159
  %162 = fmul float %148, 0x3E6777A5C0000000
  %163 = fsub float %161, %162
  %164 = fadd float %153, %135
  %165 = fsub float %164, %153
  %166 = fsub float %164, %165
  %167 = fsub float %153, %166
  %168 = fsub float %135, %165
  %169 = fadd float %168, %167
  %170 = fadd float %163, %147
  %171 = fadd float %169, %170
  %172 = insertelement <2 x float> undef, float %164, i32 0
  %173 = insertelement <2 x float> %172, float %171, i32 1
  ret <2 x float> %173
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinf_u10(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  br i1 %5, label %6, label %9

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, %0
  %8 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %4, i32 0
  br label %67

; <label>:9:                                      ; preds = %1
  %10 = fsub float 1.000000e+00, %4
  %11 = fmul float %10, 5.000000e-01
  %12 = tail call float @sqrtf(float %11) #3
  %13 = bitcast float %12 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %12, %15
  %17 = fmul float %12, %12
  %18 = fmul float %15, %15
  %19 = fsub float %18, %17
  %20 = fmul float %16, %15
  %21 = fadd float %20, %19
  %22 = fadd float %20, %21
  %23 = fmul float %16, %16
  %24 = fadd float %23, %22
  %25 = fadd float %11, %17
  %26 = fsub float %25, %11
  %27 = fsub float %25, %26
  %28 = fsub float %11, %27
  %29 = fsub float %17, %26
  %30 = fadd float %29, %28
  %31 = fadd float %30, %24
  %32 = fdiv float 1.000000e+00, %12
  %33 = bitcast float %32 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %32, %35
  %37 = fmul float %15, %35
  %38 = fsub float 1.000000e+00, %37
  %39 = fmul float %36, %15
  %40 = fsub float %38, %39
  %41 = fmul float %16, %35
  %42 = fsub float %40, %41
  %43 = fmul float %16, %36
  %44 = fsub float %42, %43
  %45 = fmul float %32, %44
  %46 = bitcast float %25 to i32
  %47 = and i32 %46, -4096
  %48 = bitcast i32 %47 to float
  %49 = fsub float %25, %48
  %50 = fmul float %32, %25
  %51 = fmul float %35, %48
  %52 = fsub float %51, %50
  %53 = fmul float %49, %35
  %54 = fadd float %53, %52
  %55 = fmul float %36, %48
  %56 = fadd float %55, %54
  %57 = fmul float %36, %49
  %58 = fadd float %57, %56
  %59 = fmul float %25, %45
  %60 = fadd float %58, %59
  %61 = fmul float %32, %31
  %62 = fadd float %61, %60
  %63 = fmul float %50, 5.000000e-01
  %64 = fmul float %62, 5.000000e-01
  %65 = insertelement <2 x float> undef, float %63, i32 0
  %66 = insertelement <2 x float> %65, float %64, i32 1
  br label %67

; <label>:67:                                     ; preds = %9, %6
  %68 = phi float [ %7, %6 ], [ %11, %9 ]
  %69 = phi <2 x float> [ %8, %6 ], [ %66, %9 ]
  %70 = fcmp oeq float %4, 1.000000e+00
  %71 = select i1 %70, <2 x float> zeroinitializer, <2 x float> %69
  %72 = fmul float %68, 0x3FA57DB020000000
  %73 = fadd float %72, 0x3F98D27DC0000000
  %74 = fmul float %68, %73
  %75 = fadd float %74, 0x3FA7486640000000
  %76 = fmul float %68, %75
  %77 = fadd float %76, 0x3FB32FF140000000
  %78 = fmul float %68, %77
  %79 = fadd float %78, 0x3FC5555E40000000
  %80 = extractelement <2 x float> %71, i32 0
  %81 = fmul float %68, %80
  %82 = fmul float %81, %79
  %83 = fsub float 0x3FE921FB60000000, %80
  %84 = fsub float 0x3FE921FB60000000, %83
  %85 = fsub float %84, %80
  %86 = fadd float %85, 0xBE5777A5C0000000
  %87 = extractelement <2 x float> %71, i32 1
  %88 = fsub float %86, %87
  %89 = fsub float %83, %82
  %90 = fsub float %83, %89
  %91 = fsub float %90, %82
  %92 = fadd float %88, %91
  %93 = fadd float %80, %82
  %94 = fadd float %89, %92
  %95 = fmul float %94, 2.000000e+00
  %96 = select i1 %5, float %93, float %95
  %97 = bitcast float %96 to i32
  %98 = and i32 %2, -2147483648
  %99 = xor i32 %98, %97
  %100 = bitcast i32 %99 to float
  ret float %100
}

; Function Attrs: nounwind uwtable
define float @Sleef_acosf_u10(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 5.000000e-01
  br i1 %5, label %6, label %9

; <label>:6:                                      ; preds = %1
  %7 = fmul float %0, %0
  %8 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %4, i32 0
  br label %67

; <label>:9:                                      ; preds = %1
  %10 = fsub float 1.000000e+00, %4
  %11 = fmul float %10, 5.000000e-01
  %12 = tail call float @sqrtf(float %11) #3
  %13 = bitcast float %12 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %12, %15
  %17 = fmul float %12, %12
  %18 = fmul float %15, %15
  %19 = fsub float %18, %17
  %20 = fmul float %16, %15
  %21 = fadd float %20, %19
  %22 = fadd float %20, %21
  %23 = fmul float %16, %16
  %24 = fadd float %23, %22
  %25 = fadd float %11, %17
  %26 = fsub float %25, %11
  %27 = fsub float %25, %26
  %28 = fsub float %11, %27
  %29 = fsub float %17, %26
  %30 = fadd float %29, %28
  %31 = fadd float %30, %24
  %32 = fdiv float 1.000000e+00, %12
  %33 = bitcast float %32 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %32, %35
  %37 = fmul float %15, %35
  %38 = fsub float 1.000000e+00, %37
  %39 = fmul float %36, %15
  %40 = fsub float %38, %39
  %41 = fmul float %16, %35
  %42 = fsub float %40, %41
  %43 = fmul float %16, %36
  %44 = fsub float %42, %43
  %45 = fmul float %32, %44
  %46 = bitcast float %25 to i32
  %47 = and i32 %46, -4096
  %48 = bitcast i32 %47 to float
  %49 = fsub float %25, %48
  %50 = fmul float %32, %25
  %51 = fmul float %35, %48
  %52 = fsub float %51, %50
  %53 = fmul float %49, %35
  %54 = fadd float %53, %52
  %55 = fmul float %36, %48
  %56 = fadd float %55, %54
  %57 = fmul float %36, %49
  %58 = fadd float %57, %56
  %59 = fmul float %25, %45
  %60 = fadd float %58, %59
  %61 = fmul float %32, %31
  %62 = fadd float %61, %60
  %63 = fmul float %50, 5.000000e-01
  %64 = fmul float %62, 5.000000e-01
  %65 = insertelement <2 x float> undef, float %63, i32 0
  %66 = insertelement <2 x float> %65, float %64, i32 1
  br label %67

; <label>:67:                                     ; preds = %9, %6
  %68 = phi float [ %7, %6 ], [ %11, %9 ]
  %69 = phi <2 x float> [ %8, %6 ], [ %66, %9 ]
  %70 = fcmp oeq float %4, 1.000000e+00
  %71 = select i1 %70, <2 x float> zeroinitializer, <2 x float> %69
  %72 = fmul float %68, 0x3FA57DB020000000
  %73 = fadd float %72, 0x3F98D27DC0000000
  %74 = fmul float %68, %73
  %75 = fadd float %74, 0x3FA7486640000000
  %76 = fmul float %68, %75
  %77 = fadd float %76, 0x3FB32FF140000000
  %78 = fmul float %68, %77
  %79 = fadd float %78, 0x3FC5555E40000000
  %80 = extractelement <2 x float> %71, i32 0
  %81 = fmul float %80, %79
  %82 = fmul float %68, %81
  %83 = bitcast float %80 to i32
  %84 = and i32 %2, -2147483648
  %85 = xor i32 %84, %83
  %86 = bitcast i32 %85 to float
  %87 = bitcast float %82 to i32
  %88 = xor i32 %84, %87
  %89 = bitcast i32 %88 to float
  %90 = fadd float %86, %89
  %91 = fsub float %86, %90
  %92 = fadd float %91, %89
  %93 = fsub float 0x3FF921FB60000000, %90
  %94 = fsub float 0x3FF921FB60000000, %93
  %95 = fsub float %94, %90
  %96 = fadd float %95, 0xBE6777A5C0000000
  %97 = fsub float %96, %92
  %98 = insertelement <2 x float> undef, float %93, i32 0
  %99 = insertelement <2 x float> %98, float %97, i32 1
  %100 = fadd float %80, %82
  br i1 %5, label %119, label %101

; <label>:101:                                    ; preds = %67
  %102 = extractelement <2 x float> %71, i32 1
  %103 = fsub float %80, %100
  %104 = fadd float %82, %103
  %105 = fadd float %102, %104
  %106 = fmul float %100, 2.000000e+00
  %107 = fmul float %105, 2.000000e+00
  %108 = insertelement <2 x float> undef, float %106, i32 0
  %109 = insertelement <2 x float> %108, float %107, i32 1
  %110 = fcmp olt float %0, 0.000000e+00
  br i1 %110, label %111, label %119

; <label>:111:                                    ; preds = %101
  %112 = fsub float 0x400921FB60000000, %106
  %113 = fsub float 0x400921FB60000000, %112
  %114 = fsub float %113, %106
  %115 = fadd float %114, 0xBE7777A5C0000000
  %116 = fsub float %115, %107
  %117 = insertelement <2 x float> undef, float %112, i32 0
  %118 = insertelement <2 x float> %117, float %116, i32 1
  br label %119

; <label>:119:                                    ; preds = %67, %101, %111
  %120 = phi <2 x float> [ %118, %111 ], [ %109, %101 ], [ %99, %67 ]
  %121 = extractelement <2 x float> %120, i32 0
  %122 = extractelement <2 x float> %120, i32 1
  %123 = fadd float %121, %122
  ret float %123
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atanf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %4, i32 0
  %6 = tail call fastcc <2 x float> @atan2kf_u1(<2 x float> %5, <2 x float> <float 1.000000e+00, float 0.000000e+00>)
  %7 = extractelement <2 x float> %6, i32 0
  %8 = extractelement <2 x float> %6, i32 1
  %9 = fadd float %7, %8
  %10 = fcmp une float %0, 0x7FF0000000000000
  %11 = fcmp une float %0, 0xFFF0000000000000
  %12 = and i1 %11, %10
  %13 = bitcast float %9 to i32
  %14 = select i1 %12, i32 %13, i32 1070141403
  %15 = and i32 %2, -2147483648
  %16 = xor i32 %14, %15
  %17 = bitcast i32 %16 to float
  ret float %17
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_logf_u35(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %3, float %0
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = fadd float %13, -1.000000e+00
  %15 = fadd float %13, 1.000000e+00
  %16 = fdiv float %14, %15
  %17 = fmul float %16, %16
  %18 = fcmp olt float %4, 0.000000e+00
  br i1 %18, label %39, label %19

; <label>:19:                                     ; preds = %1
  %20 = fcmp une float %4, 0xFFF0000000000000
  %21 = fcmp une float %4, 0x7FF0000000000000
  %22 = and i1 %20, %21
  %23 = fmul float %17, 0x3FCEA0D200000000
  %24 = fadd float %23, 0x3FD2406C80000000
  %25 = fmul float %17, %24
  %26 = fadd float %25, 0x3FD999B240000000
  %27 = fmul float %17, %26
  %28 = fadd float %27, 0x3FE5555560000000
  %29 = fmul float %17, %28
  %30 = fadd float %29, 2.000000e+00
  %31 = fmul float %16, %30
  %32 = select i1 %2, i32 -191, i32 -127
  %33 = add nsw i32 %8, %32
  %34 = sitofp i32 %33 to float
  %35 = fmul float %34, 0x3FE62E4300000000
  %36 = fadd float %35, %31
  %37 = select i1 %22, float %36, float 0x7FF0000000000000
  %38 = fcmp ord float %4, 0.000000e+00
  br i1 %38, label %40, label %39

; <label>:39:                                     ; preds = %19, %1
  br label %40

; <label>:40:                                     ; preds = %19, %39
  %41 = phi float [ 0x7FF8000000000000, %39 ], [ %37, %19 ]
  %42 = fcmp oeq float %4, 0.000000e+00
  %43 = select i1 %42, float 0xFFF0000000000000, float %41
  ret float %43
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_expf_u10(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x3FF7154760000000
  %3 = fcmp olt float %2, 0.000000e+00
  %4 = select i1 %3, float -5.000000e-01, float 5.000000e-01
  %5 = fadd float %2, %4
  %6 = fptosi float %5 to i32
  %7 = sitofp i32 %6 to float
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0x3FE62E4000000000
  %11 = fsub float %0, %10
  %12 = fmul float %9, 0x3EB7F7D1C0000000
  %13 = fsub float %11, %12
  %14 = fmul float %13, 0x3F2A057B40000000
  %15 = fadd float %14, 0x3F56D2D920000000
  %16 = fmul float %13, %15
  %17 = fadd float %16, 0x3F811114C0000000
  %18 = fmul float %13, %17
  %19 = fadd float %18, 0x3FA5554F40000000
  %20 = fmul float %13, %19
  %21 = fadd float %20, 0x3FC5555560000000
  %22 = fmul float %13, %21
  %23 = fadd float %22, 5.000000e-01
  %24 = fmul float %13, %13
  %25 = fmul float %24, %23
  %26 = fadd float %13, %25
  %27 = fadd float %26, 1.000000e+00
  %28 = ashr i32 %8, 1
  %29 = shl i32 %28, 23
  %30 = add i32 %29, 1065353216
  %31 = bitcast i32 %30 to float
  %32 = fmul float %27, %31
  %33 = sub nsw i32 %8, %28
  %34 = shl i32 %33, 23
  %35 = add i32 %34, 1065353216
  %36 = bitcast i32 %35 to float
  %37 = fmul float %32, %36
  %38 = fcmp olt float %0, -1.040000e+02
  %39 = select i1 %38, float 0.000000e+00, float %37
  %40 = fcmp ogt float %0, 1.040000e+02
  %41 = select i1 %40, float 0x7FF0000000000000, float %39
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_logf_u10(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %3, float %0
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -191, i32 -127
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fadd float %13, 1.000000e+00
  %19 = fadd float %18, -1.000000e+00
  %20 = fdiv float 1.000000e+00, %18
  %21 = bitcast float %18 to i32
  %22 = and i32 %21, -4096
  %23 = bitcast i32 %22 to float
  %24 = fsub float %18, %23
  %25 = bitcast float %20 to i32
  %26 = and i32 %25, -4096
  %27 = bitcast i32 %26 to float
  %28 = fsub float %20, %27
  %29 = bitcast float %16 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %16, %31
  %33 = fmul float %16, %20
  %34 = fmul float %33, %33
  %35 = fmul float %34, 0x3FD35FEB80000000
  %36 = fadd float %35, 0x3FD9933940000000
  %37 = fmul float %34, %36
  %38 = fadd float %37, 0x3FE5555B40000000
  %39 = sitofp i32 %15 to float
  %40 = bitcast float %39 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %39, %42
  %44 = fmul float %39, 0x3FE62E4300000000
  %45 = fmul float %33, 2.000000e+00
  %46 = fadd float %44, %45
  %47 = fmul float %33, %34
  %48 = fmul float %47, %38
  %49 = fadd float %46, %48
  %50 = fcmp olt float %4, 0.000000e+00
  br i1 %50, label %106, label %51

; <label>:51:                                     ; preds = %1
  %52 = fcmp une float %4, 0xFFF0000000000000
  %53 = fcmp une float %4, 0x7FF0000000000000
  %54 = and i1 %52, %53
  %55 = fsub float %13, %17
  %56 = fsub float %16, %17
  %57 = fsub float -1.000000e+00, %56
  %58 = fadd float %55, %57
  %59 = fsub float %13, %19
  %60 = fsub float %18, %19
  %61 = fsub float 1.000000e+00, %60
  %62 = fadd float %59, %61
  %63 = fmul float %33, %62
  %64 = fsub float %58, %63
  %65 = fmul float %20, %64
  %66 = fmul float %32, %28
  %67 = fmul float %32, %27
  %68 = fmul float %31, %27
  %69 = fsub float %68, %33
  %70 = fmul float %28, %31
  %71 = fadd float %69, %70
  %72 = fadd float %67, %71
  %73 = fadd float %66, %72
  %74 = fmul float %23, %27
  %75 = fsub float 1.000000e+00, %74
  %76 = fmul float %28, %23
  %77 = fsub float %75, %76
  %78 = fmul float %24, %27
  %79 = fsub float %77, %78
  %80 = fmul float %24, %28
  %81 = fsub float %79, %80
  %82 = fmul float %33, %81
  %83 = fadd float %73, %82
  %84 = fadd float %65, %83
  %85 = fmul float %84, 2.000000e+00
  %86 = fmul float %39, 0x3E205C6100000000
  %87 = fmul float %43, 0x3F00C00000000000
  %88 = fmul float %43, 0x3FE62E0000000000
  %89 = fmul float %42, 0x3FE62E0000000000
  %90 = fsub float %89, %44
  %91 = fmul float %42, 0x3F00C00000000000
  %92 = fadd float %91, %90
  %93 = fadd float %88, %92
  %94 = fadd float %87, %93
  %95 = fsub float %94, %86
  %96 = fsub float %44, %46
  %97 = fadd float %45, %96
  %98 = fadd float %95, %97
  %99 = fadd float %98, %85
  %100 = fsub float %46, %49
  %101 = fadd float %48, %100
  %102 = fadd float %101, %99
  %103 = fadd float %49, %102
  %104 = select i1 %54, float %103, float 0x7FF0000000000000
  %105 = fcmp ord float %4, 0.000000e+00
  br i1 %105, label %107, label %106

; <label>:106:                                    ; preds = %51, %1
  br label %107

; <label>:107:                                    ; preds = %51, %106
  %108 = phi float [ 0x7FF8000000000000, %106 ], [ %104, %51 ]
  %109 = fcmp oeq float %4, 0.000000e+00
  %110 = select i1 %109, float 0xFFF0000000000000, float %108
  ret float %110
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_powf_u10(float, float) local_unnamed_addr #0 {
  %3 = fptosi float %1 to i32
  %4 = sitofp i32 %3 to float
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %11, label %6

; <label>:6:                                      ; preds = %2
  %7 = bitcast float %1 to i32
  %8 = and i32 %7, 2147483647
  %9 = bitcast i32 %8 to float
  %10 = fcmp oge float %9, 0x4170000000000000
  br label %11

; <label>:11:                                     ; preds = %6, %2
  %12 = phi i1 [ true, %2 ], [ %10, %6 ]
  %13 = and i32 %3, 1
  %14 = icmp ne i32 %13, 0
  %15 = and i1 %14, %12
  %16 = bitcast float %1 to i32
  br i1 %15, label %17, label %21

; <label>:17:                                     ; preds = %11
  %18 = and i32 %16, 2147483647
  %19 = bitcast i32 %18 to float
  %20 = fcmp olt float %19, 0x4170000000000000
  br label %21

; <label>:21:                                     ; preds = %11, %17
  %22 = phi i1 [ %20, %17 ], [ false, %11 ]
  %23 = bitcast float %0 to i32
  %24 = and i32 %23, 2147483647
  %25 = bitcast i32 %24 to float
  %26 = fcmp olt float %25, 0x3810000000000000
  %27 = fmul float %25, 0x43F0000000000000
  %28 = select i1 %26, float %27, float %25
  %29 = fmul float %28, 0x3FF5555560000000
  %30 = bitcast float %29 to i32
  %31 = lshr i32 %30, 23
  %32 = and i32 %31, 255
  %33 = bitcast float %28 to i32
  %34 = shl nuw nsw i32 %32, 23
  %35 = add i32 %33, 1065353216
  %36 = sub i32 %35, %34
  %37 = bitcast i32 %36 to float
  %38 = select i1 %26, i32 -191, i32 -127
  %39 = add nsw i32 %32, %38
  %40 = fadd float %37, -1.000000e+00
  %41 = fadd float %40, 1.000000e+00
  %42 = fsub float %40, %41
  %43 = fsub float -1.000000e+00, %42
  %44 = fsub float %37, %41
  %45 = fadd float %44, %43
  %46 = fadd float %37, 1.000000e+00
  %47 = fadd float %46, -1.000000e+00
  %48 = fsub float %46, %47
  %49 = fsub float 1.000000e+00, %48
  %50 = fsub float %37, %47
  %51 = fadd float %50, %49
  %52 = fdiv float 1.000000e+00, %46
  %53 = bitcast float %46 to i32
  %54 = and i32 %53, -4096
  %55 = bitcast i32 %54 to float
  %56 = fsub float %46, %55
  %57 = bitcast float %52 to i32
  %58 = and i32 %57, -4096
  %59 = bitcast i32 %58 to float
  %60 = fsub float %52, %59
  %61 = bitcast float %40 to i32
  %62 = and i32 %61, -4096
  %63 = bitcast i32 %62 to float
  %64 = fsub float %40, %63
  %65 = fmul float %40, %52
  %66 = fmul float %63, %59
  %67 = fsub float %66, %65
  %68 = fmul float %60, %63
  %69 = fadd float %67, %68
  %70 = fmul float %64, %59
  %71 = fadd float %70, %69
  %72 = fmul float %64, %60
  %73 = fadd float %72, %71
  %74 = fmul float %55, %59
  %75 = fsub float 1.000000e+00, %74
  %76 = fmul float %60, %55
  %77 = fsub float %75, %76
  %78 = fmul float %56, %59
  %79 = fsub float %77, %78
  %80 = fmul float %56, %60
  %81 = fsub float %79, %80
  %82 = fmul float %65, %81
  %83 = fadd float %73, %82
  %84 = fmul float %65, %51
  %85 = fsub float %45, %84
  %86 = fmul float %52, %85
  %87 = fadd float %86, %83
  %88 = bitcast float %65 to i32
  %89 = and i32 %88, -4096
  %90 = bitcast i32 %89 to float
  %91 = fsub float %65, %90
  %92 = fmul float %65, %65
  %93 = fmul float %90, %90
  %94 = fsub float %93, %92
  %95 = fadd float %90, %90
  %96 = fmul float %95, %91
  %97 = fadd float %94, %96
  %98 = fmul float %91, %91
  %99 = fadd float %98, %97
  %100 = fadd float %87, %87
  %101 = fmul float %65, %100
  %102 = fadd float %99, %101
  %103 = fmul float %92, 0x3FCEC2D140000000
  %104 = fadd float %103, 0x3FD23F4940000000
  %105 = fmul float %92, %104
  %106 = fadd float %105, 0x3FD999BB20000000
  %107 = sitofp i32 %39 to float
  %108 = bitcast float %107 to i32
  %109 = and i32 %108, -4096
  %110 = bitcast i32 %109 to float
  %111 = fsub float %107, %110
  %112 = fmul float %110, 0x3FE62E0000000000
  %113 = fmul float %65, %92
  %114 = fmul float %92, %106
  %115 = fadd float %114, 0x3FE5555540000000
  %116 = bitcast float %113 to i32
  %117 = and i32 %116, -4096
  %118 = bitcast i32 %117 to float
  %119 = bitcast float %115 to i32
  %120 = and i32 %119, -4096
  %121 = bitcast i32 %120 to float
  %122 = fsub float %115, %121
  %123 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %122, i32 1
  %124 = insertelement <2 x float> undef, float %107, i32 0
  %125 = insertelement <2 x float> %124, float %118, i32 1
  %126 = fmul <2 x float> %123, %125
  %127 = extractelement <2 x float> %126, i32 0
  %128 = fsub float %112, %127
  %129 = fmul float %110, 0x3F00C00000000000
  %130 = fadd float %129, %128
  %131 = fmul float %111, 0x3FE62E0000000000
  %132 = fadd float %131, %130
  %133 = fmul float %111, 0x3F00C00000000000
  %134 = fadd float %133, %132
  %135 = fmul float %107, 0x3E205C6100000000
  %136 = fsub float %134, %135
  %137 = bitcast float %92 to i32
  %138 = and i32 %137, -4096
  %139 = bitcast i32 %138 to float
  %140 = fsub float %92, %139
  %141 = fmul float %90, %139
  %142 = fsub float %141, %113
  %143 = fmul float %140, %90
  %144 = fadd float %143, %142
  %145 = fmul float %91, %139
  %146 = fadd float %145, %144
  %147 = fmul float %91, %140
  %148 = fadd float %147, %146
  %149 = fmul float %92, %87
  %150 = fadd float %148, %149
  %151 = fmul float %65, %102
  %152 = fadd float %150, %151
  %153 = bitcast float %106 to i32
  %154 = and i32 %153, -4096
  %155 = bitcast i32 %154 to float
  %156 = fsub float %106, %155
  %157 = fmul float %139, %155
  %158 = fsub float %157, %114
  %159 = fmul float %140, %155
  %160 = fadd float %159, %158
  %161 = fmul float %156, %139
  %162 = fadd float %161, %160
  %163 = fmul float %140, %156
  %164 = fadd float %163, %162
  %165 = fmul float %106, %102
  %166 = fadd float %164, %165
  %167 = fsub float %115, %114
  %168 = fsub float %115, %167
  %169 = fsub float %114, %168
  %170 = fsub float 0x3FE5555540000000, %167
  %171 = fadd float %170, %169
  %172 = fadd float %166, 0x3E2FB67060000000
  %173 = fadd float %171, %172
  %174 = fsub float %113, %118
  %175 = fmul float %113, %115
  %176 = fmul float %118, %121
  %177 = fsub float %176, %175
  %178 = fmul float %174, %121
  %179 = insertelement <2 x float> <float 2.000000e+00, float undef>, float %174, i32 1
  %180 = insertelement <2 x float> undef, float %65, i32 0
  %181 = insertelement <2 x float> %180, float %122, i32 1
  %182 = fmul <2 x float> %179, %181
  %183 = insertelement <2 x float> undef, float %127, i32 0
  %184 = insertelement <2 x float> %183, float %178, i32 1
  %185 = extractelement <2 x float> %182, i32 0
  %186 = insertelement <2 x float> undef, float %185, i32 0
  %187 = insertelement <2 x float> %186, float %177, i32 1
  %188 = fadd <2 x float> %184, %187
  %189 = fsub <2 x float> %126, %188
  %190 = fadd <2 x float> %126, %188
  %191 = shufflevector <2 x float> %189, <2 x float> %190, <2 x i32> <i32 0, i32 3>
  %192 = fadd <2 x float> %182, %191
  %193 = fmul float %113, %173
  %194 = insertelement <2 x float> undef, float %136, i32 0
  %195 = insertelement <2 x float> %194, float %193, i32 1
  %196 = fadd <2 x float> %192, %195
  %197 = insertelement <2 x float> <float 2.000000e+00, float undef>, float %115, i32 1
  %198 = insertelement <2 x float> undef, float %87, i32 0
  %199 = insertelement <2 x float> %198, float %152, i32 1
  %200 = fmul <2 x float> %197, %199
  %201 = fadd <2 x float> %196, %200
  %202 = extractelement <2 x float> %188, i32 0
  %203 = fadd float %202, %175
  %204 = fsub float %202, %203
  %205 = fadd float %175, %204
  %206 = extractelement <2 x float> %201, i32 0
  %207 = fadd float %205, %206
  %208 = extractelement <2 x float> %201, i32 1
  %209 = fadd float %207, %208
  %210 = bitcast float %203 to i32
  %211 = and i32 %210, -4096
  %212 = bitcast i32 %211 to float
  %213 = fsub float %203, %212
  %214 = and i32 %16, -4096
  %215 = bitcast i32 %214 to float
  %216 = fsub float %1, %215
  %217 = fmul float %203, %1
  %218 = fmul float %215, %212
  %219 = fsub float %218, %217
  %220 = fmul float %213, %215
  %221 = fadd float %219, %220
  %222 = fmul float %216, %212
  %223 = fadd float %222, %221
  %224 = fmul float %216, %213
  %225 = fadd float %224, %223
  %226 = fmul float %209, %1
  %227 = fadd float %225, %226
  %228 = fadd float %217, %227
  %229 = fmul float %228, 0x3FF7154760000000
  %230 = fcmp olt float %229, 0.000000e+00
  %231 = select i1 %230, float -5.000000e-01, float 5.000000e-01
  %232 = fadd float %229, %231
  %233 = fptosi float %232 to i32
  %234 = sitofp i32 %233 to float
  %235 = fptosi float %234 to i32
  %236 = sitofp i32 %235 to float
  %237 = fmul float %236, 0xBFE62E4000000000
  %238 = fadd float %217, %237
  %239 = fsub float %238, %217
  %240 = fsub float %238, %239
  %241 = fsub float %217, %240
  %242 = fsub float %237, %239
  %243 = fadd float %242, %241
  %244 = fadd float %227, %243
  %245 = fmul float %236, 0xBEB7F7D1C0000000
  %246 = fadd float %245, %238
  %247 = fsub float %246, %238
  %248 = fsub float %246, %247
  %249 = fsub float %238, %248
  %250 = fsub float %245, %247
  %251 = fadd float %250, %249
  %252 = fadd float %244, %251
  %253 = fadd float %246, %252
  %254 = fsub float %246, %253
  %255 = fadd float %252, %254
  %256 = fmul float %253, 0x3F5655DEC0000000
  %257 = fadd float %256, 0x3F81222D60000000
  %258 = fmul float %253, %257
  %259 = fadd float %258, 0x3FA555E980000000
  %260 = fmul float %253, %259
  %261 = fadd float %260, 0x3FC5554BC0000000
  %262 = fmul float %253, %261
  %263 = fadd float %262, 0x3FDFFFFF60000000
  %264 = bitcast float %253 to i32
  %265 = and i32 %264, -4096
  %266 = bitcast i32 %265 to float
  %267 = fsub float %253, %266
  %268 = fmul float %253, %253
  %269 = fmul float %266, %266
  %270 = fsub float %269, %268
  %271 = fadd float %266, %266
  %272 = fmul float %271, %267
  %273 = fadd float %270, %272
  %274 = fmul float %267, %267
  %275 = fadd float %274, %273
  %276 = fadd float %255, %255
  %277 = fmul float %253, %276
  %278 = fadd float %277, %275
  %279 = bitcast float %268 to i32
  %280 = and i32 %279, -4096
  %281 = bitcast i32 %280 to float
  %282 = fsub float %268, %281
  %283 = bitcast float %263 to i32
  %284 = and i32 %283, -4096
  %285 = bitcast i32 %284 to float
  %286 = fsub float %263, %285
  %287 = fmul float %281, %285
  %288 = insertelement <2 x float> undef, float %268, i32 0
  %289 = insertelement <2 x float> %288, float %278, i32 1
  %290 = insertelement <2 x float> undef, float %263, i32 0
  %291 = shufflevector <2 x float> %290, <2 x float> undef, <2 x i32> zeroinitializer
  %292 = fmul <2 x float> %289, %291
  %293 = extractelement <2 x float> %292, i32 0
  %294 = fsub float %287, %293
  %295 = fmul float %282, %285
  %296 = fadd float %295, %294
  %297 = fmul float %286, %281
  %298 = fadd float %297, %296
  %299 = fmul float %282, %286
  %300 = fadd float %299, %298
  %301 = insertelement <2 x float> undef, float %253, i32 0
  %302 = insertelement <2 x float> %301, float %300, i32 1
  %303 = fadd <2 x float> %302, %292
  %304 = extractelement <2 x float> %303, i32 0
  %305 = fsub float %253, %304
  %306 = fadd float %293, %305
  %307 = fadd float %255, %306
  %308 = insertelement <2 x float> <float 1.000000e+00, float undef>, float %307, i32 1
  %309 = fadd <2 x float> %308, %303
  %310 = extractelement <2 x float> %309, i32 0
  %311 = fsub float 1.000000e+00, %310
  %312 = fadd float %304, %311
  %313 = extractelement <2 x float> %309, i32 1
  %314 = fadd float %312, %313
  %315 = fadd float %310, %314
  %316 = ashr i32 %235, 31
  %317 = add nsw i32 %316, %235
  %318 = ashr i32 %317, 6
  %319 = sub nsw i32 %318, %316
  %320 = shl nsw i32 %319, 4
  %321 = shl i32 %319, 6
  %322 = sub nsw i32 %235, %321
  %323 = add nsw i32 %320, 127
  %324 = icmp sgt i32 %323, 0
  %325 = select i1 %324, i32 %323, i32 0
  %326 = icmp slt i32 %325, 255
  %327 = select i1 %326, i32 %325, i32 255
  %328 = shl nuw i32 %327, 23
  %329 = bitcast i32 %328 to float
  %330 = fmul float %315, %329
  %331 = fmul float %330, %329
  %332 = fmul float %331, %329
  %333 = fmul float %332, %329
  %334 = shl i32 %322, 23
  %335 = add i32 %334, 1065353216
  %336 = bitcast i32 %335 to float
  %337 = fmul float %333, %336
  %338 = fcmp olt float %217, -1.040000e+02
  %339 = select i1 %338, float 0.000000e+00, float %337
  %340 = fcmp ord float %339, 0.000000e+00
  %341 = select i1 %340, float %339, float 0x7FF0000000000000
  %342 = fcmp ult float %0, 0.000000e+00
  %343 = select i1 %22, float -1.000000e+00, float 1.000000e+00
  %344 = select i1 %12, float %343, float 0x7FF8000000000000
  %345 = select i1 %342, float %344, float 1.000000e+00
  %346 = fmul float %341, %345
  %347 = fadd float %25, -1.000000e+00
  %348 = bitcast float %347 to i32
  %349 = and i32 %16, -2147483648
  %350 = xor i32 %349, %348
  %351 = bitcast i32 %350 to float
  %352 = fcmp une float %1, 0x7FF0000000000000
  %353 = fcmp une float %1, 0xFFF0000000000000
  %354 = and i1 %353, %352
  br i1 %354, label %360, label %355

; <label>:355:                                    ; preds = %21
  %356 = fcmp olt float %351, 0.000000e+00
  %357 = fcmp oeq float %351, 0.000000e+00
  %358 = select i1 %357, float 1.000000e+00, float 0x7FF0000000000000
  %359 = select i1 %356, float 0.000000e+00, float %358
  br label %360

; <label>:360:                                    ; preds = %355, %21
  %361 = phi float [ %346, %21 ], [ %359, %355 ]
  %362 = fcmp oeq float %0, 0x7FF0000000000000
  %363 = fcmp oeq float %0, 0xFFF0000000000000
  %364 = or i1 %362, %363
  %365 = fcmp oeq float %0, 0.000000e+00
  %366 = or i1 %365, %364
  br i1 %366, label %367, label %379

; <label>:367:                                    ; preds = %360
  br i1 %22, label %368, label %372

; <label>:368:                                    ; preds = %367
  %369 = and i32 %23, -2147483648
  %370 = or i32 %369, 1065353216
  %371 = bitcast i32 %370 to float
  br label %372

; <label>:372:                                    ; preds = %367, %368
  %373 = phi float [ %371, %368 ], [ 1.000000e+00, %367 ]
  %374 = fsub float -0.000000e+00, %1
  %375 = select i1 %365, float %374, float %1
  %376 = fcmp olt float %375, 0.000000e+00
  %377 = select i1 %376, float 0.000000e+00, float 0x7FF0000000000000
  %378 = fmul float %377, %373
  br label %379

; <label>:379:                                    ; preds = %360, %372
  %380 = phi float [ %378, %372 ], [ %361, %360 ]
  %381 = fcmp ord float %0, %1
  %382 = select i1 %381, float %380, float 0x7FF8000000000000
  %383 = fcmp oeq float %1, 0.000000e+00
  %384 = fcmp oeq float %0, 1.000000e+00
  %385 = or i1 %384, %383
  %386 = select i1 %385, float 1.000000e+00, float %382
  ret float %386
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fastpowf_u3500(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = fcmp olt float %5, 0x3810000000000000
  %7 = fmul float %5, 0x43F0000000000000
  %8 = select i1 %6, float %7, float %5
  %9 = fmul float %8, 0x3FF5555560000000
  %10 = bitcast float %9 to i32
  %11 = lshr i32 %10, 23
  %12 = and i32 %11, 255
  %13 = bitcast float %8 to i32
  %14 = shl nuw nsw i32 %12, 23
  %15 = add i32 %13, 1065353216
  %16 = sub i32 %15, %14
  %17 = bitcast i32 %16 to float
  %18 = select i1 %6, i32 -191, i32 -127
  %19 = add nsw i32 %12, %18
  %20 = fadd float %17, -1.000000e+00
  %21 = fadd float %17, 1.000000e+00
  %22 = fdiv float %20, %21
  %23 = fmul float %22, %22
  %24 = fmul float %23, 0x3FCEA0D200000000
  %25 = fadd float %24, 0x3FD2406C80000000
  %26 = fmul float %23, %25
  %27 = fadd float %26, 0x3FD999B240000000
  %28 = fmul float %23, %27
  %29 = fadd float %28, 0x3FE5555560000000
  %30 = fmul float %23, %29
  %31 = fadd float %30, 2.000000e+00
  %32 = sitofp i32 %19 to float
  %33 = fmul float %32, 0x3FE62E4300000000
  %34 = fmul float %22, %31
  %35 = fadd float %33, %34
  %36 = fmul float %35, %1
  %37 = fmul float %36, 0x3FF7154760000000
  %38 = fcmp olt float %37, 0.000000e+00
  %39 = select i1 %38, float -5.000000e-01, float 5.000000e-01
  %40 = fadd float %37, %39
  %41 = fptosi float %40 to i32
  %42 = sitofp i32 %41 to float
  %43 = fptosi float %42 to i32
  %44 = sitofp i32 %43 to float
  %45 = fmul float %44, 0x3FE62E4000000000
  %46 = fsub float %36, %45
  %47 = fmul float %44, 0x3EB7F7D1C0000000
  %48 = fsub float %46, %47
  %49 = fmul float %48, 0x3F2A057B40000000
  %50 = fadd float %49, 0x3F56D2D920000000
  %51 = fmul float %48, %50
  %52 = fadd float %51, 0x3F811114C0000000
  %53 = fmul float %48, %52
  %54 = fadd float %53, 0x3FA5554F40000000
  %55 = fmul float %48, %54
  %56 = fadd float %55, 0x3FC5555560000000
  %57 = fmul float %48, %56
  %58 = fadd float %57, 5.000000e-01
  %59 = fmul float %48, %48
  %60 = fadd float %48, 1.000000e+00
  %61 = fmul float %59, %58
  %62 = fadd float %60, %61
  %63 = ashr i32 %43, 31
  %64 = add nsw i32 %63, %43
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 %65, %63
  %67 = shl nsw i32 %66, 4
  %68 = shl i32 %66, 6
  %69 = sub nsw i32 %43, %68
  %70 = add nsw i32 %67, 127
  %71 = icmp sgt i32 %70, 0
  %72 = select i1 %71, i32 %70, i32 0
  %73 = icmp slt i32 %72, 255
  %74 = select i1 %73, i32 %72, i32 255
  %75 = shl nuw i32 %74, 23
  %76 = bitcast i32 %75 to float
  %77 = fmul float %62, %76
  %78 = fmul float %77, %76
  %79 = fmul float %78, %76
  %80 = fmul float %79, %76
  %81 = shl i32 %69, 23
  %82 = add i32 %81, 1065353216
  %83 = bitcast i32 %82 to float
  %84 = fmul float %80, %83
  %85 = fcmp olt float %36, -1.040000e+02
  %86 = select i1 %85, float 0.000000e+00, float %84
  %87 = fptosi float %1 to i32
  %88 = sitofp i32 %87 to float
  %89 = fcmp oeq float %88, %1
  br i1 %89, label %95, label %90

; <label>:90:                                     ; preds = %2
  %91 = bitcast float %1 to i32
  %92 = and i32 %91, 2147483647
  %93 = bitcast i32 %92 to float
  %94 = fcmp oge float %93, 0x4170000000000000
  br label %95

; <label>:95:                                     ; preds = %90, %2
  %96 = phi i1 [ true, %2 ], [ %94, %90 ]
  %97 = and i32 %87, 1
  %98 = icmp ne i32 %97, 0
  %99 = and i1 %98, %96
  br i1 %99, label %100, label %105

; <label>:100:                                    ; preds = %95
  %101 = bitcast float %1 to i32
  %102 = and i32 %101, 2147483647
  %103 = bitcast i32 %102 to float
  %104 = fcmp olt float %103, 0x4170000000000000
  br label %105

; <label>:105:                                    ; preds = %100, %95
  %106 = phi i1 [ false, %95 ], [ %104, %100 ]
  %107 = fcmp olt float %0, 0.000000e+00
  %108 = and i1 %107, %106
  %109 = select i1 %108, float -1.000000e+00, float 1.000000e+00
  %110 = fmul float %86, %109
  %111 = fcmp oeq float %0, 0.000000e+00
  %112 = select i1 %111, float 0.000000e+00, float %110
  %113 = fcmp oeq float %1, 0.000000e+00
  %114 = select i1 %113, float 1.000000e+00, float %112
  ret float %114
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinhf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp olt float %6, 0.000000e+00
  %8 = select i1 %7, float -5.000000e-01, float 5.000000e-01
  %9 = fadd float %6, %8
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 0xBFE62E4000000000
  %15 = fadd float %14, %4
  %16 = fsub float %15, %4
  %17 = fsub float %15, %16
  %18 = fsub float %4, %17
  %19 = fsub float %14, %16
  %20 = fadd float %19, %18
  %21 = fadd float %20, 0.000000e+00
  %22 = fmul float %13, 0xBEB7F7D1C0000000
  %23 = fadd float %22, %15
  %24 = fsub float %23, %15
  %25 = fsub float %23, %24
  %26 = fsub float %15, %25
  %27 = fsub float %22, %24
  %28 = fadd float %27, %26
  %29 = fadd float %21, %28
  %30 = fmul float %23, 0x3F29F6FFE0000000
  %31 = fadd float %30, 0x3F56D7EF80000000
  %32 = fmul float %23, %31
  %33 = fadd float %32, 0x3F811121A0000000
  %34 = fmul float %23, %33
  %35 = fadd float %34, 0x3FA5554B80000000
  %36 = bitcast float %23 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %23, %38
  %40 = bitcast float %35 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %35, %42
  %44 = fmul float %23, %35
  %45 = fmul float %38, %42
  %46 = fsub float %45, %44
  %47 = fmul float %39, %42
  %48 = fadd float %47, %46
  %49 = fmul float %43, %38
  %50 = fadd float %49, %48
  %51 = fmul float %39, %43
  %52 = fadd float %51, %50
  %53 = fmul float %29, %35
  %54 = fadd float %53, %52
  %55 = fadd float %44, 0x3FC5555540000000
  %56 = fsub float %55, %44
  %57 = fsub float %55, %56
  %58 = fsub float %44, %57
  %59 = fsub float 0x3FC5555540000000, %56
  %60 = fadd float %59, %58
  %61 = fadd float %60, %54
  %62 = bitcast float %55 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %55, %64
  %66 = fmul float %23, %55
  %67 = fmul float %38, %64
  %68 = fsub float %67, %66
  %69 = fmul float %39, %64
  %70 = fadd float %69, %68
  %71 = fmul float %65, %38
  %72 = fadd float %71, %70
  %73 = fmul float %39, %65
  %74 = fadd float %73, %72
  %75 = fmul float %23, %61
  %76 = fadd float %74, %75
  %77 = fmul float %29, %55
  %78 = fadd float %77, %76
  %79 = fadd float %66, 5.000000e-01
  %80 = fsub float %79, %66
  %81 = fsub float %79, %80
  %82 = fsub float %66, %81
  %83 = fsub float 5.000000e-01, %80
  %84 = fadd float %83, %82
  %85 = fadd float %84, %78
  %86 = fmul float %23, %23
  %87 = fmul float %38, %38
  %88 = fsub float %87, %86
  %89 = fadd float %38, %38
  %90 = fmul float %89, %39
  %91 = fadd float %88, %90
  %92 = fmul float %39, %39
  %93 = fadd float %92, %91
  %94 = fadd float %29, %29
  %95 = fmul float %23, %94
  %96 = fadd float %95, %93
  %97 = bitcast float %86 to i32
  %98 = and i32 %97, -4096
  %99 = bitcast i32 %98 to float
  %100 = fsub float %86, %99
  %101 = bitcast float %79 to i32
  %102 = and i32 %101, -4096
  %103 = bitcast i32 %102 to float
  %104 = fsub float %79, %103
  %105 = fmul float %86, %79
  %106 = fmul float %99, %103
  %107 = fsub float %106, %105
  %108 = fmul float %100, %103
  %109 = fadd float %108, %107
  %110 = fmul float %104, %99
  %111 = fadd float %110, %109
  %112 = fmul float %100, %104
  %113 = fadd float %112, %111
  %114 = fmul float %86, %85
  %115 = fadd float %113, %114
  %116 = fmul float %96, %79
  %117 = fadd float %116, %115
  %118 = fadd float %23, %105
  %119 = fsub float %118, %23
  %120 = fsub float %118, %119
  %121 = fsub float %23, %120
  %122 = fsub float %105, %119
  %123 = fadd float %122, %121
  %124 = fadd float %29, %117
  %125 = fadd float %123, %124
  %126 = fadd float %118, 1.000000e+00
  %127 = fadd float %126, -1.000000e+00
  %128 = fsub float %126, %127
  %129 = fsub float 1.000000e+00, %128
  %130 = fsub float %118, %127
  %131 = fadd float %130, %129
  %132 = fadd float %131, %125
  %133 = ashr i32 %12, 1
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %126, %136
  %138 = sub nsw i32 %12, %133
  %139 = shl i32 %138, 23
  %140 = add i32 %139, 1065353216
  %141 = bitcast i32 %140 to float
  %142 = fmul float %137, %141
  %143 = fmul float %132, %136
  %144 = fmul float %143, %141
  %145 = fcmp olt float %4, -1.040000e+02
  %146 = insertelement <2 x float> undef, float %142, i32 0
  %147 = insertelement <2 x float> %146, float %144, i32 1
  %148 = select i1 %145, <2 x float> zeroinitializer, <2 x float> %147
  %149 = extractelement <2 x float> %148, i32 0
  %150 = fdiv float 1.000000e+00, %149
  %151 = bitcast float %149 to i32
  %152 = and i32 %151, -4096
  %153 = bitcast i32 %152 to float
  %154 = fsub float %149, %153
  %155 = bitcast float %150 to i32
  %156 = and i32 %155, -4096
  %157 = bitcast i32 %156 to float
  %158 = fsub float %150, %157
  %159 = fmul float %153, %157
  %160 = fsub float 1.000000e+00, %159
  %161 = fmul float %158, %153
  %162 = fsub float %160, %161
  %163 = fmul float %154, %157
  %164 = fsub float %162, %163
  %165 = fmul float %154, %158
  %166 = fsub float %164, %165
  %167 = extractelement <2 x float> %148, i32 1
  %168 = fmul float %167, %150
  %169 = fsub float %166, %168
  %170 = fmul float %150, %169
  %171 = fsub float %149, %150
  %172 = fsub float %149, %171
  %173 = fsub float %172, %150
  %174 = fadd float %167, %173
  %175 = fsub float %174, %170
  %176 = fadd float %171, %175
  %177 = fmul float %176, 5.000000e-01
  %178 = fcmp ogt float %4, 8.900000e+01
  %179 = select i1 %178, float 0x7FF0000000000000, float %177
  %180 = fcmp ord float %179, 0.000000e+00
  %181 = bitcast float %179 to i32
  %182 = select i1 %180, i32 %181, i32 2139095040
  %183 = and i32 %2, -2147483648
  %184 = xor i32 %182, %183
  %185 = bitcast i32 %184 to float
  %186 = fcmp ord float %0, 0.000000e+00
  %187 = select i1 %186, float %185, float 0x7FF8000000000000
  ret float %187
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_coshf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp olt float %6, 0.000000e+00
  %8 = select i1 %7, float -5.000000e-01, float 5.000000e-01
  %9 = fadd float %6, %8
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 0xBFE62E4000000000
  %15 = fadd float %14, %4
  %16 = fsub float %15, %4
  %17 = fsub float %15, %16
  %18 = fsub float %4, %17
  %19 = fsub float %14, %16
  %20 = fadd float %19, %18
  %21 = fadd float %20, 0.000000e+00
  %22 = fmul float %13, 0xBEB7F7D1C0000000
  %23 = fadd float %22, %15
  %24 = fsub float %23, %15
  %25 = fsub float %23, %24
  %26 = fsub float %15, %25
  %27 = fsub float %22, %24
  %28 = fadd float %27, %26
  %29 = fadd float %21, %28
  %30 = fmul float %23, 0x3F29F6FFE0000000
  %31 = fadd float %30, 0x3F56D7EF80000000
  %32 = fmul float %23, %31
  %33 = fadd float %32, 0x3F811121A0000000
  %34 = fmul float %23, %33
  %35 = fadd float %34, 0x3FA5554B80000000
  %36 = bitcast float %23 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %23, %38
  %40 = bitcast float %35 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %35, %42
  %44 = fmul float %23, %35
  %45 = fmul float %38, %42
  %46 = fsub float %45, %44
  %47 = fmul float %39, %42
  %48 = fadd float %47, %46
  %49 = fmul float %43, %38
  %50 = fadd float %49, %48
  %51 = fmul float %39, %43
  %52 = fadd float %51, %50
  %53 = fmul float %29, %35
  %54 = fadd float %53, %52
  %55 = fadd float %44, 0x3FC5555540000000
  %56 = fsub float %55, %44
  %57 = fsub float %55, %56
  %58 = fsub float %44, %57
  %59 = fsub float 0x3FC5555540000000, %56
  %60 = fadd float %59, %58
  %61 = fadd float %60, %54
  %62 = bitcast float %55 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %55, %64
  %66 = fmul float %23, %55
  %67 = fmul float %38, %64
  %68 = fsub float %67, %66
  %69 = fmul float %39, %64
  %70 = fadd float %69, %68
  %71 = fmul float %65, %38
  %72 = fadd float %71, %70
  %73 = fmul float %39, %65
  %74 = fadd float %73, %72
  %75 = fmul float %23, %61
  %76 = fadd float %74, %75
  %77 = fmul float %29, %55
  %78 = fadd float %77, %76
  %79 = fadd float %66, 5.000000e-01
  %80 = fsub float %79, %66
  %81 = fsub float %79, %80
  %82 = fsub float %66, %81
  %83 = fsub float 5.000000e-01, %80
  %84 = fadd float %83, %82
  %85 = fadd float %84, %78
  %86 = fmul float %23, %23
  %87 = fmul float %38, %38
  %88 = fsub float %87, %86
  %89 = fadd float %38, %38
  %90 = fmul float %89, %39
  %91 = fadd float %88, %90
  %92 = fmul float %39, %39
  %93 = fadd float %92, %91
  %94 = fadd float %29, %29
  %95 = fmul float %23, %94
  %96 = fadd float %95, %93
  %97 = bitcast float %86 to i32
  %98 = and i32 %97, -4096
  %99 = bitcast i32 %98 to float
  %100 = fsub float %86, %99
  %101 = bitcast float %79 to i32
  %102 = and i32 %101, -4096
  %103 = bitcast i32 %102 to float
  %104 = fsub float %79, %103
  %105 = fmul float %86, %79
  %106 = fmul float %99, %103
  %107 = fsub float %106, %105
  %108 = fmul float %100, %103
  %109 = fadd float %108, %107
  %110 = fmul float %104, %99
  %111 = fadd float %110, %109
  %112 = fmul float %100, %104
  %113 = fadd float %112, %111
  %114 = fmul float %86, %85
  %115 = fadd float %113, %114
  %116 = fmul float %96, %79
  %117 = fadd float %116, %115
  %118 = fadd float %23, %105
  %119 = fsub float %118, %23
  %120 = fsub float %118, %119
  %121 = fsub float %23, %120
  %122 = fsub float %105, %119
  %123 = fadd float %122, %121
  %124 = fadd float %29, %117
  %125 = fadd float %123, %124
  %126 = fadd float %118, 1.000000e+00
  %127 = fadd float %126, -1.000000e+00
  %128 = fsub float %126, %127
  %129 = fsub float 1.000000e+00, %128
  %130 = fsub float %118, %127
  %131 = fadd float %130, %129
  %132 = fadd float %131, %125
  %133 = ashr i32 %12, 1
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %126, %136
  %138 = sub nsw i32 %12, %133
  %139 = shl i32 %138, 23
  %140 = add i32 %139, 1065353216
  %141 = bitcast i32 %140 to float
  %142 = fmul float %137, %141
  %143 = fmul float %132, %136
  %144 = fmul float %143, %141
  %145 = fcmp olt float %4, -1.040000e+02
  %146 = insertelement <2 x float> undef, float %142, i32 0
  %147 = insertelement <2 x float> %146, float %144, i32 1
  %148 = select i1 %145, <2 x float> zeroinitializer, <2 x float> %147
  %149 = extractelement <2 x float> %148, i32 0
  %150 = fdiv float 1.000000e+00, %149
  %151 = bitcast float %149 to i32
  %152 = and i32 %151, -4096
  %153 = bitcast i32 %152 to float
  %154 = fsub float %149, %153
  %155 = bitcast float %150 to i32
  %156 = and i32 %155, -4096
  %157 = bitcast i32 %156 to float
  %158 = fsub float %150, %157
  %159 = fmul float %153, %157
  %160 = fsub float 1.000000e+00, %159
  %161 = fmul float %158, %153
  %162 = fsub float %160, %161
  %163 = fmul float %154, %157
  %164 = fsub float %162, %163
  %165 = fmul float %154, %158
  %166 = fsub float %164, %165
  %167 = extractelement <2 x float> %148, i32 1
  %168 = fmul float %167, %150
  %169 = fsub float %166, %168
  %170 = fmul float %150, %169
  %171 = fadd float %149, %150
  %172 = fsub float %149, %171
  %173 = fadd float %150, %172
  %174 = fadd float %167, %173
  %175 = fadd float %174, %170
  %176 = fadd float %171, %175
  %177 = fmul float %176, 5.000000e-01
  %178 = fcmp ogt float %4, 8.900000e+01
  %179 = select i1 %178, float 0x7FF0000000000000, float %177
  %180 = fcmp ord float %179, 0.000000e+00
  %181 = select i1 %180, float %179, float 0x7FF0000000000000
  %182 = fcmp ord float %0, 0.000000e+00
  %183 = select i1 %182, float %181, float 0x7FF8000000000000
  ret float %183
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanhf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 0.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp olt float %6, 0.000000e+00
  %8 = select i1 %7, float -5.000000e-01, float 5.000000e-01
  %9 = fadd float %6, %8
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 0xBFE62E4000000000
  %15 = fadd float %14, %4
  %16 = fsub float %15, %4
  %17 = fsub float %15, %16
  %18 = fsub float %4, %17
  %19 = fsub float %14, %16
  %20 = fadd float %19, %18
  %21 = fadd float %20, 0.000000e+00
  %22 = fmul float %13, 0xBEB7F7D1C0000000
  %23 = fadd float %22, %15
  %24 = fsub float %23, %15
  %25 = fsub float %23, %24
  %26 = fsub float %15, %25
  %27 = fsub float %22, %24
  %28 = fadd float %27, %26
  %29 = fadd float %21, %28
  %30 = fmul float %23, 0x3F29F6FFE0000000
  %31 = fadd float %30, 0x3F56D7EF80000000
  %32 = fmul float %23, %31
  %33 = fadd float %32, 0x3F811121A0000000
  %34 = fmul float %23, %33
  %35 = fadd float %34, 0x3FA5554B80000000
  %36 = bitcast float %23 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %23, %38
  %40 = bitcast float %35 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %35, %42
  %44 = fmul float %23, %35
  %45 = fmul float %38, %42
  %46 = fsub float %45, %44
  %47 = fmul float %39, %42
  %48 = fadd float %47, %46
  %49 = fmul float %43, %38
  %50 = fadd float %49, %48
  %51 = fmul float %39, %43
  %52 = fadd float %51, %50
  %53 = fmul float %29, %35
  %54 = fadd float %53, %52
  %55 = fadd float %44, 0x3FC5555540000000
  %56 = fsub float %55, %44
  %57 = fsub float %55, %56
  %58 = fsub float %44, %57
  %59 = fsub float 0x3FC5555540000000, %56
  %60 = fadd float %59, %58
  %61 = fadd float %60, %54
  %62 = bitcast float %55 to i32
  %63 = and i32 %62, -4096
  %64 = bitcast i32 %63 to float
  %65 = fsub float %55, %64
  %66 = fmul float %23, %55
  %67 = fmul float %38, %64
  %68 = fsub float %67, %66
  %69 = fmul float %39, %64
  %70 = fadd float %69, %68
  %71 = fmul float %65, %38
  %72 = fadd float %71, %70
  %73 = fmul float %39, %65
  %74 = fadd float %73, %72
  %75 = fmul float %23, %61
  %76 = fadd float %74, %75
  %77 = fmul float %29, %55
  %78 = fadd float %77, %76
  %79 = fadd float %66, 5.000000e-01
  %80 = fsub float %79, %66
  %81 = fsub float %79, %80
  %82 = fsub float %66, %81
  %83 = fsub float 5.000000e-01, %80
  %84 = fadd float %83, %82
  %85 = fadd float %84, %78
  %86 = fmul float %23, %23
  %87 = fmul float %38, %38
  %88 = fsub float %87, %86
  %89 = fadd float %38, %38
  %90 = fmul float %89, %39
  %91 = fadd float %88, %90
  %92 = fmul float %39, %39
  %93 = fadd float %92, %91
  %94 = fadd float %29, %29
  %95 = fmul float %23, %94
  %96 = fadd float %95, %93
  %97 = bitcast float %86 to i32
  %98 = and i32 %97, -4096
  %99 = bitcast i32 %98 to float
  %100 = fsub float %86, %99
  %101 = bitcast float %79 to i32
  %102 = and i32 %101, -4096
  %103 = bitcast i32 %102 to float
  %104 = fsub float %79, %103
  %105 = fmul float %86, %79
  %106 = fmul float %99, %103
  %107 = fsub float %106, %105
  %108 = fmul float %100, %103
  %109 = fadd float %108, %107
  %110 = fmul float %104, %99
  %111 = fadd float %110, %109
  %112 = fmul float %100, %104
  %113 = fadd float %112, %111
  %114 = fmul float %86, %85
  %115 = fadd float %113, %114
  %116 = fmul float %96, %79
  %117 = fadd float %116, %115
  %118 = fadd float %23, %105
  %119 = fsub float %118, %23
  %120 = fsub float %118, %119
  %121 = fsub float %23, %120
  %122 = fsub float %105, %119
  %123 = fadd float %122, %121
  %124 = fadd float %29, %117
  %125 = fadd float %123, %124
  %126 = fadd float %118, 1.000000e+00
  %127 = fadd float %126, -1.000000e+00
  %128 = fsub float %126, %127
  %129 = fsub float 1.000000e+00, %128
  %130 = fsub float %118, %127
  %131 = fadd float %130, %129
  %132 = fadd float %131, %125
  %133 = ashr i32 %12, 1
  %134 = shl i32 %133, 23
  %135 = add i32 %134, 1065353216
  %136 = bitcast i32 %135 to float
  %137 = fmul float %126, %136
  %138 = sub nsw i32 %12, %133
  %139 = shl i32 %138, 23
  %140 = add i32 %139, 1065353216
  %141 = bitcast i32 %140 to float
  %142 = fmul float %137, %141
  %143 = fmul float %132, %136
  %144 = fmul float %143, %141
  %145 = fcmp olt float %4, -1.040000e+02
  %146 = insertelement <2 x float> undef, float %142, i32 0
  %147 = insertelement <2 x float> %146, float %144, i32 1
  %148 = select i1 %145, <2 x float> zeroinitializer, <2 x float> %147
  %149 = extractelement <2 x float> %148, i32 0
  %150 = fdiv float 1.000000e+00, %149
  %151 = bitcast float %149 to i32
  %152 = and i32 %151, -4096
  %153 = bitcast i32 %152 to float
  %154 = fsub float %149, %153
  %155 = bitcast float %150 to i32
  %156 = and i32 %155, -4096
  %157 = bitcast i32 %156 to float
  %158 = fsub float %150, %157
  %159 = fmul float %153, %157
  %160 = fsub float 1.000000e+00, %159
  %161 = fmul float %158, %153
  %162 = fsub float %160, %161
  %163 = fmul float %154, %157
  %164 = fsub float %162, %163
  %165 = fmul float %154, %158
  %166 = fsub float %164, %165
  %167 = extractelement <2 x float> %148, i32 1
  %168 = fmul float %167, %150
  %169 = fsub float %166, %168
  %170 = fmul float %150, %169
  %171 = fsub float %149, %150
  %172 = fsub float %149, %171
  %173 = fsub float %172, %150
  %174 = fadd float %167, %173
  %175 = fsub float %174, %170
  %176 = fadd float %149, %150
  %177 = fsub float %149, %176
  %178 = fadd float %150, %177
  %179 = fadd float %167, %178
  %180 = fadd float %179, %170
  %181 = fdiv float 1.000000e+00, %176
  %182 = bitcast float %176 to i32
  %183 = and i32 %182, -4096
  %184 = bitcast i32 %183 to float
  %185 = fsub float %176, %184
  %186 = bitcast float %181 to i32
  %187 = and i32 %186, -4096
  %188 = bitcast i32 %187 to float
  %189 = fsub float %181, %188
  %190 = bitcast float %171 to i32
  %191 = and i32 %190, -4096
  %192 = bitcast i32 %191 to float
  %193 = fsub float %171, %192
  %194 = fmul float %171, %181
  %195 = fmul float %192, %188
  %196 = fsub float %195, %194
  %197 = fmul float %189, %192
  %198 = fadd float %196, %197
  %199 = fmul float %193, %188
  %200 = fadd float %199, %198
  %201 = fmul float %193, %189
  %202 = fadd float %201, %200
  %203 = fmul float %184, %188
  %204 = fsub float 1.000000e+00, %203
  %205 = fmul float %189, %184
  %206 = fsub float %204, %205
  %207 = fmul float %185, %188
  %208 = fsub float %206, %207
  %209 = fmul float %185, %189
  %210 = fsub float %208, %209
  %211 = fmul float %194, %210
  %212 = fadd float %202, %211
  %213 = fmul float %194, %180
  %214 = fsub float %175, %213
  %215 = fmul float %181, %214
  %216 = fadd float %212, %215
  %217 = fadd float %194, %216
  %218 = fcmp ogt float %4, 0x4032B70880000000
  %219 = select i1 %218, float 1.000000e+00, float %217
  %220 = fcmp ord float %219, 0.000000e+00
  %221 = bitcast float %219 to i32
  %222 = select i1 %220, i32 %221, i32 1065353216
  %223 = and i32 %2, -2147483648
  %224 = xor i32 %222, %223
  %225 = bitcast i32 %224 to float
  %226 = fcmp ord float %0, 0.000000e+00
  %227 = select i1 %226, float %225, float 0x7FF8000000000000
  ret float %227
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinhf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = fcmp olt float %5, 0.000000e+00
  %7 = select i1 %6, float -5.000000e-01, float 5.000000e-01
  %8 = fadd float %5, %7
  %9 = fptosi float %8 to i32
  %10 = sitofp i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fmul float %12, 0x3FE62E4000000000
  %14 = fsub float %4, %13
  %15 = fmul float %12, 0x3EB7F7D1C0000000
  %16 = fsub float %14, %15
  %17 = fmul float %16, %16
  %18 = fmul float %17, %17
  %19 = fmul float %16, 0x3F2A057B40000000
  %20 = fadd float %19, 0x3F56D2D920000000
  %21 = fmul float %16, 0x3F811114C0000000
  %22 = fadd float %21, 0x3FA5554F40000000
  %23 = fmul float %16, 0x3FC5555560000000
  %24 = fadd float %23, 5.000000e-01
  %25 = fmul float %17, %22
  %26 = fadd float %24, %25
  %27 = fmul float %18, %20
  %28 = fadd float %27, %26
  %29 = fmul float %17, %28
  %30 = fadd float %16, %29
  %31 = icmp eq i32 %11, 0
  br i1 %31, label %45, label %32

; <label>:32:                                     ; preds = %1
  %33 = fadd float %30, 1.000000e+00
  %34 = ashr i32 %11, 1
  %35 = shl i32 %34, 23
  %36 = add i32 %35, 1065353216
  %37 = bitcast i32 %36 to float
  %38 = fmul float %33, %37
  %39 = sub nsw i32 %11, %34
  %40 = shl i32 %39, 23
  %41 = add i32 %40, 1065353216
  %42 = bitcast i32 %41 to float
  %43 = fmul float %38, %42
  %44 = fadd float %43, -1.000000e+00
  br label %45

; <label>:45:                                     ; preds = %1, %32
  %46 = phi float [ %44, %32 ], [ %30, %1 ]
  %47 = fadd float %46, 2.000000e+00
  %48 = fadd float %46, 1.000000e+00
  %49 = fdiv float %47, %48
  %50 = fmul float %46, 5.000000e-01
  %51 = fmul float %50, %49
  %52 = fcmp ogt float %4, 8.800000e+01
  %53 = select i1 %52, float 0x7FF0000000000000, float %51
  %54 = fcmp ord float %53, 0.000000e+00
  %55 = bitcast float %53 to i32
  %56 = select i1 %54, i32 %55, i32 2139095040
  %57 = and i32 %2, -2147483648
  %58 = xor i32 %56, %57
  %59 = bitcast i32 %58 to float
  %60 = fcmp ord float %0, 0.000000e+00
  %61 = select i1 %60, float %59, float 0x7FF8000000000000
  ret float %61
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_coshf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 0x3FF7154760000000
  %6 = fcmp olt float %5, 0.000000e+00
  %7 = select i1 %6, float -5.000000e-01, float 5.000000e-01
  %8 = fadd float %5, %7
  %9 = fptosi float %8 to i32
  %10 = sitofp i32 %9 to float
  %11 = fptosi float %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fmul float %12, 0x3FE62E4000000000
  %14 = fsub float %4, %13
  %15 = fmul float %12, 0x3EB7F7D1C0000000
  %16 = fsub float %14, %15
  %17 = fmul float %16, 0x3F2A057B40000000
  %18 = fadd float %17, 0x3F56D2D920000000
  %19 = fmul float %16, %18
  %20 = fadd float %19, 0x3F811114C0000000
  %21 = fmul float %16, %20
  %22 = fadd float %21, 0x3FA5554F40000000
  %23 = fmul float %16, %22
  %24 = fadd float %23, 0x3FC5555560000000
  %25 = fmul float %16, %24
  %26 = fadd float %25, 5.000000e-01
  %27 = fmul float %16, %16
  %28 = fmul float %27, %26
  %29 = fadd float %16, %28
  %30 = fadd float %29, 1.000000e+00
  %31 = ashr i32 %11, 1
  %32 = shl i32 %31, 23
  %33 = add i32 %32, 1065353216
  %34 = bitcast i32 %33 to float
  %35 = fmul float %30, %34
  %36 = sub nsw i32 %11, %31
  %37 = shl i32 %36, 23
  %38 = add i32 %37, 1065353216
  %39 = bitcast i32 %38 to float
  %40 = fmul float %35, %39
  %41 = fcmp olt float %4, -1.040000e+02
  %42 = select i1 %41, float 0.000000e+00, float %40
  %43 = fcmp ogt float %4, 1.040000e+02
  %44 = select i1 %43, float 0x7FF0000000000000, float %42
  %45 = fmul float %44, 5.000000e-01
  %46 = fdiv float 5.000000e-01, %44
  %47 = fadd float %45, %46
  %48 = fcmp ogt float %4, 8.800000e+01
  %49 = select i1 %48, float 0x7FF0000000000000, float %47
  %50 = fcmp ord float %49, 0.000000e+00
  %51 = select i1 %50, float %49, float 0x7FF0000000000000
  %52 = fcmp ord float %0, 0.000000e+00
  %53 = select i1 %52, float %51, float 0x7FF8000000000000
  ret float %53
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tanhf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fmul float %4, 2.000000e+00
  %6 = fmul float %5, 0x3FF7154760000000
  %7 = fcmp olt float %6, 0.000000e+00
  %8 = select i1 %7, float -5.000000e-01, float 5.000000e-01
  %9 = fadd float %6, %8
  %10 = fptosi float %9 to i32
  %11 = sitofp i32 %10 to float
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fmul float %13, 0x3FE62E4000000000
  %15 = fsub float %5, %14
  %16 = fmul float %13, 0x3EB7F7D1C0000000
  %17 = fsub float %15, %16
  %18 = fmul float %17, %17
  %19 = fmul float %18, %18
  %20 = fmul float %17, 0x3F2A057B40000000
  %21 = fadd float %20, 0x3F56D2D920000000
  %22 = fmul float %17, 0x3F811114C0000000
  %23 = fadd float %22, 0x3FA5554F40000000
  %24 = fmul float %17, 0x3FC5555560000000
  %25 = fadd float %24, 5.000000e-01
  %26 = fmul float %18, %23
  %27 = fadd float %25, %26
  %28 = fmul float %19, %21
  %29 = fadd float %28, %27
  %30 = fmul float %18, %29
  %31 = fadd float %17, %30
  %32 = icmp eq i32 %12, 0
  br i1 %32, label %46, label %33

; <label>:33:                                     ; preds = %1
  %34 = fadd float %31, 1.000000e+00
  %35 = ashr i32 %12, 1
  %36 = shl i32 %35, 23
  %37 = add i32 %36, 1065353216
  %38 = bitcast i32 %37 to float
  %39 = fmul float %34, %38
  %40 = sub nsw i32 %12, %35
  %41 = shl i32 %40, 23
  %42 = add i32 %41, 1065353216
  %43 = bitcast i32 %42 to float
  %44 = fmul float %39, %43
  %45 = fadd float %44, -1.000000e+00
  br label %46

; <label>:46:                                     ; preds = %1, %33
  %47 = phi float [ %45, %33 ], [ %31, %1 ]
  %48 = fadd float %47, 2.000000e+00
  %49 = fdiv float %47, %48
  %50 = fcmp ogt float %4, 0x4032B70880000000
  %51 = select i1 %50, float 1.000000e+00, float %49
  %52 = fcmp ord float %51, 0.000000e+00
  %53 = bitcast float %51 to i32
  %54 = select i1 %52, i32 %53, i32 1065353216
  %55 = and i32 %2, -2147483648
  %56 = xor i32 %54, %55
  %57 = bitcast i32 %56 to float
  %58 = fcmp ord float %0, 0.000000e+00
  %59 = select i1 %58, float %57, float 0x7FF8000000000000
  ret float %59
}

; Function Attrs: nounwind uwtable
define float @Sleef_asinhf_u10(float) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp ogt float %4, 1.000000e+00
  br i1 %5, label %6, label %26

; <label>:6:                                      ; preds = %1
  %7 = fdiv float 1.000000e+00, %0
  %8 = and i32 %2, -4096
  %9 = bitcast i32 %8 to float
  %10 = fsub float %0, %9
  %11 = bitcast float %7 to i32
  %12 = and i32 %11, -4096
  %13 = bitcast i32 %12 to float
  %14 = fsub float %7, %13
  %15 = fmul float %9, %13
  %16 = fsub float 1.000000e+00, %15
  %17 = fmul float %14, %9
  %18 = fsub float %16, %17
  %19 = fmul float %10, %13
  %20 = fsub float %18, %19
  %21 = fmul float %10, %14
  %22 = fsub float %20, %21
  %23 = fmul float %7, %22
  %24 = insertelement <2 x float> undef, float %7, i32 0
  %25 = insertelement <2 x float> %24, float %23, i32 1
  br label %28

; <label>:26:                                     ; preds = %1
  %27 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %4, i32 0
  br label %28

; <label>:28:                                     ; preds = %26, %6
  %29 = phi <2 x float> [ %25, %6 ], [ %27, %26 ]
  %30 = extractelement <2 x float> %29, i32 0
  %31 = bitcast float %30 to i32
  %32 = and i32 %31, -4096
  %33 = bitcast i32 %32 to float
  %34 = fsub float %30, %33
  %35 = fmul float %30, %30
  %36 = fmul float %33, %33
  %37 = fsub float %36, %35
  %38 = fadd float %33, %33
  %39 = fmul float %38, %34
  %40 = fadd float %37, %39
  %41 = fmul float %34, %34
  %42 = fadd float %41, %40
  %43 = extractelement <2 x float> %29, i32 1
  %44 = fadd float %43, %43
  %45 = fmul float %30, %44
  %46 = fadd float %45, %42
  %47 = fadd float %35, 1.000000e+00
  %48 = fsub float %47, %35
  %49 = fsub float %47, %48
  %50 = fsub float %35, %49
  %51 = fsub float 1.000000e+00, %48
  %52 = fadd float %51, %50
  %53 = fadd float %52, %46
  %54 = fadd float %47, %53
  %55 = tail call float @sqrtf(float %54) #3
  %56 = bitcast float %55 to i32
  %57 = and i32 %56, -4096
  %58 = bitcast i32 %57 to float
  %59 = fsub float %55, %58
  %60 = fmul float %55, %55
  %61 = fmul float %58, %58
  %62 = fsub float %61, %60
  %63 = fmul float %59, %58
  %64 = fadd float %63, %62
  %65 = fadd float %63, %64
  %66 = fmul float %59, %59
  %67 = fadd float %66, %65
  %68 = fadd float %60, %47
  %69 = fsub float %68, %47
  %70 = fsub float %68, %69
  %71 = fsub float %47, %70
  %72 = fsub float %60, %69
  %73 = fadd float %72, %71
  %74 = fadd float %67, %53
  %75 = fadd float %73, %74
  %76 = fdiv float 1.000000e+00, %55
  %77 = bitcast float %76 to i32
  %78 = and i32 %77, -4096
  %79 = bitcast i32 %78 to float
  %80 = fsub float %76, %79
  %81 = fmul float %58, %79
  %82 = fsub float 1.000000e+00, %81
  %83 = fmul float %80, %58
  %84 = fsub float %82, %83
  %85 = fmul float %59, %79
  %86 = fsub float %84, %85
  %87 = fmul float %59, %80
  %88 = fsub float %86, %87
  %89 = fmul float %76, %88
  %90 = bitcast float %68 to i32
  %91 = and i32 %90, -4096
  %92 = bitcast i32 %91 to float
  %93 = fsub float %68, %92
  %94 = fmul float %76, %68
  %95 = fmul float %79, %92
  %96 = fsub float %95, %94
  %97 = fmul float %93, %79
  %98 = fadd float %97, %96
  %99 = fmul float %80, %92
  %100 = fadd float %99, %98
  %101 = fmul float %80, %93
  %102 = fadd float %101, %100
  %103 = fmul float %68, %89
  %104 = fadd float %102, %103
  %105 = fmul float %76, %75
  %106 = fadd float %105, %104
  %107 = fmul float %94, 5.000000e-01
  %108 = fmul float %106, 5.000000e-01
  %109 = insertelement <2 x float> undef, float %107, i32 0
  %110 = insertelement <2 x float> %109, float %108, i32 1
  br i1 %5, label %111, label %132

; <label>:111:                                    ; preds = %28
  %112 = bitcast float %107 to i32
  %113 = and i32 %112, -4096
  %114 = bitcast i32 %113 to float
  %115 = fsub float %107, %114
  %116 = and i32 %2, 2147479552
  %117 = bitcast i32 %116 to float
  %118 = fsub float %4, %117
  %119 = fmul float %107, %4
  %120 = fmul float %117, %114
  %121 = fsub float %120, %119
  %122 = fmul float %115, %117
  %123 = fadd float %121, %122
  %124 = fmul float %118, %114
  %125 = fadd float %124, %123
  %126 = fmul float %118, %115
  %127 = fadd float %126, %125
  %128 = fmul float %108, %4
  %129 = fadd float %127, %128
  %130 = insertelement <2 x float> undef, float %119, i32 0
  %131 = insertelement <2 x float> %130, float %129, i32 1
  br label %132

; <label>:132:                                    ; preds = %28, %111
  %133 = phi <2 x float> [ %131, %111 ], [ %110, %28 ]
  %134 = extractelement <2 x float> %133, i32 0
  %135 = fadd float %134, %0
  %136 = fsub float %134, %135
  %137 = fadd float %136, %0
  %138 = extractelement <2 x float> %133, i32 1
  %139 = fadd float %138, %137
  %140 = fadd float %135, %139
  %141 = fsub float %135, %140
  %142 = fadd float %139, %141
  %143 = fmul float %140, 0x3FF5555560000000
  %144 = fcmp olt float %143, 0x3BF0000000000000
  %145 = fmul float %143, 0x43F0000000000000
  %146 = select i1 %144, float %145, float %143
  %147 = bitcast float %146 to i32
  %148 = lshr i32 %147, 23
  %149 = and i32 %148, 255
  %150 = select i1 %144, i32 -191, i32 -127
  %151 = add nsw i32 %149, %150
  %152 = shl i32 %151, 23
  %153 = sub i32 1065353216, %152
  %154 = bitcast i32 %153 to float
  %155 = fmul float %140, %154
  %156 = fmul float %142, %154
  %157 = insertelement <2 x float> undef, float %155, i32 0
  %158 = shufflevector <2 x float> %157, <2 x float> undef, <2 x i32> zeroinitializer
  %159 = fadd <2 x float> %158, <float -1.000000e+00, float 1.000000e+00>
  %160 = fsub <2 x float> %159, %158
  %161 = fsub <2 x float> %159, %160
  %162 = fsub <2 x float> %158, %161
  %163 = fsub <2 x float> <float -1.000000e+00, float 1.000000e+00>, %160
  %164 = fadd <2 x float> %163, %162
  %165 = insertelement <2 x float> undef, float %156, i32 0
  %166 = shufflevector <2 x float> %165, <2 x float> undef, <2 x i32> zeroinitializer
  %167 = fadd <2 x float> %166, %164
  %168 = extractelement <2 x float> %159, i32 1
  %169 = fdiv float 1.000000e+00, %168
  %170 = bitcast float %168 to i32
  %171 = and i32 %170, -4096
  %172 = bitcast i32 %171 to float
  %173 = fsub float %168, %172
  %174 = bitcast float %169 to i32
  %175 = and i32 %174, -4096
  %176 = bitcast i32 %175 to float
  %177 = fsub float %169, %176
  %178 = extractelement <2 x float> %159, i32 0
  %179 = bitcast float %178 to i32
  %180 = and i32 %179, -4096
  %181 = bitcast i32 %180 to float
  %182 = fsub float %178, %181
  %183 = fmul float %178, %169
  %184 = fmul float %181, %176
  %185 = fsub float %184, %183
  %186 = fmul float %177, %181
  %187 = fadd float %185, %186
  %188 = fmul float %182, %176
  %189 = fadd float %188, %187
  %190 = fmul float %182, %177
  %191 = fadd float %190, %189
  %192 = fmul float %172, %176
  %193 = fsub float 1.000000e+00, %192
  %194 = fmul float %177, %172
  %195 = fsub float %193, %194
  %196 = fmul float %173, %176
  %197 = fsub float %195, %196
  %198 = fmul float %173, %177
  %199 = fsub float %197, %198
  %200 = fmul float %183, %199
  %201 = fadd float %191, %200
  %202 = extractelement <2 x float> %167, i32 1
  %203 = fmul float %183, %202
  %204 = extractelement <2 x float> %167, i32 0
  %205 = fsub float %204, %203
  %206 = fmul float %169, %205
  %207 = fadd float %206, %201
  %208 = bitcast float %183 to i32
  %209 = and i32 %208, -4096
  %210 = bitcast i32 %209 to float
  %211 = fsub float %183, %210
  %212 = fmul float %183, %183
  %213 = fadd float %210, %210
  %214 = fadd float %207, %207
  %215 = fmul float %212, 0x3FCEA0D200000000
  %216 = fadd float %215, 0x3FD2406C80000000
  %217 = fmul float %212, %216
  %218 = fadd float %217, 0x3FD999B240000000
  %219 = fmul float %212, %218
  %220 = fadd float %219, 0x3FE5555560000000
  %221 = sitofp i32 %151 to float
  %222 = bitcast float %221 to i32
  %223 = and i32 %222, -4096
  %224 = bitcast i32 %223 to float
  %225 = fsub float %221, %224
  %226 = fmul float %224, 0x3FE62E0000000000
  %227 = fmul float %183, %212
  %228 = bitcast float %227 to i32
  %229 = and i32 %228, -4096
  %230 = bitcast i32 %229 to float
  %231 = fsub float %227, %230
  %232 = bitcast float %220 to i32
  %233 = and i32 %232, -4096
  %234 = bitcast i32 %233 to float
  %235 = fsub float %220, %234
  %236 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %231, i32 1
  %237 = insertelement <2 x float> undef, float %221, i32 0
  %238 = insertelement <2 x float> %237, float %235, i32 1
  %239 = fmul <2 x float> %236, %238
  %240 = extractelement <2 x float> %239, i32 0
  %241 = fsub float %226, %240
  %242 = fmul float %224, 0x3F00C00000000000
  %243 = fadd float %242, %241
  %244 = fmul float %225, 0x3FE62E0000000000
  %245 = fadd float %244, %243
  %246 = fmul float %225, 0x3F00C00000000000
  %247 = fadd float %246, %245
  %248 = fmul float %221, 0x3E205C6100000000
  %249 = fsub float %247, %248
  %250 = fmul float %183, 2.000000e+00
  %251 = fmul float %207, 2.000000e+00
  %252 = bitcast float %212 to i32
  %253 = and i32 %252, -4096
  %254 = bitcast i32 %253 to float
  %255 = fsub float %212, %254
  %256 = fmul float %210, %254
  %257 = fsub float %256, %227
  %258 = insertelement <2 x float> undef, float %255, i32 0
  %259 = insertelement <2 x float> %258, float %210, i32 1
  %260 = insertelement <2 x float> undef, float %210, i32 0
  %261 = shufflevector <2 x float> %260, <2 x float> undef, <2 x i32> zeroinitializer
  %262 = fmul <2 x float> %259, %261
  %263 = insertelement <2 x float> undef, float %257, i32 0
  %264 = insertelement <2 x float> %263, float %212, i32 1
  %265 = fadd <2 x float> %262, %264
  %266 = fsub <2 x float> %262, %264
  %267 = shufflevector <2 x float> %265, <2 x float> %266, <2 x i32> <i32 0, i32 3>
  %268 = insertelement <2 x float> undef, float %211, i32 0
  %269 = shufflevector <2 x float> %268, <2 x float> undef, <2 x i32> zeroinitializer
  %270 = insertelement <2 x float> undef, float %254, i32 0
  %271 = insertelement <2 x float> %270, float %213, i32 1
  %272 = fmul <2 x float> %269, %271
  %273 = fadd <2 x float> %272, %267
  %274 = insertelement <2 x float> %258, float %211, i32 1
  %275 = fmul <2 x float> %269, %274
  %276 = fadd <2 x float> %275, %273
  %277 = insertelement <2 x float> undef, float %212, i32 0
  %278 = insertelement <2 x float> %277, float %183, i32 1
  %279 = insertelement <2 x float> undef, float %207, i32 0
  %280 = insertelement <2 x float> %279, float %214, i32 1
  %281 = fmul <2 x float> %278, %280
  %282 = fadd <2 x float> %276, %281
  %283 = extractelement <2 x float> %282, i32 1
  %284 = fmul float %183, %283
  %285 = extractelement <2 x float> %282, i32 0
  %286 = fadd float %285, %284
  %287 = fmul float %230, %234
  %288 = insertelement <2 x float> undef, float %227, i32 0
  %289 = insertelement <2 x float> %288, float %286, i32 1
  %290 = insertelement <2 x float> undef, float %220, i32 0
  %291 = shufflevector <2 x float> %290, <2 x float> undef, <2 x i32> zeroinitializer
  %292 = fmul <2 x float> %289, %291
  %293 = extractelement <2 x float> %292, i32 0
  %294 = fsub float %287, %293
  %295 = fmul float %231, %234
  %296 = fadd float %295, %294
  %297 = fmul float %235, %230
  %298 = fadd float %297, %296
  %299 = insertelement <2 x float> undef, float %250, i32 0
  %300 = insertelement <2 x float> %299, float %298, i32 1
  %301 = fadd <2 x float> %239, %300
  %302 = extractelement <2 x float> %301, i32 0
  %303 = fsub float %240, %302
  %304 = fadd float %250, %303
  %305 = fadd float %249, %304
  %306 = fadd float %305, %251
  %307 = fadd <2 x float> %301, %292
  %308 = extractelement <2 x float> %307, i32 0
  %309 = fsub float %302, %308
  %310 = fadd float %293, %309
  %311 = fadd float %310, %306
  %312 = extractelement <2 x float> %307, i32 1
  %313 = fadd float %311, %312
  %314 = fadd float %308, %313
  %315 = fpext float %4 to double
  %316 = fcmp ule double %315, 0x43EFFFFFEFFFFFFC
  %317 = fcmp ord float %314, 0.000000e+00
  %318 = and i1 %316, %317
  br i1 %318, label %323, label %319

; <label>:319:                                    ; preds = %132
  %320 = and i32 %2, -2147483648
  %321 = or i32 %320, 2139095040
  %322 = bitcast i32 %321 to float
  br label %323

; <label>:323:                                    ; preds = %132, %319
  %324 = phi float [ %322, %319 ], [ %314, %132 ]
  %325 = fcmp ord float %0, 0.000000e+00
  %326 = select i1 %325, float %324, float 0x7FF8000000000000
  %327 = icmp eq i32 %2, -2147483648
  %328 = select i1 %327, float -0.000000e+00, float %326
  ret float %328
}

; Function Attrs: nounwind uwtable
define float @Sleef_acoshf_u10(float) local_unnamed_addr #1 {
  %2 = insertelement <2 x float> undef, float %0, i32 0
  %3 = shufflevector <2 x float> %2, <2 x float> undef, <2 x i32> zeroinitializer
  %4 = fadd <2 x float> %3, <float 1.000000e+00, float -1.000000e+00>
  %5 = extractelement <2 x float> %4, i32 0
  %6 = fsub float %5, %0
  %7 = fsub float %5, %6
  %8 = fsub float %0, %7
  %9 = fsub float 1.000000e+00, %6
  %10 = fadd float %9, %8
  %11 = fadd float %5, %10
  %12 = tail call float @sqrtf(float %11) #3
  %13 = bitcast float %12 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %12, %15
  %17 = fmul float %15, %15
  %18 = extractelement <2 x float> %4, i32 1
  %19 = fsub float %18, %0
  %20 = fsub float %18, %19
  %21 = fsub float %0, %20
  %22 = fsub float -1.000000e+00, %19
  %23 = fadd float %22, %21
  %24 = fadd float %18, %23
  %25 = tail call float @sqrtf(float %24) #3
  %26 = insertelement <2 x float> undef, float %12, i32 0
  %27 = insertelement <2 x float> %26, float %25, i32 1
  %28 = fmul <2 x float> %27, %27
  %29 = extractelement <2 x float> %28, i32 0
  %30 = fsub float %17, %29
  %31 = fmul float %16, %15
  %32 = fadd float %31, %30
  %33 = fadd float %31, %32
  %34 = fmul float %16, %16
  %35 = fadd float %34, %33
  %36 = fadd <2 x float> %4, %28
  %37 = extractelement <2 x float> %36, i32 0
  %38 = fsub float %37, %5
  %39 = fsub float %37, %38
  %40 = fsub float %5, %39
  %41 = fsub float %29, %38
  %42 = fadd float %41, %40
  %43 = fadd float %10, %35
  %44 = fadd float %42, %43
  %45 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %27
  %46 = extractelement <2 x float> %45, i32 0
  %47 = bitcast float %46 to i32
  %48 = and i32 %47, -4096
  %49 = bitcast i32 %48 to float
  %50 = fsub float %46, %49
  %51 = fmul float %15, %49
  %52 = fsub float 1.000000e+00, %51
  %53 = fmul float %50, %15
  %54 = fsub float %52, %53
  %55 = fmul float %16, %49
  %56 = fsub float %54, %55
  %57 = fmul float %16, %50
  %58 = fsub float %56, %57
  %59 = fmul float %46, %58
  %60 = bitcast float %37 to i32
  %61 = and i32 %60, -4096
  %62 = bitcast i32 %61 to float
  %63 = fsub float %37, %62
  %64 = fmul float %49, %62
  %65 = fmul <2 x float> %45, %36
  %66 = extractelement <2 x float> %65, i32 0
  %67 = fsub float %64, %66
  %68 = fmul float %63, %49
  %69 = fadd float %68, %67
  %70 = fmul float %50, %62
  %71 = fadd float %70, %69
  %72 = fmul float %50, %63
  %73 = fadd float %72, %71
  %74 = fmul float %37, %59
  %75 = fadd float %73, %74
  %76 = fmul float %46, %44
  %77 = fadd float %76, %75
  %78 = fmul float %77, 5.000000e-01
  %79 = bitcast float %25 to i32
  %80 = and i32 %79, -4096
  %81 = bitcast i32 %80 to float
  %82 = fsub float %25, %81
  %83 = fmul float %81, %81
  %84 = extractelement <2 x float> %28, i32 1
  %85 = fsub float %83, %84
  %86 = fmul float %82, %81
  %87 = fadd float %86, %85
  %88 = fadd float %86, %87
  %89 = fmul float %82, %82
  %90 = fadd float %89, %88
  %91 = extractelement <2 x float> %36, i32 1
  %92 = fsub float %91, %18
  %93 = fsub float %91, %92
  %94 = fsub float %18, %93
  %95 = fsub float %84, %92
  %96 = fadd float %95, %94
  %97 = fadd float %23, %90
  %98 = fadd float %96, %97
  %99 = extractelement <2 x float> %45, i32 1
  %100 = bitcast float %99 to i32
  %101 = and i32 %100, -4096
  %102 = bitcast i32 %101 to float
  %103 = fsub float %99, %102
  %104 = fmul float %81, %102
  %105 = fsub float 1.000000e+00, %104
  %106 = fmul float %103, %81
  %107 = fsub float %105, %106
  %108 = fmul float %82, %102
  %109 = fsub float %107, %108
  %110 = fmul float %82, %103
  %111 = fsub float %109, %110
  %112 = fmul float %99, %111
  %113 = bitcast float %91 to i32
  %114 = and i32 %113, -4096
  %115 = bitcast i32 %114 to float
  %116 = fsub float %91, %115
  %117 = fmul float %102, %115
  %118 = extractelement <2 x float> %65, i32 1
  %119 = fsub float %117, %118
  %120 = fmul float %116, %102
  %121 = fadd float %120, %119
  %122 = fmul float %103, %115
  %123 = fadd float %122, %121
  %124 = fmul float %103, %116
  %125 = fadd float %124, %123
  %126 = fmul float %91, %112
  %127 = fadd float %125, %126
  %128 = fmul float %99, %98
  %129 = fadd float %128, %127
  %130 = fmul <2 x float> %65, <float 5.000000e-01, float 5.000000e-01>
  %131 = fmul float %129, 5.000000e-01
  %132 = extractelement <2 x float> %130, i32 0
  %133 = bitcast float %132 to i32
  %134 = and i32 %133, -4096
  %135 = bitcast i32 %134 to float
  %136 = fsub float %132, %135
  %137 = extractelement <2 x float> %130, i32 1
  %138 = bitcast float %137 to i32
  %139 = and i32 %138, -4096
  %140 = bitcast i32 %139 to float
  %141 = fsub float %137, %140
  %142 = fmul float %132, %137
  %143 = fmul float %135, %140
  %144 = fsub float %143, %142
  %145 = fmul float %136, %140
  %146 = fadd float %145, %144
  %147 = fmul float %141, %135
  %148 = fadd float %147, %146
  %149 = fmul float %136, %141
  %150 = fadd float %149, %148
  %151 = fmul float %132, %131
  %152 = fadd float %150, %151
  %153 = fmul float %137, %78
  %154 = fadd float %153, %152
  %155 = fadd float %142, %0
  %156 = fsub float %155, %142
  %157 = fsub float %155, %156
  %158 = fsub float %142, %157
  %159 = fsub float %0, %156
  %160 = fadd float %159, %158
  %161 = fadd float %160, %154
  %162 = fmul float %155, 0x3FF5555560000000
  %163 = fcmp olt float %162, 0x3BF0000000000000
  %164 = fmul float %162, 0x43F0000000000000
  %165 = select i1 %163, float %164, float %162
  %166 = bitcast float %165 to i32
  %167 = lshr i32 %166, 23
  %168 = and i32 %167, 255
  %169 = select i1 %163, i32 -191, i32 -127
  %170 = add nsw i32 %168, %169
  %171 = shl i32 %170, 23
  %172 = sub i32 1065353216, %171
  %173 = bitcast i32 %172 to float
  %174 = fmul float %155, %173
  %175 = fmul float %161, %173
  %176 = insertelement <2 x float> undef, float %174, i32 0
  %177 = shufflevector <2 x float> %176, <2 x float> undef, <2 x i32> zeroinitializer
  %178 = fadd <2 x float> %177, <float -1.000000e+00, float 1.000000e+00>
  %179 = fsub <2 x float> %178, %177
  %180 = fsub <2 x float> %178, %179
  %181 = fsub <2 x float> %177, %180
  %182 = fsub <2 x float> <float -1.000000e+00, float 1.000000e+00>, %179
  %183 = fadd <2 x float> %182, %181
  %184 = insertelement <2 x float> undef, float %175, i32 0
  %185 = shufflevector <2 x float> %184, <2 x float> undef, <2 x i32> zeroinitializer
  %186 = fadd <2 x float> %185, %183
  %187 = extractelement <2 x float> %178, i32 1
  %188 = fdiv float 1.000000e+00, %187
  %189 = bitcast float %187 to i32
  %190 = and i32 %189, -4096
  %191 = bitcast i32 %190 to float
  %192 = fsub float %187, %191
  %193 = bitcast float %188 to i32
  %194 = and i32 %193, -4096
  %195 = bitcast i32 %194 to float
  %196 = fsub float %188, %195
  %197 = extractelement <2 x float> %178, i32 0
  %198 = bitcast float %197 to i32
  %199 = and i32 %198, -4096
  %200 = bitcast i32 %199 to float
  %201 = fsub float %197, %200
  %202 = fmul float %197, %188
  %203 = fmul float %200, %195
  %204 = fsub float %203, %202
  %205 = fmul float %196, %200
  %206 = fadd float %204, %205
  %207 = fmul float %201, %195
  %208 = fadd float %207, %206
  %209 = fmul float %201, %196
  %210 = fadd float %209, %208
  %211 = fmul float %191, %195
  %212 = fsub float 1.000000e+00, %211
  %213 = fmul float %196, %191
  %214 = fsub float %212, %213
  %215 = fmul float %192, %195
  %216 = fsub float %214, %215
  %217 = fmul float %192, %196
  %218 = fsub float %216, %217
  %219 = fmul float %202, %218
  %220 = fadd float %210, %219
  %221 = extractelement <2 x float> %186, i32 1
  %222 = fmul float %202, %221
  %223 = extractelement <2 x float> %186, i32 0
  %224 = fsub float %223, %222
  %225 = fmul float %188, %224
  %226 = fadd float %225, %220
  %227 = bitcast float %202 to i32
  %228 = and i32 %227, -4096
  %229 = bitcast i32 %228 to float
  %230 = fsub float %202, %229
  %231 = fmul float %202, %202
  %232 = fadd float %229, %229
  %233 = fadd float %226, %226
  %234 = fmul float %231, 0x3FCEA0D200000000
  %235 = fadd float %234, 0x3FD2406C80000000
  %236 = fmul float %231, %235
  %237 = fadd float %236, 0x3FD999B240000000
  %238 = fmul float %231, %237
  %239 = fadd float %238, 0x3FE5555560000000
  %240 = sitofp i32 %170 to float
  %241 = bitcast float %240 to i32
  %242 = and i32 %241, -4096
  %243 = bitcast i32 %242 to float
  %244 = fsub float %240, %243
  %245 = fmul float %243, 0x3FE62E0000000000
  %246 = fmul float %202, %231
  %247 = bitcast float %246 to i32
  %248 = and i32 %247, -4096
  %249 = bitcast i32 %248 to float
  %250 = fsub float %246, %249
  %251 = bitcast float %239 to i32
  %252 = and i32 %251, -4096
  %253 = bitcast i32 %252 to float
  %254 = fsub float %239, %253
  %255 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %250, i32 1
  %256 = insertelement <2 x float> undef, float %240, i32 0
  %257 = insertelement <2 x float> %256, float %254, i32 1
  %258 = fmul <2 x float> %255, %257
  %259 = extractelement <2 x float> %258, i32 0
  %260 = fsub float %245, %259
  %261 = fmul float %243, 0x3F00C00000000000
  %262 = fadd float %261, %260
  %263 = fmul float %244, 0x3FE62E0000000000
  %264 = fadd float %263, %262
  %265 = fmul float %244, 0x3F00C00000000000
  %266 = fadd float %265, %264
  %267 = fmul float %240, 0x3E205C6100000000
  %268 = fsub float %266, %267
  %269 = fmul float %202, 2.000000e+00
  %270 = fmul float %226, 2.000000e+00
  %271 = bitcast float %231 to i32
  %272 = and i32 %271, -4096
  %273 = bitcast i32 %272 to float
  %274 = fsub float %231, %273
  %275 = fmul float %229, %273
  %276 = fsub float %275, %246
  %277 = insertelement <2 x float> undef, float %274, i32 0
  %278 = insertelement <2 x float> %277, float %229, i32 1
  %279 = insertelement <2 x float> undef, float %229, i32 0
  %280 = shufflevector <2 x float> %279, <2 x float> undef, <2 x i32> zeroinitializer
  %281 = fmul <2 x float> %278, %280
  %282 = insertelement <2 x float> undef, float %276, i32 0
  %283 = insertelement <2 x float> %282, float %231, i32 1
  %284 = fadd <2 x float> %281, %283
  %285 = fsub <2 x float> %281, %283
  %286 = shufflevector <2 x float> %284, <2 x float> %285, <2 x i32> <i32 0, i32 3>
  %287 = insertelement <2 x float> undef, float %230, i32 0
  %288 = shufflevector <2 x float> %287, <2 x float> undef, <2 x i32> zeroinitializer
  %289 = insertelement <2 x float> undef, float %273, i32 0
  %290 = insertelement <2 x float> %289, float %232, i32 1
  %291 = fmul <2 x float> %288, %290
  %292 = fadd <2 x float> %291, %286
  %293 = insertelement <2 x float> %277, float %230, i32 1
  %294 = fmul <2 x float> %288, %293
  %295 = fadd <2 x float> %294, %292
  %296 = insertelement <2 x float> undef, float %231, i32 0
  %297 = insertelement <2 x float> %296, float %202, i32 1
  %298 = insertelement <2 x float> undef, float %226, i32 0
  %299 = insertelement <2 x float> %298, float %233, i32 1
  %300 = fmul <2 x float> %297, %299
  %301 = fadd <2 x float> %295, %300
  %302 = extractelement <2 x float> %301, i32 1
  %303 = fmul float %202, %302
  %304 = extractelement <2 x float> %301, i32 0
  %305 = fadd float %304, %303
  %306 = fmul float %249, %253
  %307 = insertelement <2 x float> undef, float %246, i32 0
  %308 = insertelement <2 x float> %307, float %305, i32 1
  %309 = insertelement <2 x float> undef, float %239, i32 0
  %310 = shufflevector <2 x float> %309, <2 x float> undef, <2 x i32> zeroinitializer
  %311 = fmul <2 x float> %308, %310
  %312 = extractelement <2 x float> %311, i32 0
  %313 = fsub float %306, %312
  %314 = fmul float %250, %253
  %315 = fadd float %314, %313
  %316 = fmul float %254, %249
  %317 = fadd float %316, %315
  %318 = insertelement <2 x float> undef, float %269, i32 0
  %319 = insertelement <2 x float> %318, float %317, i32 1
  %320 = fadd <2 x float> %258, %319
  %321 = extractelement <2 x float> %320, i32 0
  %322 = fsub float %259, %321
  %323 = fadd float %269, %322
  %324 = fadd float %268, %323
  %325 = fadd float %324, %270
  %326 = fadd <2 x float> %320, %311
  %327 = extractelement <2 x float> %326, i32 0
  %328 = fsub float %321, %327
  %329 = fadd float %312, %328
  %330 = fadd float %329, %325
  %331 = extractelement <2 x float> %326, i32 1
  %332 = fadd float %330, %331
  %333 = fadd float %327, %332
  %334 = fpext float %0 to double
  %335 = fcmp ogt double %334, 0x43EFFFFFEFFFFFFC
  %336 = fcmp ord float %333, 0.000000e+00
  %337 = select i1 %336, float %333, float 0x7FF0000000000000
  %338 = select i1 %335, float 0x7FF0000000000000, float %337
  %339 = fcmp oeq float %0, 1.000000e+00
  %340 = select i1 %339, float 0.000000e+00, float %338
  %341 = fcmp olt float %0, 1.000000e+00
  %342 = select i1 %341, float 0x7FF8000000000000, float %340
  %343 = fcmp ord float %0, 0.000000e+00
  %344 = select i1 %343, float %342, float 0x7FF8000000000000
  ret float %344
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_atanhf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fadd float %4, 1.000000e+00
  %6 = fadd float %5, -1.000000e+00
  %7 = fsub float %5, %6
  %8 = fsub float 1.000000e+00, %7
  %9 = fsub float %4, %6
  %10 = fadd float %9, %8
  %11 = fsub float -0.000000e+00, %4
  %12 = fsub float 1.000000e+00, %4
  %13 = fadd float %12, -1.000000e+00
  %14 = fsub float %12, %13
  %15 = fsub float 1.000000e+00, %14
  %16 = fsub float %11, %13
  %17 = fadd float %16, %15
  %18 = fdiv float 1.000000e+00, %12
  %19 = bitcast float %12 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %12, %21
  %23 = bitcast float %18 to i32
  %24 = and i32 %23, -4096
  %25 = bitcast i32 %24 to float
  %26 = fsub float %18, %25
  %27 = bitcast float %5 to i32
  %28 = and i32 %27, -4096
  %29 = bitcast i32 %28 to float
  %30 = fsub float %5, %29
  %31 = fmul float %5, %18
  %32 = fmul float %29, %25
  %33 = fsub float %32, %31
  %34 = fmul float %26, %29
  %35 = fadd float %33, %34
  %36 = fmul float %30, %25
  %37 = fadd float %36, %35
  %38 = fmul float %30, %26
  %39 = fadd float %38, %37
  %40 = fmul float %21, %25
  %41 = fsub float 1.000000e+00, %40
  %42 = fmul float %26, %21
  %43 = fsub float %41, %42
  %44 = fmul float %22, %25
  %45 = fsub float %43, %44
  %46 = fmul float %22, %26
  %47 = fsub float %45, %46
  %48 = fmul float %31, %47
  %49 = fadd float %39, %48
  %50 = fmul float %31, %17
  %51 = fsub float %10, %50
  %52 = fmul float %18, %51
  %53 = fadd float %52, %49
  %54 = fmul float %31, 0x3FF5555560000000
  %55 = fcmp olt float %54, 0x3BF0000000000000
  %56 = fmul float %54, 0x43F0000000000000
  %57 = select i1 %55, float %56, float %54
  %58 = bitcast float %57 to i32
  %59 = lshr i32 %58, 23
  %60 = and i32 %59, 255
  %61 = select i1 %55, i32 -191, i32 -127
  %62 = add nsw i32 %60, %61
  %63 = shl i32 %62, 23
  %64 = sub i32 1065353216, %63
  %65 = bitcast i32 %64 to float
  %66 = fmul float %31, %65
  %67 = fmul float %53, %65
  %68 = fadd float %66, -1.000000e+00
  %69 = fsub float %68, %66
  %70 = fsub float %68, %69
  %71 = fsub float %66, %70
  %72 = fsub float -1.000000e+00, %69
  %73 = fadd float %72, %71
  %74 = fadd float %67, %73
  %75 = fadd float %66, 1.000000e+00
  %76 = fsub float %75, %66
  %77 = fsub float %75, %76
  %78 = fsub float %66, %77
  %79 = fsub float 1.000000e+00, %76
  %80 = fadd float %79, %78
  %81 = fadd float %67, %80
  %82 = fdiv float 1.000000e+00, %75
  %83 = bitcast float %75 to i32
  %84 = and i32 %83, -4096
  %85 = bitcast i32 %84 to float
  %86 = fsub float %75, %85
  %87 = bitcast float %82 to i32
  %88 = and i32 %87, -4096
  %89 = bitcast i32 %88 to float
  %90 = fsub float %82, %89
  %91 = bitcast float %68 to i32
  %92 = and i32 %91, -4096
  %93 = bitcast i32 %92 to float
  %94 = fsub float %68, %93
  %95 = fmul float %68, %82
  %96 = fmul float %93, %89
  %97 = fsub float %96, %95
  %98 = fmul float %90, %93
  %99 = fadd float %97, %98
  %100 = fmul float %94, %89
  %101 = fadd float %100, %99
  %102 = fmul float %94, %90
  %103 = fadd float %102, %101
  %104 = fmul float %85, %89
  %105 = fsub float 1.000000e+00, %104
  %106 = fmul float %90, %85
  %107 = fsub float %105, %106
  %108 = fmul float %86, %89
  %109 = fsub float %107, %108
  %110 = fmul float %86, %90
  %111 = fsub float %109, %110
  %112 = fmul float %95, %111
  %113 = fadd float %103, %112
  %114 = fmul float %95, %81
  %115 = fsub float %74, %114
  %116 = fmul float %82, %115
  %117 = fadd float %116, %113
  %118 = bitcast float %95 to i32
  %119 = and i32 %118, -4096
  %120 = bitcast i32 %119 to float
  %121 = fsub float %95, %120
  %122 = fmul float %95, %95
  %123 = fmul float %120, %120
  %124 = fsub float %123, %122
  %125 = fadd float %120, %120
  %126 = fmul float %125, %121
  %127 = fadd float %124, %126
  %128 = fmul float %121, %121
  %129 = fadd float %128, %127
  %130 = fadd float %117, %117
  %131 = fmul float %95, %130
  %132 = fadd float %129, %131
  %133 = fmul float %122, 0x3FCEA0D200000000
  %134 = fadd float %133, 0x3FD2406C80000000
  %135 = fmul float %122, %134
  %136 = fadd float %135, 0x3FD999B240000000
  %137 = fmul float %122, %136
  %138 = fadd float %137, 0x3FE5555560000000
  %139 = sitofp i32 %62 to float
  %140 = bitcast float %139 to i32
  %141 = and i32 %140, -4096
  %142 = bitcast i32 %141 to float
  %143 = fsub float %139, %142
  %144 = fmul float %139, 0x3FE62E4300000000
  %145 = fmul float %142, 0x3FE62E0000000000
  %146 = fsub float %145, %144
  %147 = fmul float %142, 0x3F00C00000000000
  %148 = fadd float %147, %146
  %149 = fmul float %143, 0x3FE62E0000000000
  %150 = fadd float %149, %148
  %151 = fmul float %143, 0x3F00C00000000000
  %152 = fadd float %151, %150
  %153 = fmul float %139, 0x3E205C6100000000
  %154 = fsub float %152, %153
  %155 = fmul float %95, 2.000000e+00
  %156 = fmul float %117, 2.000000e+00
  %157 = fadd float %144, %155
  %158 = fsub float %144, %157
  %159 = fadd float %155, %158
  %160 = fadd float %154, %159
  %161 = fadd float %160, %156
  %162 = bitcast float %122 to i32
  %163 = and i32 %162, -4096
  %164 = bitcast i32 %163 to float
  %165 = fsub float %122, %164
  %166 = fmul float %95, %122
  %167 = fmul float %120, %164
  %168 = fsub float %167, %166
  %169 = fmul float %165, %120
  %170 = fadd float %169, %168
  %171 = fmul float %121, %164
  %172 = fadd float %171, %170
  %173 = fmul float %121, %165
  %174 = fadd float %173, %172
  %175 = fmul float %122, %117
  %176 = fadd float %174, %175
  %177 = fmul float %95, %132
  %178 = fadd float %176, %177
  %179 = bitcast float %166 to i32
  %180 = and i32 %179, -4096
  %181 = bitcast i32 %180 to float
  %182 = fsub float %166, %181
  %183 = bitcast float %138 to i32
  %184 = and i32 %183, -4096
  %185 = bitcast i32 %184 to float
  %186 = fsub float %138, %185
  %187 = fmul float %166, %138
  %188 = fmul float %181, %185
  %189 = fsub float %188, %187
  %190 = fmul float %182, %185
  %191 = fadd float %190, %189
  %192 = fmul float %186, %181
  %193 = fadd float %192, %191
  %194 = fmul float %182, %186
  %195 = fadd float %194, %193
  %196 = fmul float %138, %178
  %197 = fadd float %195, %196
  %198 = fadd float %157, %187
  %199 = fsub float %157, %198
  %200 = fadd float %187, %199
  %201 = fadd float %200, %161
  %202 = fadd float %201, %197
  %203 = fcmp ogt float %4, 1.000000e+00
  br i1 %203, label %209, label %204

; <label>:204:                                    ; preds = %1
  %205 = fcmp oeq float %4, 1.000000e+00
  br i1 %205, label %209, label %206

; <label>:206:                                    ; preds = %204
  %207 = fadd float %198, %202
  %208 = fmul float %207, 5.000000e-01
  br label %209

; <label>:209:                                    ; preds = %206, %204, %1
  %210 = phi float [ 0x7FF8000000000000, %1 ], [ %208, %206 ], [ 0x7FF0000000000000, %204 ]
  %211 = fcmp une float %0, 0x7FF0000000000000
  %212 = fcmp une float %0, 0xFFF0000000000000
  %213 = and i1 %212, %211
  br i1 %213, label %214, label %218

; <label>:214:                                    ; preds = %209
  %215 = fcmp ord float %210, 0.000000e+00
  %216 = bitcast float %210 to i32
  %217 = select i1 %215, i32 %216, i32 2143289344
  br label %218

; <label>:218:                                    ; preds = %209, %214
  %219 = phi i32 [ 2143289344, %209 ], [ %217, %214 ]
  %220 = and i32 %2, -2147483648
  %221 = xor i32 %219, %220
  %222 = bitcast i32 %221 to float
  %223 = fcmp ord float %0, 0.000000e+00
  %224 = select i1 %223, float %222, float 0x7FF8000000000000
  ret float %224
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp2f_u10(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0.000000e+00
  %3 = select i1 %2, float -5.000000e-01, float 5.000000e-01
  %4 = fadd float %3, %0
  %5 = fptosi float %4 to i32
  %6 = sitofp i32 %5 to float
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = fsub float %0, %8
  %10 = fmul float %9, 0x3F2421B200000000
  %11 = fadd float %10, 0x3F55F14660000000
  %12 = fmul float %9, %11
  %13 = fadd float %12, 0x3F83B2CDC0000000
  %14 = fmul float %9, %13
  %15 = fadd float %14, 0x3FAC6AF380000000
  %16 = fmul float %9, %15
  %17 = fadd float %16, 0x3FCEBFBD80000000
  %18 = fmul float %9, %17
  %19 = fadd float %18, 0x3FE62E4300000000
  %20 = bitcast float %19 to i32
  %21 = and i32 %20, -4096
  %22 = bitcast i32 %21 to float
  %23 = fsub float %19, %22
  %24 = bitcast float %9 to i32
  %25 = and i32 %24, -4096
  %26 = bitcast i32 %25 to float
  %27 = fsub float %9, %26
  %28 = fmul float %9, %19
  %29 = fmul float %26, %22
  %30 = fsub float %29, %28
  %31 = fmul float %23, %26
  %32 = fadd float %31, %30
  %33 = fmul float %27, %22
  %34 = fadd float %33, %32
  %35 = fmul float %27, %23
  %36 = fadd float %35, %34
  %37 = fadd float %28, 1.000000e+00
  %38 = fsub float 1.000000e+00, %37
  %39 = fadd float %28, %38
  %40 = fadd float %39, %36
  %41 = fadd float %37, %40
  %42 = ashr i32 %7, 1
  %43 = shl i32 %42, 23
  %44 = add i32 %43, 1065353216
  %45 = bitcast i32 %44 to float
  %46 = fmul float %41, %45
  %47 = sub nsw i32 %7, %42
  %48 = shl i32 %47, 23
  %49 = add i32 %48, 1065353216
  %50 = bitcast i32 %49 to float
  %51 = fmul float %46, %50
  %52 = fcmp ult float %0, 1.280000e+02
  %53 = select i1 %52, float %51, float 0x7FF0000000000000
  %54 = fcmp olt float %0, -1.500000e+02
  %55 = select i1 %54, float 0.000000e+00, float %53
  ret float %55
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp2f_u35(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0.000000e+00
  %3 = select i1 %2, float -5.000000e-01, float 5.000000e-01
  %4 = fadd float %3, %0
  %5 = fptosi float %4 to i32
  %6 = sitofp i32 %5 to float
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = fsub float %0, %8
  %10 = fmul float %9, 0x3F2421B200000000
  %11 = fadd float %10, 0x3F55F14660000000
  %12 = fmul float %9, %11
  %13 = fadd float %12, 0x3F83B2CDC0000000
  %14 = fmul float %9, %13
  %15 = fadd float %14, 0x3FAC6AF380000000
  %16 = fmul float %9, %15
  %17 = fadd float %16, 0x3FCEBFBD80000000
  %18 = fmul float %9, %17
  %19 = fadd float %18, 0x3FE62E4300000000
  %20 = fmul float %9, %19
  %21 = fadd float %20, 1.000000e+00
  %22 = ashr i32 %7, 1
  %23 = shl i32 %22, 23
  %24 = add i32 %23, 1065353216
  %25 = bitcast i32 %24 to float
  %26 = fmul float %21, %25
  %27 = sub nsw i32 %7, %22
  %28 = shl i32 %27, 23
  %29 = add i32 %28, 1065353216
  %30 = bitcast i32 %29 to float
  %31 = fmul float %26, %30
  %32 = fcmp ult float %0, 1.280000e+02
  %33 = select i1 %32, float %31, float 0x7FF0000000000000
  %34 = fcmp olt float %0, -1.500000e+02
  %35 = select i1 %34, float 0.000000e+00, float %33
  ret float %35
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp10f_u10(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = fcmp olt float %2, 0.000000e+00
  %4 = select i1 %3, float -5.000000e-01, float 5.000000e-01
  %5 = fadd float %2, %4
  %6 = fptosi float %5 to i32
  %7 = sitofp i32 %6 to float
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0x3FD3440000000000
  %11 = fsub float %0, %10
  %12 = fmul float %9, 0x3ED3509F80000000
  %13 = fsub float %11, %12
  %14 = fmul float %13, 0x3FB16A1F80000000
  %15 = fadd float %14, 0x3FCA997420000000
  %16 = fmul float %13, %15
  %17 = fadd float %16, 0x3FE142AFA0000000
  %18 = fmul float %13, %17
  %19 = fadd float %18, 0x3FF2BD6BC0000000
  %20 = fmul float %13, %19
  %21 = fadd float %20, 0x40004705A0000000
  %22 = fmul float %13, %21
  %23 = fadd float %22, 0x40053524C0000000
  %24 = fmul float %13, %23
  %25 = fadd float %24, 0x40026BB1C0000000
  %26 = fsub float 0x40026BB1C0000000, %25
  %27 = fadd float %24, %26
  %28 = fadd float %27, 0xBE610586A0000000
  %29 = bitcast float %25 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %25, %31
  %33 = bitcast float %13 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %13, %35
  %37 = fmul float %13, %25
  %38 = fmul float %35, %31
  %39 = fsub float %38, %37
  %40 = fmul float %32, %35
  %41 = fadd float %39, %40
  %42 = fmul float %36, %31
  %43 = fadd float %42, %41
  %44 = fmul float %36, %32
  %45 = fadd float %44, %43
  %46 = fmul float %13, %28
  %47 = fadd float %46, %45
  %48 = fadd float %37, 1.000000e+00
  %49 = fsub float 1.000000e+00, %48
  %50 = fadd float %37, %49
  %51 = fadd float %50, %47
  %52 = fadd float %48, %51
  %53 = ashr i32 %8, 1
  %54 = shl i32 %53, 23
  %55 = add i32 %54, 1065353216
  %56 = bitcast i32 %55 to float
  %57 = fmul float %52, %56
  %58 = sub nsw i32 %8, %53
  %59 = shl i32 %58, 23
  %60 = add i32 %59, 1065353216
  %61 = bitcast i32 %60 to float
  %62 = fmul float %57, %61
  %63 = fcmp ogt float %0, 0x4043441360000000
  %64 = select i1 %63, float 0x7FF0000000000000, float %62
  %65 = fcmp olt float %0, -5.000000e+01
  %66 = select i1 %65, float 0.000000e+00, float %64
  ret float %66
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_exp10f_u35(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 0x400A934F00000000
  %3 = fcmp olt float %2, 0.000000e+00
  %4 = select i1 %3, float -5.000000e-01, float 5.000000e-01
  %5 = fadd float %2, %4
  %6 = fptosi float %5 to i32
  %7 = sitofp i32 %6 to float
  %8 = fptosi float %7 to i32
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 0x3FD3440000000000
  %11 = fsub float %0, %10
  %12 = fmul float %9, 0x3ED3509F80000000
  %13 = fsub float %11, %12
  %14 = fmul float %13, 0x3FCA6B54E0000000
  %15 = fadd float %14, 0x3FE1565340000000
  %16 = fmul float %13, %15
  %17 = fadd float %16, 0x3FF2BD9740000000
  %18 = fmul float %13, %17
  %19 = fadd float %18, 0x400046F9C0000000
  %20 = fmul float %13, %19
  %21 = fadd float %20, 0x40053524A0000000
  %22 = fmul float %13, %21
  %23 = fadd float %22, 0x40026BB1C0000000
  %24 = fmul float %13, %23
  %25 = fadd float %24, 1.000000e+00
  %26 = ashr i32 %8, 1
  %27 = shl i32 %26, 23
  %28 = add i32 %27, 1065353216
  %29 = bitcast i32 %28 to float
  %30 = fmul float %25, %29
  %31 = sub nsw i32 %8, %26
  %32 = shl i32 %31, 23
  %33 = add i32 %32, 1065353216
  %34 = bitcast i32 %33 to float
  %35 = fmul float %30, %34
  %36 = fcmp ogt float %0, 0x4043441360000000
  %37 = select i1 %36, float 0x7FF0000000000000, float %35
  %38 = fcmp olt float %0, -5.000000e+01
  %39 = select i1 %38, float 0.000000e+00, float %37
  ret float %39
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_expm1f_u10(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 0.000000e+00
  %3 = fmul float %2, 0x3FF7154760000000
  %4 = fcmp olt float %3, 0.000000e+00
  %5 = select i1 %4, float -5.000000e-01, float 5.000000e-01
  %6 = fadd float %3, %5
  %7 = fptosi float %6 to i32
  %8 = sitofp i32 %7 to float
  %9 = fptosi float %8 to i32
  %10 = sitofp i32 %9 to float
  %11 = fmul float %10, 0xBFE62E4000000000
  %12 = fadd float %11, %0
  %13 = fsub float %12, %0
  %14 = fsub float %12, %13
  %15 = fsub float %0, %14
  %16 = fsub float %11, %13
  %17 = fadd float %16, %15
  %18 = fadd float %17, 0.000000e+00
  %19 = fmul float %10, 0xBEB7F7D1C0000000
  %20 = fadd float %19, %12
  %21 = fsub float %20, %12
  %22 = fsub float %20, %21
  %23 = fsub float %12, %22
  %24 = fsub float %19, %21
  %25 = fadd float %24, %23
  %26 = fadd float %18, %25
  %27 = fmul float %20, 0x3F29F6FFE0000000
  %28 = fadd float %27, 0x3F56D7EF80000000
  %29 = fmul float %20, %28
  %30 = fadd float %29, 0x3F811121A0000000
  %31 = fmul float %20, %30
  %32 = fadd float %31, 0x3FA5554B80000000
  %33 = bitcast float %20 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %20, %35
  %37 = bitcast float %32 to i32
  %38 = and i32 %37, -4096
  %39 = bitcast i32 %38 to float
  %40 = fsub float %32, %39
  %41 = fmul float %20, %32
  %42 = fmul float %35, %39
  %43 = fsub float %42, %41
  %44 = fmul float %36, %39
  %45 = fadd float %44, %43
  %46 = fmul float %40, %35
  %47 = fadd float %46, %45
  %48 = fmul float %36, %40
  %49 = fadd float %48, %47
  %50 = fmul float %26, %32
  %51 = fadd float %50, %49
  %52 = fadd float %41, 0x3FC5555540000000
  %53 = fsub float %52, %41
  %54 = fsub float %52, %53
  %55 = fsub float %41, %54
  %56 = fsub float 0x3FC5555540000000, %53
  %57 = fadd float %56, %55
  %58 = fadd float %57, %51
  %59 = bitcast float %52 to i32
  %60 = and i32 %59, -4096
  %61 = bitcast i32 %60 to float
  %62 = fsub float %52, %61
  %63 = fmul float %20, %52
  %64 = fmul float %35, %61
  %65 = fsub float %64, %63
  %66 = fmul float %36, %61
  %67 = fadd float %66, %65
  %68 = fmul float %62, %35
  %69 = fadd float %68, %67
  %70 = fmul float %36, %62
  %71 = fadd float %70, %69
  %72 = fmul float %20, %58
  %73 = fadd float %71, %72
  %74 = fmul float %26, %52
  %75 = fadd float %74, %73
  %76 = fadd float %63, 5.000000e-01
  %77 = fsub float %76, %63
  %78 = fsub float %76, %77
  %79 = fsub float %63, %78
  %80 = fsub float 5.000000e-01, %77
  %81 = fadd float %80, %79
  %82 = fadd float %81, %75
  %83 = fmul float %20, %20
  %84 = fmul float %35, %35
  %85 = fsub float %84, %83
  %86 = fadd float %35, %35
  %87 = fmul float %86, %36
  %88 = fadd float %85, %87
  %89 = fmul float %36, %36
  %90 = fadd float %89, %88
  %91 = fadd float %26, %26
  %92 = fmul float %20, %91
  %93 = fadd float %92, %90
  %94 = bitcast float %83 to i32
  %95 = and i32 %94, -4096
  %96 = bitcast i32 %95 to float
  %97 = fsub float %83, %96
  %98 = bitcast float %76 to i32
  %99 = and i32 %98, -4096
  %100 = bitcast i32 %99 to float
  %101 = fsub float %76, %100
  %102 = fmul float %83, %76
  %103 = fmul float %96, %100
  %104 = fsub float %103, %102
  %105 = fmul float %97, %100
  %106 = fadd float %105, %104
  %107 = fmul float %101, %96
  %108 = fadd float %107, %106
  %109 = fmul float %97, %101
  %110 = fadd float %109, %108
  %111 = fmul float %83, %82
  %112 = fadd float %110, %111
  %113 = fmul float %93, %76
  %114 = fadd float %113, %112
  %115 = fadd float %20, %102
  %116 = fsub float %115, %20
  %117 = fsub float %115, %116
  %118 = fsub float %20, %117
  %119 = fsub float %102, %116
  %120 = fadd float %119, %118
  %121 = fadd float %26, %114
  %122 = fadd float %120, %121
  %123 = fadd float %115, 1.000000e+00
  %124 = fadd float %123, -1.000000e+00
  %125 = fsub float %123, %124
  %126 = fsub float 1.000000e+00, %125
  %127 = fsub float %115, %124
  %128 = fadd float %127, %126
  %129 = fadd float %128, %122
  %130 = ashr i32 %9, 1
  %131 = shl i32 %130, 23
  %132 = add i32 %131, 1065353216
  %133 = bitcast i32 %132 to float
  %134 = fmul float %123, %133
  %135 = sub nsw i32 %9, %130
  %136 = shl i32 %135, 23
  %137 = add i32 %136, 1065353216
  %138 = bitcast i32 %137 to float
  %139 = fmul float %134, %138
  %140 = fmul float %129, %133
  %141 = fmul float %140, %138
  %142 = fcmp olt float %0, -1.040000e+02
  %143 = insertelement <2 x float> undef, float %139, i32 0
  %144 = insertelement <2 x float> %143, float %141, i32 1
  %145 = select i1 %142, <2 x float> zeroinitializer, <2 x float> %144
  %146 = extractelement <2 x float> %145, i32 0
  %147 = fadd float %146, -1.000000e+00
  %148 = fsub float %147, %146
  %149 = fsub float %147, %148
  %150 = fsub float %146, %149
  %151 = fsub float -1.000000e+00, %148
  %152 = fadd float %151, %150
  %153 = extractelement <2 x float> %145, i32 1
  %154 = fadd float %153, %152
  %155 = fadd float %147, %154
  %156 = fcmp ogt float %0, 0x40562E42E0000000
  %157 = select i1 %156, float 0x7FF0000000000000, float %155
  %158 = fcmp olt float %0, 0xC030A2B240000000
  %159 = select i1 %158, float -1.000000e+00, float %157
  %160 = bitcast float %0 to i32
  %161 = icmp eq i32 %160, -2147483648
  %162 = select i1 %161, float -0.000000e+00, float %159
  ret float %162
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log10f_u10(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %3, float %0
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -191, i32 -127
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fadd float %13, 1.000000e+00
  %19 = fadd float %18, -1.000000e+00
  %20 = fdiv float 1.000000e+00, %18
  %21 = bitcast float %18 to i32
  %22 = and i32 %21, -4096
  %23 = bitcast i32 %22 to float
  %24 = fsub float %18, %23
  %25 = bitcast float %20 to i32
  %26 = and i32 %25, -4096
  %27 = bitcast i32 %26 to float
  %28 = fsub float %20, %27
  %29 = bitcast float %16 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %16, %31
  %33 = fmul float %16, %20
  %34 = fmul float %33, %33
  %35 = fmul float %34, 0x3FC0D2AA40000000
  %36 = fadd float %35, 0x3FC636DD80000000
  %37 = fmul float %34, %36
  %38 = fadd float %37, 0x3FD287ACE0000000
  %39 = sitofp i32 %15 to float
  %40 = bitcast float %39 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %39, %42
  %44 = fmul float %39, 0x3FD3441360000000
  %45 = bitcast float %33 to i32
  %46 = and i32 %45, -4096
  %47 = bitcast i32 %46 to float
  %48 = fsub float %33, %47
  %49 = fmul float %33, 0x3FEBCB7B20000000
  %50 = fadd float %44, %49
  %51 = fmul float %33, %34
  %52 = fmul float %51, %38
  %53 = fadd float %50, %52
  %54 = fcmp olt float %4, 0.000000e+00
  br i1 %54, label %121, label %55

; <label>:55:                                     ; preds = %1
  %56 = fcmp une float %4, 0xFFF0000000000000
  %57 = fcmp une float %4, 0x7FF0000000000000
  %58 = and i1 %56, %57
  %59 = fsub float %13, %17
  %60 = fsub float %16, %17
  %61 = fsub float -1.000000e+00, %60
  %62 = fadd float %59, %61
  %63 = fsub float %13, %19
  %64 = fsub float %18, %19
  %65 = fsub float 1.000000e+00, %64
  %66 = fadd float %63, %65
  %67 = fmul float %33, %66
  %68 = fsub float %62, %67
  %69 = fmul float %20, %68
  %70 = fmul float %32, %28
  %71 = fmul float %32, %27
  %72 = fmul float %31, %27
  %73 = fsub float %72, %33
  %74 = fmul float %28, %31
  %75 = fadd float %73, %74
  %76 = fadd float %71, %75
  %77 = fadd float %70, %76
  %78 = fmul float %23, %27
  %79 = fsub float 1.000000e+00, %78
  %80 = fmul float %28, %23
  %81 = fsub float %79, %80
  %82 = fmul float %24, %27
  %83 = fsub float %81, %82
  %84 = fmul float %24, %28
  %85 = fsub float %83, %84
  %86 = fmul float %33, %85
  %87 = fadd float %77, %86
  %88 = fadd float %69, %87
  %89 = fmul float %88, 0x3FEBCB7B20000000
  %90 = fmul float %33, 0x3E574EEEA0000000
  %91 = fmul float %48, 0x3F27B20000000000
  %92 = fmul float %47, 0x3F27B20000000000
  %93 = fmul float %48, 0x3FEBCA0000000000
  %94 = fmul float %47, 0x3FEBCA0000000000
  %95 = fsub float %94, %49
  %96 = fadd float %93, %95
  %97 = fadd float %92, %96
  %98 = fadd float %91, %97
  %99 = fsub float %98, %90
  %100 = fadd float %99, %89
  %101 = fmul float %39, 0x3E4EC10C00000000
  %102 = fmul float %43, 0x3ED3600000000000
  %103 = fmul float %43, 0x3FD3440000000000
  %104 = fmul float %42, 0x3FD3440000000000
  %105 = fsub float %104, %44
  %106 = fmul float %42, 0x3ED3600000000000
  %107 = fadd float %106, %105
  %108 = fadd float %103, %107
  %109 = fadd float %102, %108
  %110 = fsub float %109, %101
  %111 = fsub float %44, %50
  %112 = fadd float %49, %111
  %113 = fadd float %110, %112
  %114 = fadd float %113, %100
  %115 = fsub float %50, %53
  %116 = fadd float %52, %115
  %117 = fadd float %116, %114
  %118 = fadd float %53, %117
  %119 = select i1 %58, float %118, float 0x7FF0000000000000
  %120 = fcmp ord float %4, 0.000000e+00
  br i1 %120, label %122, label %121

; <label>:121:                                    ; preds = %55, %1
  br label %122

; <label>:122:                                    ; preds = %55, %121
  %123 = phi float [ 0x7FF8000000000000, %121 ], [ %119, %55 ]
  %124 = fcmp oeq float %4, 0.000000e+00
  %125 = select i1 %124, float 0xFFF0000000000000, float %123
  ret float %125
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log2f_u10(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %3, float %0
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = select i1 %2, i32 -191, i32 -127
  %15 = add nsw i32 %8, %14
  %16 = fadd float %13, -1.000000e+00
  %17 = fadd float %16, 1.000000e+00
  %18 = fadd float %13, 1.000000e+00
  %19 = fadd float %18, -1.000000e+00
  %20 = fdiv float 1.000000e+00, %18
  %21 = bitcast float %18 to i32
  %22 = and i32 %21, -4096
  %23 = bitcast i32 %22 to float
  %24 = fsub float %18, %23
  %25 = bitcast float %20 to i32
  %26 = and i32 %25, -4096
  %27 = bitcast i32 %26 to float
  %28 = fsub float %20, %27
  %29 = bitcast float %16 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %16, %31
  %33 = fmul float %16, %20
  %34 = fmul float %33, %33
  %35 = fmul float %34, 0x3FDBFF4360000000
  %36 = fadd float %35, 0x3FE2728420000000
  %37 = fmul float %34, %36
  %38 = fadd float %37, 0x3FEEC71380000000
  %39 = sitofp i32 %15 to float
  %40 = bitcast float %33 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %33, %42
  %44 = fmul float %33, 0x4007154760000000
  %45 = fadd float %44, %39
  %46 = fsub float %45, %39
  %47 = fmul float %33, %34
  %48 = fmul float %47, %38
  %49 = fadd float %45, %48
  %50 = fsub float %49, %45
  %51 = fcmp olt float %4, 0.000000e+00
  br i1 %51, label %111, label %52

; <label>:52:                                     ; preds = %1
  %53 = fcmp une float %4, 0xFFF0000000000000
  %54 = fcmp une float %4, 0x7FF0000000000000
  %55 = and i1 %53, %54
  %56 = fsub float %13, %17
  %57 = fsub float %16, %17
  %58 = fsub float -1.000000e+00, %57
  %59 = fadd float %56, %58
  %60 = fsub float %13, %19
  %61 = fsub float %18, %19
  %62 = fsub float 1.000000e+00, %61
  %63 = fadd float %60, %62
  %64 = fmul float %33, %63
  %65 = fsub float %59, %64
  %66 = fmul float %20, %65
  %67 = fmul float %32, %28
  %68 = fmul float %32, %27
  %69 = fmul float %31, %27
  %70 = fsub float %69, %33
  %71 = fmul float %28, %31
  %72 = fadd float %70, %71
  %73 = fadd float %68, %72
  %74 = fadd float %67, %73
  %75 = fmul float %23, %27
  %76 = fsub float 1.000000e+00, %75
  %77 = fmul float %28, %23
  %78 = fsub float %76, %77
  %79 = fmul float %24, %27
  %80 = fsub float %78, %79
  %81 = fmul float %24, %28
  %82 = fsub float %80, %81
  %83 = fmul float %33, %82
  %84 = fadd float %74, %83
  %85 = fadd float %66, %84
  %86 = fmul float %85, 0x4007154760000000
  %87 = fmul float %33, 0x3E6192FDE0000000
  %88 = fmul float %43, 0x3F44760000000000
  %89 = fmul float %42, 0x3F44760000000000
  %90 = fmul float %43, 0x4007140000000000
  %91 = fmul float %42, 0x4007140000000000
  %92 = fsub float %91, %44
  %93 = fadd float %90, %92
  %94 = fadd float %89, %93
  %95 = fadd float %88, %94
  %96 = fadd float %87, %95
  %97 = fadd float %96, %86
  %98 = fsub float %44, %46
  %99 = fsub float %45, %46
  %100 = fsub float %39, %99
  %101 = fadd float %98, %100
  %102 = fadd float %101, %97
  %103 = fsub float %48, %50
  %104 = fsub float %49, %50
  %105 = fsub float %45, %104
  %106 = fadd float %103, %105
  %107 = fadd float %106, %102
  %108 = fadd float %49, %107
  %109 = select i1 %55, float %108, float 0x7FF0000000000000
  %110 = fcmp ord float %4, 0.000000e+00
  br i1 %110, label %112, label %111

; <label>:111:                                    ; preds = %52, %1
  br label %112

; <label>:112:                                    ; preds = %52, %111
  %113 = phi float [ 0x7FF8000000000000, %111 ], [ %109, %52 ]
  %114 = fcmp oeq float %4, 0.000000e+00
  %115 = select i1 %114, float 0xFFF0000000000000, float %113
  ret float %115
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log2f_u35(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0x3810000000000000
  %3 = fmul float %0, 0x43F0000000000000
  %4 = select i1 %2, float %3, float %0
  %5 = fmul float %4, 0x3FF5555560000000
  %6 = bitcast float %5 to i32
  %7 = lshr i32 %6, 23
  %8 = and i32 %7, 255
  %9 = bitcast float %4 to i32
  %10 = shl nuw nsw i32 %8, 23
  %11 = add i32 %9, 1065353216
  %12 = sub i32 %11, %10
  %13 = bitcast i32 %12 to float
  %14 = fadd float %13, -1.000000e+00
  %15 = fadd float %13, 1.000000e+00
  %16 = fdiv float %14, %15
  %17 = fmul float %16, %16
  %18 = fcmp olt float %4, 0.000000e+00
  br i1 %18, label %37, label %19

; <label>:19:                                     ; preds = %1
  %20 = fcmp une float %4, 0xFFF0000000000000
  %21 = fcmp une float %4, 0x7FF0000000000000
  %22 = and i1 %20, %21
  %23 = fmul float %16, %17
  %24 = fmul float %17, 0x3FDBFE81A0000000
  %25 = fadd float %24, 0x3FE2728F60000000
  %26 = fmul float %17, %25
  %27 = fadd float %26, 0x3FEEC715E0000000
  %28 = fmul float %23, %27
  %29 = fmul float %16, 0x4007154760000000
  %30 = select i1 %2, i32 -191, i32 -127
  %31 = add nsw i32 %8, %30
  %32 = sitofp i32 %31 to float
  %33 = fadd float %29, %32
  %34 = fadd float %33, %28
  %35 = select i1 %22, float %34, float 0x7FF0000000000000
  %36 = fcmp ord float %4, 0.000000e+00
  br i1 %36, label %38, label %37

; <label>:37:                                     ; preds = %19, %1
  br label %38

; <label>:38:                                     ; preds = %19, %37
  %39 = phi float [ 0x7FF8000000000000, %37 ], [ %35, %19 ]
  %40 = fcmp oeq float %4, 0.000000e+00
  %41 = select i1 %40, float 0xFFF0000000000000, float %39
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_log1pf_u10(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 1.000000e+00
  %3 = fcmp olt float %2, 0x3810000000000000
  %4 = fmul float %2, 0x43F0000000000000
  %5 = select i1 %3, float %4, float %2
  %6 = fmul float %5, 0x3FF5555560000000
  %7 = bitcast float %6 to i32
  %8 = lshr i32 %7, 23
  %9 = and i32 %8, 255
  %10 = shl nuw nsw i32 %9, 23
  %11 = sub nsw i32 2130706432, %10
  %12 = bitcast i32 %11 to float
  %13 = fadd float %12, -1.000000e+00
  %14 = fmul float %12, %0
  %15 = fadd float %14, %13
  %16 = select i1 %3, i32 -191, i32 -127
  %17 = add nsw i32 %9, %16
  %18 = fadd float %15, 2.000000e+00
  %19 = fsub float 2.000000e+00, %18
  %20 = fadd float %15, %19
  %21 = fdiv float 1.000000e+00, %18
  %22 = bitcast float %18 to i32
  %23 = and i32 %22, -4096
  %24 = bitcast i32 %23 to float
  %25 = fsub float %18, %24
  %26 = bitcast float %21 to i32
  %27 = and i32 %26, -4096
  %28 = bitcast i32 %27 to float
  %29 = fsub float %21, %28
  %30 = bitcast float %15 to i32
  %31 = and i32 %30, -4096
  %32 = bitcast i32 %31 to float
  %33 = fsub float %15, %32
  %34 = fmul float %15, %21
  %35 = fmul float %32, %28
  %36 = fsub float %35, %34
  %37 = fmul float %29, %32
  %38 = fadd float %36, %37
  %39 = fmul float %33, %28
  %40 = fadd float %39, %38
  %41 = fmul float %33, %29
  %42 = fadd float %41, %40
  %43 = fmul float %24, %28
  %44 = fsub float 1.000000e+00, %43
  %45 = fmul float %29, %24
  %46 = fsub float %44, %45
  %47 = fmul float %25, %28
  %48 = fsub float %46, %47
  %49 = fmul float %25, %29
  %50 = fsub float %48, %49
  %51 = fmul float %34, %50
  %52 = fadd float %42, %51
  %53 = fmul float %20, %34
  %54 = fsub float 0.000000e+00, %53
  %55 = fmul float %21, %54
  %56 = fadd float %55, %52
  %57 = fmul float %34, %34
  %58 = fmul float %57, 0x3FD35FEB80000000
  %59 = fadd float %58, 0x3FD9933940000000
  %60 = fmul float %57, %59
  %61 = fadd float %60, 0x3FE5555B40000000
  %62 = sitofp i32 %17 to float
  %63 = bitcast float %62 to i32
  %64 = and i32 %63, -4096
  %65 = bitcast i32 %64 to float
  %66 = fsub float %62, %65
  %67 = fmul float %65, 0x3FE62E0000000000
  %68 = insertelement <2 x float> <float 0x3FE62E4300000000, float undef>, float %66, i32 1
  %69 = insertelement <2 x float> <float undef, float 0x3F00C00000000000>, float %62, i32 0
  %70 = fmul <2 x float> %68, %69
  %71 = extractelement <2 x float> %70, i32 0
  %72 = fsub float %67, %71
  %73 = fmul float %65, 0x3F00C00000000000
  %74 = fadd float %73, %72
  %75 = fmul float %66, 0x3FE62E0000000000
  %76 = fadd float %75, %74
  %77 = fmul float %62, 0x3E205C6100000000
  %78 = fmul float %34, 2.000000e+00
  %79 = fmul float %56, 2.000000e+00
  %80 = insertelement <2 x float> undef, float %78, i32 0
  %81 = insertelement <2 x float> %80, float %76, i32 1
  %82 = fadd <2 x float> %70, %81
  %83 = extractelement <2 x float> %82, i32 0
  %84 = fsub float %71, %83
  %85 = fadd float %78, %84
  %86 = fmul float %34, %57
  %87 = fmul float %86, %61
  %88 = fadd float %83, %87
  %89 = insertelement <2 x float> undef, float %88, i32 0
  %90 = insertelement <2 x float> %89, float %77, i32 1
  %91 = fsub <2 x float> %82, %90
  %92 = insertelement <2 x float> undef, float %87, i32 0
  %93 = insertelement <2 x float> %92, float %85, i32 1
  %94 = fadd <2 x float> %93, %91
  %95 = extractelement <2 x float> %94, i32 1
  %96 = fadd float %95, %79
  %97 = extractelement <2 x float> %94, i32 0
  %98 = fadd float %97, %96
  %99 = fadd float %88, %98
  %100 = fpext float %0 to double
  %101 = fcmp ogt double %100, 0x47D2CED32A16A1B1
  %102 = select i1 %101, float 0x7FF0000000000000, float %99
  %103 = fcmp olt float %0, -1.000000e+00
  %104 = select i1 %103, float 0x7FF8000000000000, float %102
  %105 = fcmp oeq float %0, -1.000000e+00
  %106 = select i1 %105, float 0xFFF0000000000000, float %104
  %107 = bitcast float %0 to i32
  %108 = icmp eq i32 %107, -2147483648
  %109 = select i1 %108, float -0.000000e+00, float %106
  ret float %109
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cbrtf_u35(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %6, float %4
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 -191, i32 -127
  %12 = add nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 6145
  %25 = srem i32 %24, 3
  %26 = icmp eq i32 %25, 1
  %27 = select i1 %26, float 0x3FF428A300000000, float 1.000000e+00
  %28 = icmp eq i32 %25, 2
  %29 = select i1 %28, float 0x3FF965FEA0000000, float %27
  %30 = sdiv i32 %24, 3
  %31 = add nsw i32 %30, -2048
  %32 = ashr i32 %31, 1
  %33 = shl i32 %32, 23
  %34 = add i32 %33, 1065353216
  %35 = bitcast i32 %34 to float
  %36 = fmul float %29, %35
  %37 = sub nsw i32 %31, %32
  %38 = shl i32 %37, 23
  %39 = add i32 %38, 1065353216
  %40 = bitcast i32 %39 to float
  %41 = fmul float %36, %40
  %42 = bitcast float %41 to i32
  %43 = bitcast float %23 to i32
  %44 = and i32 %43, -2147483648
  %45 = xor i32 %44, %42
  %46 = bitcast i32 %45 to float
  %47 = and i32 %43, 2147483647
  %48 = bitcast i32 %47 to float
  %49 = fmul float %48, 0x3FE3400420000000
  %50 = fsub float 0x4006912E60000000, %49
  %51 = fmul float %50, %48
  %52 = fadd float %51, 0xC01620F460000000
  %53 = fmul float %52, %48
  %54 = fadd float %53, 0x401797D220000000
  %55 = fmul float %54, %48
  %56 = fadd float %55, 0xC00E79F100000000
  %57 = fmul float %56, %48
  %58 = fadd float %57, 0x4001CB0260000000
  %59 = fmul float %58, %48
  %60 = fmul float %58, %59
  %61 = fmul float %60, 0x3FE5555560000000
  %62 = fmul float %58, %60
  %63 = fadd float %62, -1.000000e+00
  %64 = fmul float %61, %63
  %65 = fsub float %60, %64
  %66 = fmul float %65, %46
  ret float %66
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cbrtf_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x3BF0000000000000
  %6 = fmul float %4, 0x43F0000000000000
  %7 = select i1 %5, float %6, float %4
  %8 = bitcast float %7 to i32
  %9 = lshr i32 %8, 23
  %10 = and i32 %9, 255
  %11 = select i1 %5, i32 -191, i32 -127
  %12 = add nsw i32 %10, %11
  %13 = xor i32 %12, -1
  %14 = ashr i32 %13, 1
  %15 = shl nsw i32 %14, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = fmul float %17, %0
  %19 = sub nsw i32 %13, %14
  %20 = shl i32 %19, 23
  %21 = add i32 %20, 1065353216
  %22 = bitcast i32 %21 to float
  %23 = fmul float %18, %22
  %24 = add nsw i32 %12, 6145
  %25 = srem i32 %24, 3
  %26 = sdiv i32 %24, 3
  switch i32 %25, label %28 [
    i32 1, label %29
    i32 2, label %27
  ]

; <label>:27:                                     ; preds = %1
  br label %29

; <label>:28:                                     ; preds = %1
  br label %29

; <label>:29:                                     ; preds = %1, %28, %27
  %30 = phi <2 x i32> [ <i32 1070280693, i32 849849800>, %27 ], [ <i32 1067533592, i32 -1295101521>, %1 ], [ <i32 1065353216, i32 0>, %28 ]
  %31 = extractelement <2 x i32> %30, i32 0
  %32 = bitcast float %23 to i32
  %33 = and i32 %32, -2147483648
  %34 = xor i32 %31, %33
  %35 = bitcast i32 %34 to float
  %36 = and i32 %32, 2147483647
  %37 = bitcast i32 %36 to float
  %38 = fmul float %37, 0x3FE3400420000000
  %39 = fsub float 0x4006912E60000000, %38
  %40 = fmul float %39, %37
  %41 = fadd float %40, 0xC01620F460000000
  %42 = fmul float %41, %37
  %43 = fadd float %42, 0x401797D220000000
  %44 = fmul float %43, %37
  %45 = fadd float %44, 0xC00E79F100000000
  %46 = fmul float %45, %37
  %47 = fadd float %46, 0x4001CB0260000000
  %48 = fmul float %47, %47
  %49 = fmul float %48, %48
  %50 = fmul float %49, %37
  %51 = fsub float %50, %47
  %52 = fpext float %51 to double
  %53 = fmul double %52, 0x3FD5555555555555
  %54 = fpext float %47 to double
  %55 = fsub double %54, %53
  %56 = fptrunc double %55 to float
  %57 = bitcast float %56 to i32
  %58 = and i32 %57, -4096
  %59 = bitcast i32 %58 to float
  %60 = fsub float %56, %59
  %61 = fmul float %56, %56
  %62 = fmul float %59, %59
  %63 = fsub float %62, %61
  %64 = fmul float %60, %59
  %65 = fadd float %64, %63
  %66 = fadd float %64, %65
  %67 = fmul float %60, %60
  %68 = fadd float %67, %66
  %69 = bitcast float %61 to i32
  %70 = and i32 %69, -4096
  %71 = bitcast i32 %70 to float
  %72 = fsub float %61, %71
  %73 = fmul float %61, %61
  %74 = fmul float %71, %71
  %75 = fsub float %74, %73
  %76 = fmul float %72, %71
  %77 = fadd float %76, %75
  %78 = fadd float %76, %77
  %79 = fmul float %72, %72
  %80 = fadd float %79, %78
  %81 = fmul float %61, %68
  %82 = fadd float %81, %80
  %83 = fadd float %81, %82
  %84 = bitcast float %73 to i32
  %85 = and i32 %84, -4096
  %86 = bitcast i32 %85 to float
  %87 = fsub float %73, %86
  %88 = and i32 %32, 2147479552
  %89 = bitcast i32 %88 to float
  %90 = fsub float %37, %89
  %91 = fmul float %73, %37
  %92 = fmul float %89, %86
  %93 = fsub float %92, %91
  %94 = fmul float %87, %89
  %95 = fadd float %93, %94
  %96 = fmul float %90, %86
  %97 = fadd float %96, %95
  %98 = fmul float %90, %87
  %99 = fadd float %98, %97
  %100 = fmul float %83, %37
  %101 = fadd float %99, %100
  %102 = fsub float -0.000000e+00, %56
  %103 = fsub float %91, %56
  %104 = fsub float %103, %91
  %105 = fsub float %103, %104
  %106 = fsub float %91, %105
  %107 = fsub float %102, %104
  %108 = fadd float %107, %106
  %109 = fadd float %108, %101
  %110 = fadd float %103, %109
  %111 = fpext float %110 to double
  %112 = fmul double %111, 0xBFE5555555555555
  %113 = fpext float %56 to double
  %114 = fmul double %112, %113
  %115 = fptrunc double %114 to float
  %116 = fadd float %61, %115
  %117 = fsub float %116, %61
  %118 = bitcast float %116 to i32
  %119 = and i32 %118, -4096
  %120 = bitcast i32 %119 to float
  %121 = fsub float %116, %120
  %122 = fmul float %116, %37
  %123 = bitcast float %122 to i32
  %124 = and i32 %123, -4096
  %125 = bitcast i32 %124 to float
  %126 = fsub float %122, %125
  %127 = and i32 %34, -1074794496
  %128 = bitcast i32 %127 to float
  %129 = fsub float %35, %128
  %130 = fmul float %122, %35
  %131 = add nsw i32 %26, -2048
  %132 = ashr i32 %131, 1
  %133 = fcmp une float %37, 0x7FF0000000000000
  %134 = fcmp une float %37, 0xFFF0000000000000
  %135 = and i1 %134, %133
  br i1 %135, label %136, label %178

; <label>:136:                                    ; preds = %29
  %137 = fsub float %115, %117
  %138 = fsub float %116, %117
  %139 = fsub float %61, %138
  %140 = fadd float %137, %139
  %141 = fadd float %68, %140
  %142 = fmul float %141, %37
  %143 = fmul float %90, %121
  %144 = fmul float %90, %120
  %145 = fmul float %89, %120
  %146 = fsub float %145, %122
  %147 = fmul float %121, %89
  %148 = fadd float %146, %147
  %149 = fadd float %144, %148
  %150 = fadd float %143, %149
  %151 = fadd float %142, %150
  %152 = fmul float %151, %35
  %153 = extractelement <2 x i32> %30, i32 1
  %154 = xor i32 %153, %33
  %155 = bitcast i32 %154 to float
  %156 = fmul float %122, %155
  %157 = fmul float %126, %129
  %158 = fmul float %129, %125
  %159 = fmul float %126, %128
  %160 = fmul float %125, %128
  %161 = fsub float %160, %130
  %162 = fadd float %159, %161
  %163 = fadd float %158, %162
  %164 = fadd float %157, %163
  %165 = fadd float %156, %164
  %166 = fadd float %152, %165
  %167 = fadd float %130, %166
  %168 = shl i32 %132, 23
  %169 = add i32 %168, 1065353216
  %170 = bitcast i32 %169 to float
  %171 = fmul float %167, %170
  %172 = sub nsw i32 %131, %132
  %173 = shl i32 %172, 23
  %174 = add i32 %173, 1065353216
  %175 = bitcast i32 %174 to float
  %176 = fmul float %171, %175
  %177 = and i32 %34, -2147483648
  br label %182

; <label>:178:                                    ; preds = %29
  %179 = and i32 %34, -2147483648
  %180 = or i32 %179, 2139095040
  %181 = bitcast i32 %180 to float
  br label %182

; <label>:182:                                    ; preds = %136, %178
  %183 = phi i32 [ %177, %136 ], [ %179, %178 ]
  %184 = phi float [ %176, %136 ], [ %181, %178 ]
  %185 = fcmp oeq float %37, 0.000000e+00
  %186 = bitcast i32 %183 to float
  %187 = select i1 %185, float %186, float %184
  ret float %187
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fabsf(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  ret float %4
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_copysignf(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, -2147483648
  %7 = or i32 %6, %4
  %8 = bitcast i32 %7 to float
  ret float %8
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmaxf(float, float) local_unnamed_addr #0 {
  %3 = fcmp uno float %1, 0.000000e+00
  %4 = fcmp ogt float %0, %1
  %5 = or i1 %3, %4
  %6 = select i1 %5, float %0, float %1
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fminf(float, float) local_unnamed_addr #0 {
  %3 = fcmp uno float %1, 0.000000e+00
  %4 = fcmp olt float %0, %1
  %5 = or i1 %3, %4
  %6 = select i1 %5, float %0, float %1
  ret float %6
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fdimf(float, float) local_unnamed_addr #0 {
  %3 = fsub float %0, %1
  %4 = fcmp olt float %3, 0.000000e+00
  %5 = fcmp oeq float %0, %1
  %6 = or i1 %5, %4
  %7 = select i1 %6, float 0.000000e+00, float %3
  ret float %7
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_truncf(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i32
  %3 = sitofp i32 %2 to float
  %4 = fsub float %0, %3
  %5 = fcmp une float %0, 0x7FF0000000000000
  %6 = fcmp une float %0, 0xFFF0000000000000
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %20

; <label>:8:                                      ; preds = %1
  %9 = bitcast float %0 to i32
  %10 = and i32 %9, 2147483647
  %11 = bitcast i32 %10 to float
  %12 = fcmp ult float %11, 0x4160000000000000
  br i1 %12, label %13, label %20

; <label>:13:                                     ; preds = %8
  %14 = fsub float %0, %4
  %15 = bitcast float %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = and i32 %9, -2147483648
  %18 = or i32 %16, %17
  %19 = bitcast i32 %18 to float
  br label %20

; <label>:20:                                     ; preds = %1, %8, %13
  %21 = phi float [ %19, %13 ], [ %0, %8 ], [ %0, %1 ]
  ret float %21
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_floorf(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i32
  %3 = sitofp i32 %2 to float
  %4 = fsub float %0, %3
  %5 = fcmp olt float %4, 0.000000e+00
  %6 = fadd float %4, 1.000000e+00
  %7 = select i1 %5, float %6, float %4
  %8 = fcmp une float %0, 0x7FF0000000000000
  %9 = fcmp une float %0, 0xFFF0000000000000
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %23

; <label>:11:                                     ; preds = %1
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp ult float %14, 0x4160000000000000
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %11
  %17 = fsub float %0, %7
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  br label %23

; <label>:23:                                     ; preds = %1, %11, %16
  %24 = phi float [ %22, %16 ], [ %0, %11 ], [ %0, %1 ]
  ret float %24
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_ceilf(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i32
  %3 = sitofp i32 %2 to float
  %4 = fsub float %0, %3
  %5 = fcmp ole float %4, 0.000000e+00
  %6 = fadd float %4, -1.000000e+00
  %7 = select i1 %5, float %4, float %6
  %8 = fcmp une float %0, 0x7FF0000000000000
  %9 = fcmp une float %0, 0xFFF0000000000000
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %23

; <label>:11:                                     ; preds = %1
  %12 = bitcast float %0 to i32
  %13 = and i32 %12, 2147483647
  %14 = bitcast i32 %13 to float
  %15 = fcmp ult float %14, 0x4160000000000000
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %11
  %17 = fsub float %0, %7
  %18 = bitcast float %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = and i32 %12, -2147483648
  %21 = or i32 %19, %20
  %22 = bitcast i32 %21 to float
  br label %23

; <label>:23:                                     ; preds = %1, %11, %16
  %24 = phi float [ %22, %16 ], [ %0, %11 ], [ %0, %1 ]
  ret float %24
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_roundf(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 5.000000e-01
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %2, %4
  %6 = fcmp oeq float %5, 0.000000e+00
  %7 = fcmp ole float %2, 0.000000e+00
  %8 = and i1 %7, %6
  %9 = fadd float %2, -1.000000e+00
  %10 = select i1 %8, float %9, float %2
  %11 = fcmp olt float %5, 0.000000e+00
  %12 = fadd float %5, 1.000000e+00
  %13 = select i1 %11, float %12, float %5
  %14 = fcmp oeq float %0, 0x3FDFFFFFE0000000
  %15 = select i1 %14, float 0.000000e+00, float %10
  %16 = fcmp une float %0, 0x7FF0000000000000
  %17 = fcmp une float %0, 0xFFF0000000000000
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %1
  %20 = bitcast float %0 to i32
  %21 = and i32 %20, 2147483647
  %22 = bitcast i32 %21 to float
  %23 = fcmp ult float %22, 0x4160000000000000
  br i1 %23, label %24, label %31

; <label>:24:                                     ; preds = %19
  %25 = fsub float %15, %13
  %26 = bitcast float %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = and i32 %20, -2147483648
  %29 = or i32 %27, %28
  %30 = bitcast i32 %29 to float
  br label %31

; <label>:31:                                     ; preds = %1, %19, %24
  %32 = phi float [ %30, %24 ], [ %0, %19 ], [ %0, %1 ]
  ret float %32
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_rintf(float) local_unnamed_addr #0 {
  %2 = fadd float %0, 5.000000e-01
  %3 = fptosi float %2 to i32
  %4 = sitofp i32 %3 to float
  %5 = fsub float %2, %4
  %6 = fcmp olt float %5, 0.000000e+00
  br i1 %6, label %12, label %7

; <label>:7:                                      ; preds = %1
  %8 = and i32 %3, 1
  %9 = icmp ne i32 %8, 0
  %10 = fcmp oeq float %5, 0.000000e+00
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %7, %1
  %13 = fadd float %5, 1.000000e+00
  br label %14

; <label>:14:                                     ; preds = %7, %12
  %15 = phi float [ %13, %12 ], [ %5, %7 ]
  %16 = fcmp oeq float %0, 0x3FE0000020000000
  %17 = select i1 %16, float 0.000000e+00, float %2
  %18 = fcmp une float %0, 0x7FF0000000000000
  %19 = fcmp une float %0, 0xFFF0000000000000
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %14
  %22 = bitcast float %0 to i32
  %23 = and i32 %22, 2147483647
  %24 = bitcast i32 %23 to float
  %25 = fcmp ult float %24, 0x4160000000000000
  br i1 %25, label %26, label %33

; <label>:26:                                     ; preds = %21
  %27 = fsub float %17, %15
  %28 = bitcast float %27 to i32
  %29 = and i32 %28, 2147483647
  %30 = and i32 %22, -2147483648
  %31 = or i32 %29, %30
  %32 = bitcast i32 %31 to float
  br label %33

; <label>:33:                                     ; preds = %14, %21, %26
  %34 = phi float [ %32, %26 ], [ %0, %21 ], [ %0, %14 ]
  ret float %34
}

; Function Attrs: norecurse nounwind readnone uwtable
define <2 x float> @Sleef_modff(float) local_unnamed_addr #0 {
  %2 = fptosi float %0 to i32
  %3 = sitofp i32 %2 to float
  %4 = fsub float %0, %3
  %5 = bitcast float %0 to i32
  %6 = and i32 %5, 2147483647
  %7 = bitcast i32 %6 to float
  %8 = fcmp ogt float %7, 0x4160000000000000
  %9 = select i1 %8, float 0.000000e+00, float %4
  %10 = bitcast float %9 to i32
  %11 = and i32 %10, 2147483647
  %12 = and i32 %5, -2147483648
  %13 = or i32 %11, %12
  %14 = bitcast i32 %13 to float
  %15 = fsub float %0, %9
  %16 = bitcast float %15 to i32
  %17 = and i32 %16, 2147483647
  %18 = or i32 %17, %12
  %19 = bitcast i32 %18 to float
  %20 = insertelement <2 x float> undef, float %14, i32 0
  %21 = insertelement <2 x float> %20, float %19, i32 1
  ret <2 x float> %21
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_ldexpf(float, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 300
  %4 = select i1 %3, i32 %1, i32 300
  %5 = icmp sgt i32 %4, -300
  %6 = select i1 %5, i32 %4, i32 -300
  %7 = ashr i32 %6, 2
  %8 = lshr i32 %6, 31
  %9 = add nsw i32 %7, %8
  %10 = add i32 %6, 49
  %11 = icmp ult i32 %10, 99
  %12 = select i1 %11, i32 0, i32 %9
  %13 = shl i32 %12, 2
  %14 = sub nsw i32 %6, %13
  %15 = shl i32 %12, 23
  %16 = add i32 %15, 1065353216
  %17 = bitcast i32 %16 to float
  %18 = shl i32 %14, 23
  %19 = add i32 %18, 1065353216
  %20 = bitcast i32 %19 to float
  %21 = fmul float %20, %0
  %22 = fmul float %21, %17
  %23 = fmul float %22, %17
  %24 = fmul float %23, %17
  %25 = fmul float %24, %17
  ret float %25
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_nextafterf(float, float) local_unnamed_addr #0 {
  %3 = fcmp oeq float %0, 0.000000e+00
  br i1 %3, label %4, label %8

; <label>:4:                                      ; preds = %2
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, -2147483648
  %7 = bitcast i32 %6 to float
  br label %8

; <label>:8:                                      ; preds = %2, %4
  %9 = phi float [ %7, %4 ], [ %0, %2 ]
  %10 = bitcast float %9 to i32
  %11 = lshr i32 %10, 31
  %12 = fcmp olt float %1, %0
  %13 = zext i1 %12 to i32
  %14 = icmp eq i32 %11, %13
  %15 = xor i32 %10, -2147483648
  %16 = sub nsw i32 0, %15
  %17 = select i1 %14, i32 %16, i32 %10
  %18 = fcmp une float %0, %1
  %19 = sext i1 %18 to i32
  %20 = add nsw i32 %17, %19
  %21 = xor i32 %20, -2147483648
  %22 = sub nsw i32 0, %21
  %23 = select i1 %14, i32 %22, i32 %20
  %24 = fcmp ord float %0, 0.000000e+00
  br i1 %24, label %25, label %38

; <label>:25:                                     ; preds = %8
  %26 = fcmp une float %0, 0.000000e+00
  %27 = bitcast i32 %23 to float
  %28 = fcmp oeq float %27, 0.000000e+00
  %29 = and i1 %26, %28
  %30 = bitcast float %0 to i32
  %31 = and i32 %30, -2147483648
  %32 = select i1 %29, i32 %31, i32 %23
  %33 = fcmp oeq float %1, 0.000000e+00
  %34 = and i1 %3, %33
  %35 = bitcast float %1 to i32
  %36 = select i1 %34, i32 %35, i32 %32
  %37 = fcmp ord float %1, 0.000000e+00
  br i1 %37, label %39, label %38

; <label>:38:                                     ; preds = %25, %8
  br label %39

; <label>:39:                                     ; preds = %25, %38
  %40 = phi i32 [ 2143289344, %38 ], [ %36, %25 ]
  %41 = bitcast i32 %40 to float
  ret float %41
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_frfrexpf(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x3810000000000000
  %6 = fmul float %0, 0x41D0000000000000
  %7 = select i1 %5, float %6, float %0
  %8 = bitcast float %7 to i32
  %9 = and i32 %8, -2139095041
  %10 = or i32 %9, 1056964608
  %11 = fcmp une float %7, 0x7FF0000000000000
  %12 = fcmp une float %7, 0xFFF0000000000000
  %13 = and i1 %12, %11
  %14 = and i32 %8, -2147483648
  %15 = or i32 %14, 2139095040
  %16 = select i1 %13, i32 %10, i32 %15
  %17 = fcmp oeq float %7, 0.000000e+00
  %18 = select i1 %17, i32 %8, i32 %16
  %19 = bitcast i32 %18 to float
  ret float %19
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @Sleef_expfrexpf(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x3810000000000000
  %6 = fmul float %0, 0x41D0000000000000
  %7 = select i1 %5, float %6, float %0
  %8 = fcmp ueq float %7, 0.000000e+00
  br i1 %8, label %18, label %9

; <label>:9:                                      ; preds = %1
  %10 = select i1 %5, i32 -156, i32 -126
  %11 = bitcast float %7 to i32
  %12 = lshr i32 %11, 23
  %13 = and i32 %12, 255
  %14 = add nsw i32 %10, %13
  %15 = fcmp une float %7, 0x7FF0000000000000
  %16 = fcmp une float %7, 0xFFF0000000000000
  %17 = and i1 %16, %15
  br i1 %17, label %19, label %18

; <label>:18:                                     ; preds = %1, %9
  br label %19

; <label>:19:                                     ; preds = %9, %18
  %20 = phi i32 [ 0, %18 ], [ %14, %9 ]
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define float @Sleef_hypotf_u05(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fcmp olt float %12, 0x3810000000000000
  %14 = fmul float %10, 0x4170000000000000
  %15 = fmul float %12, 0x4170000000000000
  %16 = select i1 %13, float %15, float %12
  %17 = select i1 %13, float %14, float %10
  %18 = fdiv float 1.000000e+00, %16
  %19 = bitcast float %16 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %16, %21
  %23 = bitcast float %18 to i32
  %24 = and i32 %23, -4096
  %25 = bitcast i32 %24 to float
  %26 = fsub float %18, %25
  %27 = bitcast float %17 to i32
  %28 = and i32 %27, -4096
  %29 = bitcast i32 %28 to float
  %30 = fsub float %17, %29
  %31 = fmul float %17, %18
  %32 = fmul float %29, %25
  %33 = fsub float %32, %31
  %34 = fmul float %26, %29
  %35 = fadd float %33, %34
  %36 = fmul float %30, %25
  %37 = fadd float %36, %35
  %38 = fmul float %30, %26
  %39 = fadd float %38, %37
  %40 = fmul float %21, %25
  %41 = fsub float 1.000000e+00, %40
  %42 = fmul float %26, %21
  %43 = fsub float %41, %42
  %44 = fmul float %22, %25
  %45 = fsub float %43, %44
  %46 = fmul float %22, %26
  %47 = fsub float %45, %46
  %48 = fmul float %31, %47
  %49 = fadd float %39, %48
  %50 = fmul float %31, 0.000000e+00
  %51 = fsub float 0.000000e+00, %50
  %52 = fmul float %18, %51
  %53 = fadd float %52, %49
  %54 = bitcast float %31 to i32
  %55 = and i32 %54, -4096
  %56 = bitcast i32 %55 to float
  %57 = fsub float %31, %56
  %58 = fmul float %31, %31
  %59 = fmul float %56, %56
  %60 = fsub float %59, %58
  %61 = fadd float %56, %56
  %62 = fmul float %61, %57
  %63 = fadd float %60, %62
  %64 = fmul float %57, %57
  %65 = fadd float %64, %63
  %66 = fadd float %53, %53
  %67 = fmul float %31, %66
  %68 = fadd float %65, %67
  %69 = fadd float %58, 1.000000e+00
  %70 = fsub float %69, %58
  %71 = fsub float %69, %70
  %72 = fsub float %58, %71
  %73 = fsub float 1.000000e+00, %70
  %74 = fadd float %73, %72
  %75 = fadd float %74, %68
  %76 = fadd float %69, %75
  %77 = tail call float @sqrtf(float %76) #3
  %78 = bitcast float %77 to i32
  %79 = and i32 %78, -4096
  %80 = bitcast i32 %79 to float
  %81 = fsub float %77, %80
  %82 = fmul float %77, %77
  %83 = fmul float %80, %80
  %84 = fsub float %83, %82
  %85 = fmul float %81, %80
  %86 = fadd float %85, %84
  %87 = fadd float %85, %86
  %88 = fmul float %81, %81
  %89 = fadd float %88, %87
  %90 = fadd float %69, %82
  %91 = fsub float %90, %69
  %92 = fsub float %90, %91
  %93 = fsub float %69, %92
  %94 = fsub float %82, %91
  %95 = fadd float %94, %93
  %96 = fadd float %75, %89
  %97 = fadd float %95, %96
  %98 = fdiv float 1.000000e+00, %77
  %99 = bitcast float %98 to i32
  %100 = and i32 %99, -4096
  %101 = bitcast i32 %100 to float
  %102 = fsub float %98, %101
  %103 = fmul float %80, %101
  %104 = fsub float 1.000000e+00, %103
  %105 = fmul float %102, %80
  %106 = fsub float %104, %105
  %107 = fmul float %81, %101
  %108 = fsub float %106, %107
  %109 = fmul float %81, %102
  %110 = fsub float %108, %109
  %111 = fmul float %98, %110
  %112 = bitcast float %90 to i32
  %113 = and i32 %112, -4096
  %114 = bitcast i32 %113 to float
  %115 = fsub float %90, %114
  %116 = fmul float %98, %90
  %117 = fmul float %101, %114
  %118 = fsub float %117, %116
  %119 = fmul float %115, %101
  %120 = fadd float %119, %118
  %121 = fmul float %102, %114
  %122 = fadd float %121, %120
  %123 = fmul float %102, %115
  %124 = fadd float %123, %122
  %125 = fmul float %90, %111
  %126 = fadd float %124, %125
  %127 = fmul float %98, %97
  %128 = fadd float %127, %126
  %129 = fmul float %116, 5.000000e-01
  %130 = fmul float %128, 5.000000e-01
  %131 = bitcast float %129 to i32
  %132 = and i32 %131, -4096
  %133 = bitcast i32 %132 to float
  %134 = fsub float %129, %133
  %135 = bitcast float %12 to i32
  %136 = and i32 %135, -4096
  %137 = bitcast i32 %136 to float
  %138 = fsub float %12, %137
  %139 = fmul float %12, %129
  %140 = fmul float %137, %133
  %141 = fsub float %140, %139
  %142 = fmul float %134, %137
  %143 = fadd float %141, %142
  %144 = fmul float %138, %133
  %145 = fadd float %144, %143
  %146 = fmul float %138, %134
  %147 = fadd float %146, %145
  %148 = fmul float %12, %130
  %149 = fadd float %147, %148
  %150 = fadd float %139, %149
  %151 = fcmp ord float %5, 0.000000e+00
  br i1 %151, label %152, label %158

; <label>:152:                                    ; preds = %2
  %153 = fcmp oeq float %10, 0.000000e+00
  %154 = fcmp ord float %150, 0.000000e+00
  %155 = select i1 %154, float %150, float 0x7FF0000000000000
  %156 = select i1 %153, float %12, float %155
  %157 = fcmp ord float %8, 0.000000e+00
  br i1 %157, label %159, label %158

; <label>:158:                                    ; preds = %152, %2
  br label %159

; <label>:159:                                    ; preds = %152, %158
  %160 = phi float [ 0x7FF8000000000000, %158 ], [ %156, %152 ]
  %161 = fcmp oeq float %5, 0x7FF0000000000000
  %162 = fcmp oeq float %8, 0x7FF0000000000000
  %163 = or i1 %161, %162
  %164 = select i1 %163, float 0x7FF0000000000000, float %160
  ret float %164
}

; Function Attrs: nounwind uwtable
define float @Sleef_hypotf_u35(float, float) local_unnamed_addr #1 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %5, %8
  %10 = select i1 %9, float %5, float %8
  %11 = fcmp ogt float %5, %8
  %12 = select i1 %11, float %5, float %8
  %13 = fdiv float %10, %12
  %14 = fmul float %13, %13
  %15 = fadd float %14, 1.000000e+00
  %16 = tail call float @sqrtf(float %15) #3
  %17 = fcmp ord float %5, 0.000000e+00
  br i1 %17, label %18, label %23

; <label>:18:                                     ; preds = %2
  %19 = fcmp oeq float %10, 0.000000e+00
  %20 = fmul float %12, %16
  %21 = select i1 %19, float %12, float %20
  %22 = fcmp ord float %8, 0.000000e+00
  br i1 %22, label %24, label %23

; <label>:23:                                     ; preds = %18, %2
  br label %24

; <label>:24:                                     ; preds = %18, %23
  %25 = phi float [ 0x7FF8000000000000, %23 ], [ %21, %18 ]
  %26 = fcmp oeq float %5, 0x7FF0000000000000
  %27 = fcmp oeq float %8, 0x7FF0000000000000
  %28 = or i1 %26, %27
  %29 = select i1 %28, float 0x7FF0000000000000, float %25
  ret float %29
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmodf(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %8, 0x3810000000000000
  %10 = fmul float %5, 0x4180000000000000
  %11 = fmul float %8, 0x4180000000000000
  %12 = select i1 %9, float 0x3E60000000000000, float 1.000000e+00
  %13 = select i1 %9, float %11, float %8
  %14 = select i1 %9, float %10, float %5
  %15 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %14, i32 0
  %16 = fdiv float 1.000000e+00, %13
  %17 = fcmp oeq float %16, 0.000000e+00
  br i1 %17, label %22, label %18

; <label>:18:                                     ; preds = %2
  %19 = bitcast float %16 to i32
  %20 = add nsw i32 %19, -1
  %21 = bitcast i32 %20 to float
  br label %22

; <label>:22:                                     ; preds = %2, %18
  %23 = phi float [ %21, %18 ], [ 0.000000e+00, %2 ]
  %24 = fmul float %13, 3.000000e+00
  %25 = fmul float %13, 2.000000e+00
  %26 = fsub float -0.000000e+00, %13
  %27 = bitcast float %26 to i32
  %28 = and i32 %27, -4096
  %29 = bitcast i32 %28 to float
  %30 = fsub float %26, %29
  br label %35

; <label>:31:                                     ; preds = %56
  %32 = insertelement <2 x float> undef, float %87, i32 0
  %33 = insertelement <2 x float> %32, float %89, i32 1
  %34 = icmp ult i32 %91, 8
  br i1 %34, label %35, label %92

; <label>:35:                                     ; preds = %22, %31
  %36 = phi i32 [ 0, %22 ], [ %91, %31 ]
  %37 = phi <2 x float> [ %15, %22 ], [ %33, %31 ]
  %38 = extractelement <2 x float> %37, i32 0
  %39 = fcmp oeq float %38, 0.000000e+00
  br i1 %39, label %44, label %40

; <label>:40:                                     ; preds = %35
  %41 = bitcast float %38 to i32
  %42 = add nsw i32 %41, -1
  %43 = bitcast i32 %42 to float
  br label %44

; <label>:44:                                     ; preds = %35, %40
  %45 = phi float [ %43, %40 ], [ 0.000000e+00, %35 ]
  %46 = fmul float %23, %45
  %47 = bitcast float %46 to i32
  %48 = and i32 %47, 2147483647
  %49 = bitcast i32 %48 to float
  %50 = fcmp ult float %49, 0x4160000000000000
  br i1 %50, label %51, label %56

; <label>:51:                                     ; preds = %44
  %52 = fptosi float %46 to i32
  %53 = sitofp i32 %52 to float
  %54 = fsub float %46, %53
  %55 = fsub float %46, %54
  br label %56

; <label>:56:                                     ; preds = %44, %51
  %57 = phi float [ %55, %51 ], [ %46, %44 ]
  %58 = fcmp ule float %24, %38
  %59 = fcmp ult float %38, %13
  %60 = or i1 %58, %59
  %61 = select i1 %60, float %57, float 2.000000e+00
  %62 = fcmp ule float %25, %38
  %63 = or i1 %62, %59
  %64 = select i1 %63, float %61, float 1.000000e+00
  %65 = bitcast float %64 to i32
  %66 = and i32 %65, -4096
  %67 = bitcast i32 %66 to float
  %68 = fsub float %64, %67
  %69 = fmul float %64, %26
  %70 = fmul float %29, %67
  %71 = fsub float %70, %69
  %72 = fmul float %68, %29
  %73 = fadd float %72, %71
  %74 = fmul float %30, %67
  %75 = fadd float %74, %73
  %76 = fmul float %30, %68
  %77 = fadd float %76, %75
  %78 = fadd float %38, %69
  %79 = fsub float %78, %38
  %80 = fsub float %78, %79
  %81 = fsub float %38, %80
  %82 = fsub float %69, %79
  %83 = fadd float %82, %81
  %84 = extractelement <2 x float> %37, i32 1
  %85 = fadd float %84, %77
  %86 = fadd float %83, %85
  %87 = fadd float %78, %86
  %88 = fsub float %78, %87
  %89 = fadd float %86, %88
  %90 = fcmp olt float %87, %13
  %91 = add nuw nsw i32 %36, 1
  br i1 %90, label %92, label %31

; <label>:92:                                     ; preds = %56, %31
  %93 = fadd float %87, %89
  %94 = fmul float %12, %93
  %95 = fcmp oeq float %93, %13
  %96 = bitcast float %94 to i32
  %97 = select i1 %95, i32 0, i32 %96
  %98 = and i32 %3, -2147483648
  %99 = xor i32 %97, %98
  %100 = bitcast i32 %99 to float
  %101 = fcmp olt float %14, %13
  %102 = select i1 %101, float %0, float %100
  %103 = fcmp oeq float %13, 0.000000e+00
  %104 = select i1 %103, float 0x7FF8000000000000, float %102
  ret float %104
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_remainderf(float, float) local_unnamed_addr #0 {
  %3 = bitcast float %0 to i32
  %4 = and i32 %3, 2147483647
  %5 = bitcast i32 %4 to float
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %8, 0x3820000000000000
  %10 = fmul float %5, 0x4180000000000000
  %11 = fmul float %8, 0x4180000000000000
  %12 = select i1 %9, float 0x3E60000000000000, float 1.000000e+00
  %13 = select i1 %9, float %11, float %8
  %14 = select i1 %9, float %10, float %5
  %15 = fdiv float 1.000000e+00, %13
  %16 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %14, i32 0
  %17 = fmul float %13, 1.500000e+00
  %18 = fmul float %13, 5.000000e-01
  %19 = fsub float -0.000000e+00, %13
  %20 = bitcast float %19 to i32
  %21 = and i32 %20, -4096
  %22 = bitcast i32 %21 to float
  %23 = fsub float %19, %22
  br label %24

; <label>:24:                                     ; preds = %2, %91
  %25 = phi i32 [ 0, %2 ], [ %121, %91 ]
  %26 = phi i32 [ 0, %2 ], [ %94, %91 ]
  %27 = phi <2 x float> [ %16, %2 ], [ %120, %91 ]
  %28 = extractelement <2 x float> %27, i32 0
  %29 = fmul float %15, %28
  %30 = fadd float %29, 5.000000e-01
  %31 = fptosi float %30 to i32
  %32 = sitofp i32 %31 to float
  %33 = fsub float %30, %32
  %34 = fcmp olt float %33, 0.000000e+00
  br i1 %34, label %40, label %35

; <label>:35:                                     ; preds = %24
  %36 = and i32 %31, 1
  %37 = icmp ne i32 %36, 0
  %38 = fcmp oeq float %33, 0.000000e+00
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %42

; <label>:40:                                     ; preds = %35, %24
  %41 = fadd float %33, 1.000000e+00
  br label %42

; <label>:42:                                     ; preds = %40, %35
  %43 = phi float [ %41, %40 ], [ %33, %35 ]
  %44 = bitcast float %29 to i32
  %45 = and i32 %44, 2147483647
  %46 = bitcast i32 %45 to float
  %47 = fcmp ult float %46, 0x4160000000000000
  br i1 %47, label %48, label %55

; <label>:48:                                     ; preds = %42
  %49 = fsub float %30, %43
  %50 = bitcast float %49 to i32
  %51 = and i32 %50, 2147483647
  %52 = and i32 %44, -2147483648
  %53 = or i32 %51, %52
  %54 = bitcast i32 %53 to float
  br label %55

; <label>:55:                                     ; preds = %42, %48
  %56 = phi float [ %54, %48 ], [ %29, %42 ]
  %57 = bitcast float %28 to i32
  %58 = and i32 %57, 2147483647
  %59 = bitcast i32 %58 to float
  %60 = fcmp ogt float %17, %59
  %61 = fcmp olt float %28, 0.000000e+00
  %62 = select i1 %61, float -1.000000e+00, float 1.000000e+00
  %63 = select i1 %60, float %62, float %56
  %64 = fcmp ogt float %18, %59
  br i1 %64, label %123, label %65

; <label>:65:                                     ; preds = %55
  %66 = fcmp oeq float %18, %59
  %67 = icmp eq i32 %26, 0
  %68 = and i1 %67, %66
  %69 = fcmp oeq float %63, 0.000000e+00
  %70 = or i1 %68, %69
  br i1 %70, label %123, label %71

; <label>:71:                                     ; preds = %65
  %72 = fmul float %63, %19
  %73 = fcmp une float %72, 0x7FF0000000000000
  %74 = fcmp une float %72, 0xFFF0000000000000
  %75 = and i1 %74, %73
  br i1 %75, label %81, label %76

; <label>:76:                                     ; preds = %71
  %77 = and i32 %57, -2147483648
  %78 = xor i32 %77, -1082130432
  %79 = bitcast i32 %78 to float
  %80 = fadd float %63, %79
  br label %81

; <label>:81:                                     ; preds = %71, %76
  %82 = phi float [ %80, %76 ], [ %63, %71 ]
  %83 = fptosi float %82 to i32
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = bitcast float %82 to i32
  br i1 %85, label %91, label %87

; <label>:87:                                     ; preds = %81
  %88 = and i32 %86, 2147483647
  %89 = bitcast i32 %88 to float
  %90 = fcmp olt float %89, 0x4170000000000000
  br label %91

; <label>:91:                                     ; preds = %81, %87
  %92 = phi i1 [ %90, %87 ], [ false, %81 ]
  %93 = zext i1 %92 to i32
  %94 = xor i32 %26, %93
  %95 = and i32 %86, -4096
  %96 = bitcast i32 %95 to float
  %97 = fsub float %82, %96
  %98 = fmul float %82, %19
  %99 = fmul float %22, %96
  %100 = fsub float %99, %98
  %101 = fmul float %97, %22
  %102 = fadd float %101, %100
  %103 = fmul float %23, %96
  %104 = fadd float %103, %102
  %105 = fmul float %23, %97
  %106 = fadd float %105, %104
  %107 = fadd float %28, %98
  %108 = fsub float %107, %28
  %109 = fsub float %107, %108
  %110 = fsub float %28, %109
  %111 = fsub float %98, %108
  %112 = fadd float %111, %110
  %113 = extractelement <2 x float> %27, i32 1
  %114 = fadd float %113, %106
  %115 = fadd float %112, %114
  %116 = fadd float %107, %115
  %117 = fsub float %107, %116
  %118 = fadd float %115, %117
  %119 = insertelement <2 x float> undef, float %116, i32 0
  %120 = insertelement <2 x float> %119, float %118, i32 1
  %121 = add nuw nsw i32 %25, 1
  %122 = icmp ult i32 %121, 8
  br i1 %122, label %24, label %123

; <label>:123:                                    ; preds = %91, %65, %55
  %124 = phi float [ %28, %65 ], [ %28, %55 ], [ %116, %91 ]
  %125 = fmul float %12, %124
  %126 = bitcast float %125 to i32
  %127 = and i32 %3, -2147483648
  %128 = xor i32 %127, %126
  %129 = bitcast i32 %128 to float
  %130 = fcmp une float %1, 0x7FF0000000000000
  %131 = fcmp une float %1, 0xFFF0000000000000
  %132 = and i1 %131, %130
  br i1 %132, label %138, label %133

; <label>:133:                                    ; preds = %123
  %134 = fcmp une float %0, 0x7FF0000000000000
  %135 = fcmp une float %0, 0xFFF0000000000000
  %136 = and i1 %135, %134
  %137 = select i1 %136, float %0, float 0x7FF8000000000000
  br label %138

; <label>:138:                                    ; preds = %123, %133
  %139 = phi float [ %137, %133 ], [ %129, %123 ]
  %140 = fcmp oeq float %13, 0.000000e+00
  %141 = select i1 %140, float 0x7FF8000000000000, float %139
  ret float %141
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sqrtf_u05(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0.000000e+00
  %3 = select i1 %2, float 0x7FF8000000000000, float %0
  %4 = fcmp olt float %3, 0x3B50000000000000
  %5 = fmul float %3, 0x4490000000000000
  %6 = select i1 %4, float 0x3D90000000000000, float 5.000000e-01
  %7 = select i1 %4, float %5, float %3
  %8 = fcmp ogt float %7, 0x43F0000000000000
  %9 = fmul float %7, 0x3BF0000000000000
  %10 = select i1 %8, float 0x41E0000000000000, float %6
  %11 = select i1 %8, float %9, float %7
  %12 = fadd float %11, 0x36A0000000000000
  %13 = bitcast float %12 to i32
  %14 = ashr i32 %13, 1
  %15 = sub nsw i32 1597463174, %14
  %16 = bitcast i32 %15 to float
  %17 = fmul float %11, 5.000000e-01
  %18 = fmul float %17, %16
  %19 = fmul float %18, %16
  %20 = fsub float 1.500000e+00, %19
  %21 = fmul float %20, %16
  %22 = fmul float %17, %21
  %23 = fmul float %21, %22
  %24 = fsub float 1.500000e+00, %23
  %25 = fmul float %21, %24
  %26 = fmul float %17, %25
  %27 = fmul float %25, %26
  %28 = fsub float 1.500000e+00, %27
  %29 = fmul float %25, %28
  %30 = fmul float %11, %29
  %31 = bitcast float %30 to i32
  %32 = and i32 %31, -4096
  %33 = bitcast i32 %32 to float
  %34 = fsub float %30, %33
  %35 = fmul float %30, %30
  %36 = fmul float %33, %33
  %37 = fsub float %36, %35
  %38 = fmul float %34, %33
  %39 = fadd float %38, %37
  %40 = fadd float %38, %39
  %41 = fmul float %34, %34
  %42 = fadd float %41, %40
  %43 = fadd float %11, %35
  %44 = fsub float %43, %11
  %45 = fsub float %43, %44
  %46 = fsub float %11, %45
  %47 = fsub float %35, %44
  %48 = fadd float %47, %46
  %49 = fadd float %48, %42
  %50 = fdiv float 1.000000e+00, %30
  %51 = bitcast float %50 to i32
  %52 = and i32 %51, -4096
  %53 = bitcast i32 %52 to float
  %54 = fsub float %50, %53
  %55 = fmul float %33, %53
  %56 = fsub float 1.000000e+00, %55
  %57 = fmul float %54, %33
  %58 = fsub float %56, %57
  %59 = fmul float %34, %53
  %60 = fsub float %58, %59
  %61 = fmul float %34, %54
  %62 = fsub float %60, %61
  %63 = fmul float %50, %62
  %64 = bitcast float %43 to i32
  %65 = and i32 %64, -4096
  %66 = bitcast i32 %65 to float
  %67 = fsub float %43, %66
  %68 = fmul float %50, %43
  %69 = fmul float %53, %66
  %70 = fsub float %69, %68
  %71 = fmul float %67, %53
  %72 = fadd float %71, %70
  %73 = fmul float %54, %66
  %74 = fadd float %73, %72
  %75 = fmul float %54, %67
  %76 = fadd float %75, %74
  %77 = fmul float %43, %63
  %78 = fadd float %76, %77
  %79 = fmul float %50, %49
  %80 = fadd float %79, %78
  %81 = fadd float %68, %80
  %82 = fmul float %10, %81
  %83 = fcmp oeq float %11, 0x7FF0000000000000
  %84 = select i1 %83, float 0x7FF0000000000000, float %82
  %85 = fcmp oeq float %11, 0.000000e+00
  %86 = select i1 %85, float %11, float %84
  ret float %86
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sqrtf_u35(float) local_unnamed_addr #0 {
  %2 = fcmp olt float %0, 0.000000e+00
  %3 = select i1 %2, float 0x7FF8000000000000, float %0
  %4 = fcmp olt float %3, 0x3B50000000000000
  %5 = fmul float %3, 0x4490000000000000
  %6 = select i1 %4, float %5, float %3
  %7 = fcmp ogt float %6, 0x43F0000000000000
  %8 = fmul float %6, 0x3BF0000000000000
  %9 = select i1 %7, float %8, float %6
  %10 = fpext float %9 to double
  %11 = fadd double %10, 0x3696D601AD376AB9
  %12 = fptrunc double %11 to float
  %13 = bitcast float %12 to i32
  %14 = ashr i32 %13, 1
  %15 = sub nsw i32 1597463174, %14
  %16 = bitcast i32 %15 to float
  %17 = fmul float %9, 5.000000e-01
  %18 = fmul float %17, %16
  %19 = fmul float %18, %16
  %20 = fsub float 1.500000e+00, %19
  %21 = fmul float %20, %16
  %22 = fmul float %17, %21
  %23 = fmul float %21, %22
  %24 = fsub float 1.500000e+00, %23
  %25 = fmul float %21, %24
  %26 = fmul float %17, %25
  %27 = fmul float %25, %26
  %28 = fsub float 1.500000e+00, %27
  %29 = fmul float %25, %28
  %30 = fcmp oeq float %9, 0x7FF0000000000000
  br i1 %30, label %40, label %31

; <label>:31:                                     ; preds = %1
  %32 = select i1 %4, float 0x3DA0000000000000, float 1.000000e+00
  %33 = select i1 %7, float 0x41F0000000000000, float %32
  %34 = fmul float %17, %29
  %35 = fmul float %29, %34
  %36 = fsub float 1.500000e+00, %35
  %37 = fmul float %29, %36
  %38 = fmul float %9, %37
  %39 = fmul float %33, %38
  br label %40

; <label>:40:                                     ; preds = %1, %31
  %41 = phi float [ %39, %31 ], [ 0x7FF0000000000000, %1 ]
  ret float %41
}

; Function Attrs: nounwind uwtable
define float @Sleef_sqrtf(float) local_unnamed_addr #1 {
  %2 = tail call float @sqrtf(float %0) #3
  ret float %2
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_fmaf(float, float, float) local_unnamed_addr #0 {
  %4 = fmul float %0, %1
  %5 = fadd float %4, %2
  %6 = bitcast float %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = bitcast i32 %7 to float
  %9 = fcmp olt float %8, 0x380B38FB80000000
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %3
  %11 = fmul float %0, 0x4310000000000000
  %12 = fmul float %1, 0x4310000000000000
  %13 = fmul float %2, 0x4630000000000000
  br label %14

; <label>:14:                                     ; preds = %10, %3
  %15 = phi float [ 0x39B0000000000000, %10 ], [ 1.000000e+00, %3 ]
  %16 = phi float [ %13, %10 ], [ %2, %3 ]
  %17 = phi float [ %12, %10 ], [ %1, %3 ]
  %18 = phi float [ %11, %10 ], [ %0, %3 ]
  %19 = fcmp ogt float %8, 0x47D2CED320000000
  br i1 %19, label %20, label %24

; <label>:20:                                     ; preds = %14
  %21 = fmul float %18, 0x3CD0000000000000
  %22 = fmul float %17, 0x3CD0000000000000
  %23 = fmul float %16, 0x39B0000000000000
  br label %24

; <label>:24:                                     ; preds = %20, %14
  %25 = phi float [ 0x4630000000000000, %20 ], [ %15, %14 ]
  %26 = phi float [ %23, %20 ], [ %16, %14 ]
  %27 = phi float [ %22, %20 ], [ %17, %14 ]
  %28 = phi float [ %21, %20 ], [ %18, %14 ]
  %29 = bitcast float %28 to i32
  %30 = and i32 %29, -4096
  %31 = bitcast i32 %30 to float
  %32 = fsub float %28, %31
  %33 = bitcast float %27 to i32
  %34 = and i32 %33, -4096
  %35 = bitcast i32 %34 to float
  %36 = fsub float %27, %35
  %37 = fmul float %27, %28
  %38 = fmul float %35, %31
  %39 = fsub float %38, %37
  %40 = fmul float %32, %35
  %41 = fadd float %40, %39
  %42 = fmul float %36, %31
  %43 = fadd float %42, %41
  %44 = fmul float %36, %32
  %45 = fadd float %44, %43
  %46 = fadd float %26, %37
  %47 = fsub float %46, %37
  %48 = fsub float %46, %47
  %49 = fsub float %37, %48
  %50 = fsub float %26, %47
  %51 = fadd float %50, %49
  %52 = fadd float %51, %45
  %53 = fcmp oeq float %28, 0.000000e+00
  %54 = fcmp oeq float %27, 0.000000e+00
  %55 = or i1 %54, %53
  %56 = fadd float %46, %52
  %57 = select i1 %55, float %26, float %56
  %58 = fcmp une float %26, 0x7FF0000000000000
  %59 = fcmp une float %26, 0xFFF0000000000000
  %60 = and i1 %59, %58
  br i1 %60, label %74, label %61

; <label>:61:                                     ; preds = %24
  %62 = fcmp une float %28, 0x7FF0000000000000
  %63 = fcmp une float %28, 0xFFF0000000000000
  %64 = and i1 %63, %62
  %65 = fcmp ord float %28, 0.000000e+00
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %74

; <label>:67:                                     ; preds = %61
  %68 = fcmp une float %27, 0x7FF0000000000000
  %69 = fcmp une float %27, 0xFFF0000000000000
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %74

; <label>:71:                                     ; preds = %67
  %72 = fcmp ord float %27, 0.000000e+00
  %73 = select i1 %72, float %26, float %5
  br label %74

; <label>:74:                                     ; preds = %71, %67, %61, %24
  %75 = phi float [ %5, %61 ], [ %5, %67 ], [ %5, %24 ], [ %73, %71 ]
  %76 = fcmp une float %75, 0x7FF0000000000000
  %77 = fcmp une float %75, 0xFFF0000000000000
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %83

; <label>:79:                                     ; preds = %74
  %80 = fcmp ord float %75, 0.000000e+00
  %81 = fmul float %25, %57
  %82 = select i1 %80, float %81, float %75
  ret float %82

; <label>:83:                                     ; preds = %74
  ret float %75
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_sinpif_u05(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i32
  %4 = fcmp uge float %2, 0.000000e+00
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %5, %3
  %7 = and i32 %6, -2
  %8 = and i32 %6, 2
  %9 = icmp ne i32 %8, 0
  %10 = sitofp i32 %7 to float
  %11 = fsub float %2, %10
  %12 = fmul float %11, %11
  %13 = bitcast float %11 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %11, %15
  %17 = fmul float %15, %15
  %18 = fsub float %17, %12
  %19 = fmul float %16, %15
  %20 = fadd float %19, %18
  %21 = fadd float %19, %20
  %22 = fmul float %16, %16
  %23 = fadd float %22, %21
  %24 = insertelement <2 x float> undef, float %12, i32 0
  %25 = insertelement <2 x float> %24, float %23, i32 1
  %26 = select i1 %9, float 0xBE5A193700000000, float 0x3E94C32E20000000
  %27 = select i1 %9, float 0x3ECE1EB4A0000000, float 0xBF032CC140000000
  %28 = fmul float %26, %12
  %29 = fadd float %27, %28
  %30 = select i1 %9, float 0xBF355D3C00000000, float 0x3F6466BBE0000000
  %31 = fmul float %12, %29
  %32 = fadd float %30, %31
  %33 = fmul float %12, %32
  %34 = select i1 %9, <2 x float> <float 0x3F903C1F00000000, float 0x3DFEE1F000000000>, <2 x float> <float 0xBFB4ABBCE0000000, float 0xBE16F9CCE0000000>
  %35 = extractelement <2 x float> %34, i32 0
  %36 = fadd float %35, %33
  %37 = fsub float %36, %33
  %38 = fsub float %36, %37
  %39 = fsub float %33, %38
  %40 = fsub float %35, %37
  %41 = fadd float %40, %39
  %42 = extractelement <2 x float> %34, i32 1
  %43 = fadd float %42, %41
  %44 = bitcast float %12 to i32
  %45 = and i32 %44, -4096
  %46 = bitcast i32 %45 to float
  %47 = fsub float %12, %46
  %48 = bitcast float %36 to i32
  %49 = and i32 %48, -4096
  %50 = bitcast i32 %49 to float
  %51 = fsub float %36, %50
  %52 = fmul float %12, %36
  %53 = fmul float %46, %50
  %54 = fsub float %53, %52
  %55 = fmul float %47, %50
  %56 = fadd float %55, %54
  %57 = fmul float %51, %46
  %58 = fadd float %57, %56
  %59 = fmul float %47, %51
  %60 = fadd float %59, %58
  %61 = fmul float %12, %43
  %62 = fadd float %61, %60
  %63 = fmul float %36, %23
  %64 = fadd float %63, %62
  %65 = select i1 %9, <2 x float> <float 0xBFD3BD3CC0000000, float 0xBE437BD7E0000000>, <2 x float> <float 0x3FE921FB60000000, float 0xBE57781980000000>
  %66 = extractelement <2 x float> %65, i32 0
  %67 = fadd float %66, %52
  %68 = fsub float %67, %52
  %69 = fsub float %67, %68
  %70 = fsub float %52, %69
  %71 = fsub float %66, %68
  %72 = fadd float %71, %70
  %73 = extractelement <2 x float> %65, i32 1
  %74 = fadd float %73, %64
  %75 = fadd float %72, %74
  %76 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %11, i32 0
  %77 = select i1 %9, <2 x float> %25, <2 x float> %76
  %78 = bitcast float %67 to i32
  %79 = and i32 %78, -4096
  %80 = bitcast i32 %79 to float
  %81 = fsub float %67, %80
  %82 = extractelement <2 x float> %77, i32 0
  %83 = bitcast float %82 to i32
  %84 = and i32 %83, -4096
  %85 = bitcast i32 %84 to float
  %86 = fsub float %82, %85
  %87 = fmul float %67, %82
  %88 = fmul float %80, %85
  %89 = fsub float %88, %87
  %90 = fmul float %81, %85
  %91 = fadd float %90, %89
  %92 = fmul float %86, %80
  %93 = fadd float %92, %91
  %94 = fmul float %81, %86
  %95 = fadd float %94, %93
  %96 = extractelement <2 x float> %77, i32 1
  %97 = fmul float %67, %96
  %98 = fadd float %97, %95
  %99 = fmul float %82, %75
  %100 = fadd float %99, %98
  %101 = insertelement <2 x float> undef, float %87, i32 0
  %102 = insertelement <2 x float> %101, float %100, i32 1
  br i1 %9, label %103, label %113

; <label>:103:                                    ; preds = %1
  %104 = fadd float %87, 1.000000e+00
  %105 = fsub float %104, %87
  %106 = fsub float %104, %105
  %107 = fsub float %87, %106
  %108 = fsub float 1.000000e+00, %105
  %109 = fadd float %108, %107
  %110 = fadd float %109, %100
  %111 = insertelement <2 x float> undef, float %104, i32 0
  %112 = insertelement <2 x float> %111, float %110, i32 1
  br label %113

; <label>:113:                                    ; preds = %103, %1
  %114 = phi <2 x float> [ %112, %103 ], [ %102, %1 ]
  %115 = and i32 %6, 4
  %116 = icmp eq i32 %115, 0
  %117 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %114
  %118 = select i1 %116, <2 x float> %114, <2 x float> %117
  %119 = extractelement <2 x float> %118, i32 0
  %120 = extractelement <2 x float> %118, i32 1
  %121 = fadd float %119, %120
  %122 = bitcast float %0 to i32
  %123 = icmp eq i32 %122, -2147483648
  %124 = select i1 %123, float -0.000000e+00, float %121
  %125 = and i32 %122, 2147483647
  %126 = bitcast i32 %125 to float
  %127 = fcmp ogt float %126, 8.000000e+06
  %128 = select i1 %127, float 0.000000e+00, float %124
  %129 = fcmp une float %0, 0x7FF0000000000000
  %130 = fcmp une float %0, 0xFFF0000000000000
  %131 = and i1 %130, %129
  %132 = select i1 %131, float %128, float 0x7FF8000000000000
  ret float %132
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_cospif_u05(float) local_unnamed_addr #0 {
  %2 = fmul float %0, 4.000000e+00
  %3 = fptosi float %2 to i32
  %4 = fcmp uge float %2, 0.000000e+00
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %5, %3
  %7 = and i32 %6, -2
  %8 = and i32 %6, 2
  %9 = icmp eq i32 %8, 0
  %10 = sitofp i32 %7 to float
  %11 = fsub float %2, %10
  %12 = fmul float %11, %11
  %13 = bitcast float %11 to i32
  %14 = and i32 %13, -4096
  %15 = bitcast i32 %14 to float
  %16 = fsub float %11, %15
  %17 = fmul float %15, %15
  %18 = fsub float %17, %12
  %19 = fmul float %16, %15
  %20 = fadd float %19, %18
  %21 = fadd float %19, %20
  %22 = fmul float %16, %16
  %23 = fadd float %22, %21
  %24 = insertelement <2 x float> undef, float %12, i32 0
  %25 = insertelement <2 x float> %24, float %23, i32 1
  %26 = select i1 %9, float 0xBE5A193700000000, float 0x3E94C32E20000000
  %27 = select i1 %9, float 0x3ECE1EB4A0000000, float 0xBF032CC140000000
  %28 = fmul float %26, %12
  %29 = fadd float %27, %28
  %30 = select i1 %9, float 0xBF355D3C00000000, float 0x3F6466BBE0000000
  %31 = fmul float %12, %29
  %32 = fadd float %30, %31
  %33 = fmul float %12, %32
  %34 = select i1 %9, <2 x float> <float 0x3F903C1F00000000, float 0x3DFEE1F000000000>, <2 x float> <float 0xBFB4ABBCE0000000, float 0xBE16F9CCE0000000>
  %35 = extractelement <2 x float> %34, i32 0
  %36 = fadd float %35, %33
  %37 = fsub float %36, %33
  %38 = fsub float %36, %37
  %39 = fsub float %33, %38
  %40 = fsub float %35, %37
  %41 = fadd float %40, %39
  %42 = extractelement <2 x float> %34, i32 1
  %43 = fadd float %42, %41
  %44 = bitcast float %12 to i32
  %45 = and i32 %44, -4096
  %46 = bitcast i32 %45 to float
  %47 = fsub float %12, %46
  %48 = bitcast float %36 to i32
  %49 = and i32 %48, -4096
  %50 = bitcast i32 %49 to float
  %51 = fsub float %36, %50
  %52 = fmul float %12, %36
  %53 = fmul float %46, %50
  %54 = fsub float %53, %52
  %55 = fmul float %47, %50
  %56 = fadd float %55, %54
  %57 = fmul float %51, %46
  %58 = fadd float %57, %56
  %59 = fmul float %47, %51
  %60 = fadd float %59, %58
  %61 = fmul float %12, %43
  %62 = fadd float %61, %60
  %63 = fmul float %36, %23
  %64 = fadd float %63, %62
  %65 = select i1 %9, <2 x float> <float 0xBFD3BD3CC0000000, float 0xBE437BD7E0000000>, <2 x float> <float 0x3FE921FB60000000, float 0xBE57781980000000>
  %66 = extractelement <2 x float> %65, i32 0
  %67 = fadd float %66, %52
  %68 = fsub float %67, %52
  %69 = fsub float %67, %68
  %70 = fsub float %52, %69
  %71 = fsub float %66, %68
  %72 = fadd float %71, %70
  %73 = extractelement <2 x float> %65, i32 1
  %74 = fadd float %73, %64
  %75 = fadd float %72, %74
  %76 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %11, i32 0
  %77 = select i1 %9, <2 x float> %25, <2 x float> %76
  %78 = bitcast float %67 to i32
  %79 = and i32 %78, -4096
  %80 = bitcast i32 %79 to float
  %81 = fsub float %67, %80
  %82 = extractelement <2 x float> %77, i32 0
  %83 = bitcast float %82 to i32
  %84 = and i32 %83, -4096
  %85 = bitcast i32 %84 to float
  %86 = fsub float %82, %85
  %87 = fmul float %67, %82
  %88 = fmul float %80, %85
  %89 = fsub float %88, %87
  %90 = fmul float %81, %85
  %91 = fadd float %90, %89
  %92 = fmul float %86, %80
  %93 = fadd float %92, %91
  %94 = fmul float %81, %86
  %95 = fadd float %94, %93
  %96 = extractelement <2 x float> %77, i32 1
  %97 = fmul float %67, %96
  %98 = fadd float %97, %95
  %99 = fmul float %82, %75
  %100 = fadd float %99, %98
  %101 = insertelement <2 x float> undef, float %87, i32 0
  %102 = insertelement <2 x float> %101, float %100, i32 1
  br i1 %9, label %103, label %113

; <label>:103:                                    ; preds = %1
  %104 = fadd float %87, 1.000000e+00
  %105 = fsub float %104, %87
  %106 = fsub float %104, %105
  %107 = fsub float %87, %106
  %108 = fsub float 1.000000e+00, %105
  %109 = fadd float %108, %107
  %110 = fadd float %109, %100
  %111 = insertelement <2 x float> undef, float %104, i32 0
  %112 = insertelement <2 x float> %111, float %110, i32 1
  br label %113

; <label>:113:                                    ; preds = %103, %1
  %114 = phi <2 x float> [ %112, %103 ], [ %102, %1 ]
  %115 = add nsw i32 %7, 2
  %116 = and i32 %115, 4
  %117 = icmp eq i32 %116, 0
  %118 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %114
  %119 = select i1 %117, <2 x float> %114, <2 x float> %118
  %120 = extractelement <2 x float> %119, i32 0
  %121 = extractelement <2 x float> %119, i32 1
  %122 = fadd float %120, %121
  %123 = bitcast float %0 to i32
  %124 = and i32 %123, 2147483647
  %125 = bitcast i32 %124 to float
  %126 = fcmp ogt float %125, 8.000000e+06
  %127 = select i1 %126, float 1.000000e+00, float %122
  %128 = fcmp une float %0, 0x7FF0000000000000
  %129 = fcmp une float %0, 0xFFF0000000000000
  %130 = and i1 %129, %128
  %131 = select i1 %130, float %127, float 0x7FF8000000000000
  ret float %131
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_tgammaf_u10(float) local_unnamed_addr #0 {
  %2 = tail call fastcc { <2 x float>, <2 x float> } @gammafk(float %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = extractelement <2 x float> %3, i32 1
  %7 = fadd float %5, %6
  %8 = fmul float %7, 0x3FF7154760000000
  %9 = fcmp olt float %8, 0.000000e+00
  %10 = select i1 %9, float -5.000000e-01, float 5.000000e-01
  %11 = fadd float %8, %10
  %12 = fptosi float %11 to i32
  %13 = sitofp i32 %12 to float
  %14 = fptosi float %13 to i32
  %15 = sitofp i32 %14 to float
  %16 = fmul float %15, 0xBFE62E4000000000
  %17 = fadd float %5, %16
  %18 = fsub float %17, %5
  %19 = fsub float %17, %18
  %20 = fsub float %5, %19
  %21 = fsub float %16, %18
  %22 = fadd float %21, %20
  %23 = fadd float %6, %22
  %24 = fmul float %15, 0xBEB7F7D1C0000000
  %25 = fadd float %24, %17
  %26 = fsub float %25, %17
  %27 = fsub float %25, %26
  %28 = fsub float %17, %27
  %29 = fsub float %24, %26
  %30 = fadd float %29, %28
  %31 = fadd float %23, %30
  %32 = fmul float %25, 0x3F29F6FFE0000000
  %33 = fadd float %32, 0x3F56D7EF80000000
  %34 = fmul float %25, %33
  %35 = fadd float %34, 0x3F811121A0000000
  %36 = fmul float %25, %35
  %37 = fadd float %36, 0x3FA5554B80000000
  %38 = bitcast float %25 to i32
  %39 = and i32 %38, -4096
  %40 = bitcast i32 %39 to float
  %41 = fsub float %25, %40
  %42 = bitcast float %37 to i32
  %43 = and i32 %42, -4096
  %44 = bitcast i32 %43 to float
  %45 = fsub float %37, %44
  %46 = fmul float %25, %37
  %47 = fmul float %40, %44
  %48 = fsub float %47, %46
  %49 = fmul float %41, %44
  %50 = fadd float %49, %48
  %51 = fmul float %45, %40
  %52 = fadd float %51, %50
  %53 = fmul float %41, %45
  %54 = fadd float %53, %52
  %55 = fmul float %31, %37
  %56 = fadd float %55, %54
  %57 = fadd float %46, 0x3FC5555540000000
  %58 = fsub float %57, %46
  %59 = fsub float %57, %58
  %60 = fsub float %46, %59
  %61 = fsub float 0x3FC5555540000000, %58
  %62 = fadd float %61, %60
  %63 = fadd float %62, %56
  %64 = bitcast float %57 to i32
  %65 = and i32 %64, -4096
  %66 = bitcast i32 %65 to float
  %67 = fsub float %57, %66
  %68 = fmul float %25, %57
  %69 = fmul float %40, %66
  %70 = fsub float %69, %68
  %71 = fmul float %41, %66
  %72 = fadd float %71, %70
  %73 = fmul float %67, %40
  %74 = fadd float %73, %72
  %75 = fmul float %41, %67
  %76 = fadd float %75, %74
  %77 = fmul float %25, %63
  %78 = fadd float %76, %77
  %79 = fmul float %31, %57
  %80 = fadd float %79, %78
  %81 = fadd float %68, 5.000000e-01
  %82 = fsub float %81, %68
  %83 = fsub float %81, %82
  %84 = fsub float %68, %83
  %85 = fsub float 5.000000e-01, %82
  %86 = fadd float %85, %84
  %87 = fadd float %86, %80
  %88 = fmul float %25, %25
  %89 = fmul float %40, %40
  %90 = fsub float %89, %88
  %91 = fadd float %40, %40
  %92 = fmul float %91, %41
  %93 = fadd float %90, %92
  %94 = fmul float %41, %41
  %95 = fadd float %94, %93
  %96 = fadd float %31, %31
  %97 = fmul float %25, %96
  %98 = fadd float %97, %95
  %99 = bitcast float %88 to i32
  %100 = and i32 %99, -4096
  %101 = bitcast i32 %100 to float
  %102 = fsub float %88, %101
  %103 = bitcast float %81 to i32
  %104 = and i32 %103, -4096
  %105 = bitcast i32 %104 to float
  %106 = fsub float %81, %105
  %107 = fmul float %88, %81
  %108 = fmul float %101, %105
  %109 = fsub float %108, %107
  %110 = fmul float %102, %105
  %111 = fadd float %110, %109
  %112 = fmul float %106, %101
  %113 = fadd float %112, %111
  %114 = fmul float %102, %106
  %115 = fadd float %114, %113
  %116 = fmul float %88, %87
  %117 = fadd float %115, %116
  %118 = fmul float %98, %81
  %119 = fadd float %118, %117
  %120 = fadd float %25, %107
  %121 = fsub float %120, %25
  %122 = fsub float %120, %121
  %123 = fsub float %25, %122
  %124 = fsub float %107, %121
  %125 = fadd float %124, %123
  %126 = fadd float %31, %119
  %127 = fadd float %125, %126
  %128 = fadd float %120, 1.000000e+00
  %129 = fadd float %128, -1.000000e+00
  %130 = fsub float %128, %129
  %131 = fsub float 1.000000e+00, %130
  %132 = fsub float %120, %129
  %133 = fadd float %132, %131
  %134 = fadd float %133, %127
  %135 = ashr i32 %14, 1
  %136 = shl i32 %135, 23
  %137 = add i32 %136, 1065353216
  %138 = bitcast i32 %137 to float
  %139 = fmul float %128, %138
  %140 = sub nsw i32 %14, %135
  %141 = shl i32 %140, 23
  %142 = add i32 %141, 1065353216
  %143 = bitcast i32 %142 to float
  %144 = fmul float %139, %143
  %145 = fmul float %134, %138
  %146 = fmul float %145, %143
  %147 = fcmp olt float %5, -1.040000e+02
  %148 = insertelement <2 x float> undef, float %144, i32 0
  %149 = insertelement <2 x float> %148, float %146, i32 1
  %150 = select i1 %147, <2 x float> zeroinitializer, <2 x float> %149
  %151 = extractelement <2 x float> %150, i32 0
  %152 = bitcast float %151 to i32
  %153 = and i32 %152, -4096
  %154 = bitcast i32 %153 to float
  %155 = fsub float %151, %154
  %156 = extractelement <2 x float> %4, i32 0
  %157 = bitcast float %156 to i32
  %158 = and i32 %157, -4096
  %159 = bitcast i32 %158 to float
  %160 = fsub float %156, %159
  %161 = fmul float %156, %151
  %162 = fmul float %159, %154
  %163 = fsub float %162, %161
  %164 = fmul float %155, %159
  %165 = fadd float %164, %163
  %166 = fmul float %160, %154
  %167 = fadd float %166, %165
  %168 = fmul float %160, %155
  %169 = fadd float %168, %167
  %170 = extractelement <2 x float> %4, i32 1
  %171 = fmul float %170, %151
  %172 = fadd float %171, %169
  %173 = extractelement <2 x float> %150, i32 1
  %174 = fmul float %156, %173
  %175 = fadd float %174, %172
  %176 = fadd float %161, %175
  %177 = fcmp oeq float %0, 0xFFF0000000000000
  br i1 %177, label %193, label %178

; <label>:178:                                    ; preds = %1
  %179 = fcmp olt float %0, 0.000000e+00
  br i1 %179, label %180, label %184

; <label>:180:                                    ; preds = %178
  %181 = fptosi float %0 to i32
  %182 = sitofp i32 %181 to float
  %183 = fcmp une float %182, %0
  br i1 %183, label %184, label %193

; <label>:184:                                    ; preds = %180, %178
  %185 = fcmp une float %0, 0x7FF0000000000000
  %186 = fcmp ord float %0, 0.000000e+00
  %187 = and i1 %186, %185
  %188 = and i1 %179, %187
  %189 = xor i1 %188, true
  %190 = fcmp ord float %176, 0.000000e+00
  %191 = or i1 %190, %189
  %192 = select i1 %191, float %176, float 0x7FF8000000000000
  br label %193

; <label>:193:                                    ; preds = %184, %180, %1
  %194 = phi float [ 0x7FF8000000000000, %180 ], [ 0x7FF8000000000000, %1 ], [ %192, %184 ]
  %195 = fcmp oeq float %0, 0x7FF0000000000000
  br i1 %195, label %202, label %196

; <label>:196:                                    ; preds = %193
  %197 = fcmp une float %0, 0xFFF0000000000000
  %198 = fcmp ord float %0, 0.000000e+00
  %199 = and i1 %198, %197
  %200 = fcmp oge float %0, 0xB810000000000000
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %213

; <label>:202:                                    ; preds = %193, %196
  %203 = fcmp une float %0, 0.000000e+00
  %204 = fcmp ule float %0, 3.600000e+01
  %205 = and i1 %204, %203
  %206 = fcmp ord float %194, 0.000000e+00
  %207 = and i1 %205, %206
  br i1 %207, label %213, label %208

; <label>:208:                                    ; preds = %202
  %209 = bitcast float %0 to i32
  %210 = and i32 %209, -2147483648
  %211 = or i32 %210, 2139095040
  %212 = bitcast i32 %211 to float
  br label %213

; <label>:213:                                    ; preds = %202, %196, %208
  %214 = phi float [ %212, %208 ], [ %194, %196 ], [ %194, %202 ]
  ret float %214
}

; Function Attrs: norecurse nounwind readnone uwtable
define internal fastcc { <2 x float>, <2 x float> } @gammafk(float) unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x39B4484C00000000
  %6 = fcmp olt float %0, 5.000000e-01
  br i1 %5, label %20, label %7

; <label>:7:                                      ; preds = %1
  br i1 %6, label %8, label %18

; <label>:8:                                      ; preds = %7
  %9 = fsub float -0.000000e+00, %0
  %10 = fsub float 1.000000e+00, %0
  %11 = fadd float %10, -1.000000e+00
  %12 = fsub float %10, %11
  %13 = fsub float 1.000000e+00, %12
  %14 = fsub float %9, %11
  %15 = fadd float %14, %13
  %16 = insertelement <2 x float> undef, float %10, i32 0
  %17 = insertelement <2 x float> %16, float %15, i32 1
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %0, i32 0
  br label %20

; <label>:20:                                     ; preds = %1, %8, %18
  %21 = phi <2 x float> [ %17, %8 ], [ %19, %18 ], [ zeroinitializer, %1 ]
  %22 = extractelement <2 x float> %21, i32 0
  %23 = fcmp oge float %22, 5.000000e-01
  %24 = fpext float %22 to double
  %25 = fcmp ole double %24, 1.200000e+00
  %26 = and i1 %23, %25
  %27 = fcmp ogt double %24, 2.300000e+00
  %28 = fadd float %22, 1.000000e+00
  %29 = fsub float %28, %22
  %30 = fsub float %28, %29
  %31 = fsub float %22, %30
  %32 = fsub float 1.000000e+00, %29
  %33 = fadd float %32, %31
  %34 = extractelement <2 x float> %21, i32 1
  %35 = fadd float %34, %33
  %36 = bitcast float %28 to i32
  %37 = and i32 %36, -4096
  %38 = bitcast i32 %37 to float
  %39 = fsub float %28, %38
  %40 = bitcast float %22 to i32
  %41 = and i32 %40, -4096
  %42 = bitcast i32 %41 to float
  %43 = fsub float %22, %42
  %44 = fmul float %22, %28
  %45 = fmul float %42, %38
  %46 = fsub float %45, %44
  %47 = fmul float %39, %42
  %48 = fadd float %47, %46
  %49 = fmul float %43, %38
  %50 = fadd float %49, %48
  %51 = fmul float %43, %39
  %52 = fadd float %51, %50
  %53 = fmul float %34, %28
  %54 = fadd float %53, %52
  %55 = fmul float %22, %35
  %56 = fadd float %55, %54
  %57 = fadd float %44, %56
  %58 = fsub float %44, %57
  %59 = fadd float %56, %58
  %60 = fadd float %22, 2.000000e+00
  %61 = fsub float %60, %22
  %62 = fsub float %60, %61
  %63 = fsub float %22, %62
  %64 = fsub float 2.000000e+00, %61
  %65 = fadd float %64, %63
  %66 = fadd float %34, %65
  %67 = bitcast float %60 to i32
  %68 = and i32 %67, -4096
  %69 = bitcast i32 %68 to float
  %70 = fsub float %60, %69
  %71 = bitcast float %57 to i32
  %72 = and i32 %71, -4096
  %73 = bitcast i32 %72 to float
  %74 = fsub float %57, %73
  %75 = fmul float %60, %57
  %76 = fmul float %69, %73
  %77 = fsub float %76, %75
  %78 = fmul float %70, %73
  %79 = fadd float %78, %77
  %80 = fmul float %74, %69
  %81 = fadd float %80, %79
  %82 = fmul float %70, %74
  %83 = fadd float %82, %81
  %84 = fmul float %60, %59
  %85 = fadd float %84, %83
  %86 = fmul float %66, %57
  %87 = fadd float %86, %85
  %88 = fadd float %75, %87
  %89 = fsub float %75, %88
  %90 = fadd float %87, %89
  %91 = insertelement <2 x float> undef, float %88, i32 0
  %92 = insertelement <2 x float> %91, float %90, i32 1
  %93 = xor i1 %27, true
  %94 = fcmp ugt float %22, 7.000000e+00
  %95 = or i1 %94, %93
  %96 = select i1 %95, <2 x float> <float 1.000000e+00, float 0.000000e+00>, <2 x float> %92
  br i1 %95, label %107, label %97

; <label>:97:                                     ; preds = %20
  %98 = fadd float %22, 3.000000e+00
  %99 = fsub float %98, %22
  %100 = fsub float %98, %99
  %101 = fsub float %22, %100
  %102 = fsub float 3.000000e+00, %99
  %103 = fadd float %102, %101
  %104 = fadd float %34, %103
  %105 = insertelement <2 x float> undef, float %98, i32 0
  %106 = insertelement <2 x float> %105, float %104, i32 1
  br label %107

; <label>:107:                                    ; preds = %20, %97
  %108 = phi <2 x float> [ %106, %97 ], [ %21, %20 ]
  br i1 %27, label %109, label %114

; <label>:109:                                    ; preds = %107
  %110 = extractelement <2 x float> %108, i32 0
  %111 = fpext float %110 to double
  %112 = fdiv double 1.000000e+00, %111
  %113 = extractelement <2 x float> %108, i32 1
  br label %127

; <label>:114:                                    ; preds = %107
  %115 = select i1 %26, float -1.000000e+00, float -2.000000e+00
  %116 = extractelement <2 x float> %108, i32 0
  %117 = fadd float %115, %116
  %118 = fsub float %117, %116
  %119 = fsub float %117, %118
  %120 = fsub float %116, %119
  %121 = fsub float %115, %118
  %122 = fadd float %121, %120
  %123 = extractelement <2 x float> %108, i32 1
  %124 = fadd float %123, %122
  %125 = fadd float %117, %124
  %126 = fpext float %125 to double
  br label %127

; <label>:127:                                    ; preds = %114, %109
  %128 = phi float [ %123, %114 ], [ %113, %109 ]
  %129 = phi float [ %116, %114 ], [ %110, %109 ]
  %130 = phi double [ %126, %114 ], [ %112, %109 ]
  %131 = fptrunc double %130 to float
  %132 = select i1 %26, float 0x3FEE314800000000, float 0x3F1CE6AEA0000000
  %133 = select i1 %27, float 0x3F4B8239C0000000, float %132
  %134 = select i1 %26, float 0x3FEBBE8420000000, float 0x3F156418C0000000
  %135 = select i1 %27, float 0xBF0B1D75E0000000, float %134
  %136 = fmul float %133, %131
  %137 = fadd float %135, %136
  %138 = select i1 %26, float 0x3FDEE411C0000000, float 0x3F2408B0C0000000
  %139 = select i1 %27, float 0xBF436773C0000000, float %138
  %140 = fmul float %137, %131
  %141 = fadd float %139, %140
  %142 = select i1 %26, float 0xBFB6AB4C40000000, float 0xBF2EDE4CA0000000
  %143 = select i1 %27, float 0x3F12476040000000, float %142
  %144 = fmul float %141, %131
  %145 = fadd float %143, %144
  %146 = select i1 %26, float 0x3FB9F43480000000, float 0x3F4042A160000000
  %147 = select i1 %27, float 0x3F49B0FF60000000, float %146
  %148 = fmul float %145, %131
  %149 = fadd float %147, %148
  %150 = select i1 %26, float 0xBFC31D9A40000000, float 0xBF538DDA00000000
  %151 = select i1 %27, float 0xBF2E13CE40000000, float %150
  %152 = fmul float %149, %131
  %153 = fadd float %151, %152
  %154 = select i1 %26, float 0x3FC5BA65E0000000, float 0x3F67B01FA0000000
  %155 = select i1 %27, float 0xBF65F72680000000, float %154
  %156 = fmul float %153, %131
  %157 = fadd float %155, %156
  %158 = select i1 %26, float 0xBFCA8704E0000000, float 0xBF7E403520000000
  %159 = select i1 %27, float 0x3F6C71C720000000, float %158
  %160 = fmul float %157, %131
  %161 = fadd float %159, %160
  %162 = select i1 %26, float 0x3FD1514D20000000, float 0x3F95132020000000
  %163 = select i1 %27, float 0x3FB5555560000000, float %162
  %164 = fmul float %161, %131
  %165 = fadd float %163, %164
  %166 = fadd float %129, -5.000000e-01
  %167 = fsub float %166, %129
  %168 = fsub float %166, %167
  %169 = fsub float %129, %168
  %170 = fsub float -5.000000e-01, %167
  %171 = fadd float %170, %169
  %172 = fadd float %128, %171
  %173 = fmul float %129, 0x3FF5555560000000
  %174 = fcmp olt float %173, 0x3BF0000000000000
  %175 = fmul float %173, 0x43F0000000000000
  %176 = select i1 %174, float %175, float %173
  %177 = bitcast float %176 to i32
  %178 = lshr i32 %177, 23
  %179 = and i32 %178, 255
  %180 = select i1 %174, i32 -191, i32 -127
  %181 = add nsw i32 %179, %180
  %182 = shl i32 %181, 23
  %183 = sub i32 1065353216, %182
  %184 = bitcast i32 %183 to float
  %185 = fmul float %129, %184
  %186 = fmul float %128, %184
  %187 = fadd float %185, -1.000000e+00
  %188 = fsub float %187, %185
  %189 = fsub float %187, %188
  %190 = fsub float %185, %189
  %191 = fsub float -1.000000e+00, %188
  %192 = fadd float %191, %190
  %193 = fadd float %186, %192
  %194 = fadd float %185, 1.000000e+00
  %195 = fsub float %194, %185
  %196 = fsub float %194, %195
  %197 = fsub float %185, %196
  %198 = fsub float 1.000000e+00, %195
  %199 = fadd float %198, %197
  %200 = fadd float %186, %199
  %201 = fdiv float 1.000000e+00, %194
  %202 = bitcast float %194 to i32
  %203 = and i32 %202, -4096
  %204 = bitcast i32 %203 to float
  %205 = fsub float %194, %204
  %206 = bitcast float %201 to i32
  %207 = and i32 %206, -4096
  %208 = bitcast i32 %207 to float
  %209 = fsub float %201, %208
  %210 = bitcast float %187 to i32
  %211 = and i32 %210, -4096
  %212 = bitcast i32 %211 to float
  %213 = fsub float %187, %212
  %214 = fmul float %187, %201
  %215 = fmul float %212, %208
  %216 = fsub float %215, %214
  %217 = fmul float %209, %212
  %218 = fadd float %216, %217
  %219 = fmul float %213, %208
  %220 = fadd float %219, %218
  %221 = fmul float %213, %209
  %222 = fadd float %221, %220
  %223 = fmul float %204, %208
  %224 = fsub float 1.000000e+00, %223
  %225 = fmul float %209, %204
  %226 = fsub float %224, %225
  %227 = fmul float %205, %208
  %228 = fsub float %226, %227
  %229 = fmul float %205, %209
  %230 = fsub float %228, %229
  %231 = fmul float %214, %230
  %232 = fadd float %222, %231
  %233 = fmul float %214, %200
  %234 = fsub float %193, %233
  %235 = fmul float %201, %234
  %236 = fadd float %235, %232
  %237 = bitcast float %214 to i32
  %238 = and i32 %237, -4096
  %239 = bitcast i32 %238 to float
  %240 = fsub float %214, %239
  %241 = fmul float %214, %214
  %242 = fmul float %239, %239
  %243 = fsub float %242, %241
  %244 = fadd float %239, %239
  %245 = fmul float %244, %240
  %246 = fadd float %243, %245
  %247 = fmul float %240, %240
  %248 = fadd float %247, %246
  %249 = fadd float %236, %236
  %250 = fmul float %214, %249
  %251 = fadd float %248, %250
  %252 = fmul float %241, 0x3FCEA0D200000000
  %253 = fadd float %252, 0x3FD2406C80000000
  %254 = fmul float %241, %253
  %255 = fadd float %254, 0x3FD999B240000000
  %256 = fmul float %241, %255
  %257 = fadd float %256, 0x3FE5555560000000
  %258 = sitofp i32 %181 to float
  %259 = bitcast float %258 to i32
  %260 = and i32 %259, -4096
  %261 = bitcast i32 %260 to float
  %262 = fsub float %258, %261
  %263 = fmul float %258, 0x3FE62E4300000000
  %264 = fmul float %261, 0x3FE62E0000000000
  %265 = fsub float %264, %263
  %266 = fmul float %261, 0x3F00C00000000000
  %267 = fadd float %266, %265
  %268 = fmul float %262, 0x3FE62E0000000000
  %269 = fadd float %268, %267
  %270 = fmul float %262, 0x3F00C00000000000
  %271 = fadd float %270, %269
  %272 = fmul float %258, 0x3E205C6100000000
  %273 = fsub float %271, %272
  %274 = fmul float %214, 2.000000e+00
  %275 = fmul float %236, 2.000000e+00
  %276 = fadd float %263, %274
  %277 = fsub float %263, %276
  %278 = fadd float %274, %277
  %279 = fadd float %273, %278
  %280 = fadd float %279, %275
  %281 = bitcast float %241 to i32
  %282 = and i32 %281, -4096
  %283 = bitcast i32 %282 to float
  %284 = fsub float %241, %283
  %285 = fmul float %214, %241
  %286 = fmul float %239, %283
  %287 = fsub float %286, %285
  %288 = fmul float %284, %239
  %289 = fadd float %288, %287
  %290 = fmul float %240, %283
  %291 = fadd float %290, %289
  %292 = fmul float %240, %284
  %293 = fadd float %292, %291
  %294 = fmul float %241, %236
  %295 = fadd float %293, %294
  %296 = fmul float %214, %251
  %297 = fadd float %295, %296
  %298 = bitcast float %285 to i32
  %299 = and i32 %298, -4096
  %300 = bitcast i32 %299 to float
  %301 = fsub float %285, %300
  %302 = bitcast float %257 to i32
  %303 = and i32 %302, -4096
  %304 = bitcast i32 %303 to float
  %305 = fsub float %257, %304
  %306 = fmul float %285, %257
  %307 = fmul float %300, %304
  %308 = fsub float %307, %306
  %309 = fmul float %301, %304
  %310 = fadd float %309, %308
  %311 = fmul float %305, %300
  %312 = fadd float %311, %310
  %313 = fmul float %301, %305
  %314 = fadd float %313, %312
  %315 = fmul float %257, %297
  %316 = fadd float %314, %315
  %317 = fadd float %276, %306
  %318 = fsub float %276, %317
  %319 = fadd float %306, %318
  %320 = fadd float %319, %280
  %321 = fadd float %320, %316
  %322 = bitcast float %166 to i32
  %323 = and i32 %322, -4096
  %324 = bitcast i32 %323 to float
  %325 = fsub float %166, %324
  %326 = bitcast float %317 to i32
  %327 = and i32 %326, -4096
  %328 = bitcast i32 %327 to float
  %329 = fsub float %317, %328
  %330 = fmul float %166, %317
  %331 = fmul float %324, %328
  %332 = fsub float %331, %330
  %333 = fmul float %325, %328
  %334 = fadd float %333, %332
  %335 = fmul float %329, %324
  %336 = fadd float %335, %334
  %337 = fmul float %325, %329
  %338 = fadd float %337, %336
  %339 = fmul float %166, %321
  %340 = fadd float %338, %339
  %341 = fmul float %172, %317
  %342 = fadd float %341, %340
  %343 = fsub float -0.000000e+00, %129
  %344 = fsub float %330, %129
  %345 = fsub float %344, %330
  %346 = fsub float %344, %345
  %347 = fsub float %330, %346
  %348 = fsub float %343, %345
  %349 = fadd float %348, %347
  %350 = fsub float %342, %128
  %351 = fadd float %349, %350
  %352 = fadd float %344, 0x3FED67F1C0000000
  %353 = fsub float %352, %344
  %354 = fsub float %352, %353
  %355 = fsub float %344, %354
  %356 = fsub float 0x3FED67F1C0000000, %353
  %357 = fadd float %356, %355
  %358 = fadd float %351, 0x3E50C97D60000000
  %359 = fadd float %357, %358
  %360 = insertelement <2 x float> undef, float %352, i32 0
  %361 = insertelement <2 x float> %360, float %359, i32 1
  %362 = bitcast float %165 to i32
  %363 = and i32 %362, -4096
  %364 = bitcast i32 %363 to float
  %365 = fsub float %165, %364
  %366 = bitcast float %131 to i32
  %367 = and i32 %366, -4096
  %368 = bitcast i32 %367 to float
  %369 = fsub float %131, %368
  %370 = fmul float %165, %131
  %371 = fmul float %368, %364
  %372 = fsub float %371, %370
  %373 = fmul float %365, %368
  %374 = fadd float %373, %372
  %375 = fmul float %369, %364
  %376 = fadd float %375, %374
  %377 = fmul float %369, %365
  %378 = fadd float %377, %376
  %379 = select i1 %26, float 0xBFD9A4D920000000, float 0xBFB13E0020000000
  %380 = fadd float %379, %370
  %381 = fsub float %380, %370
  %382 = fsub float %380, %381
  %383 = fsub float %370, %382
  %384 = fsub float %379, %381
  %385 = fadd float %384, %383
  %386 = fadd float %385, %378
  %387 = bitcast float %380 to i32
  %388 = and i32 %387, -4096
  %389 = bitcast i32 %388 to float
  %390 = fsub float %380, %389
  %391 = fmul float %380, %131
  %392 = fmul float %368, %389
  %393 = fsub float %392, %391
  %394 = fmul float %390, %368
  %395 = fadd float %393, %394
  %396 = fmul float %369, %389
  %397 = fadd float %396, %395
  %398 = fmul float %369, %390
  %399 = fadd float %398, %397
  %400 = fmul float %386, %131
  %401 = fadd float %400, %399
  %402 = select i1 %26, float 0x3FEA51A640000000, float 0x3FD4A34CC0000000
  %403 = fadd float %402, %391
  %404 = fsub float %403, %391
  %405 = fsub float %403, %404
  %406 = fsub float %391, %405
  %407 = fsub float %402, %404
  %408 = fadd float %407, %406
  %409 = fadd float %408, %401
  %410 = bitcast float %403 to i32
  %411 = and i32 %410, -4096
  %412 = bitcast i32 %411 to float
  %413 = fsub float %403, %412
  %414 = fmul float %403, %131
  %415 = fmul float %368, %412
  %416 = fsub float %415, %414
  %417 = fmul float %413, %368
  %418 = fadd float %416, %417
  %419 = fmul float %369, %412
  %420 = fadd float %419, %418
  %421 = fmul float %369, %413
  %422 = fadd float %421, %420
  %423 = fmul float %409, %131
  %424 = fadd float %422, %423
  %425 = select i1 %26, float 0xBFE2788D00000000, float 0x3FDB0EE600000000
  %426 = fadd float %425, %414
  %427 = fsub float %426, %414
  %428 = fsub float %426, %427
  %429 = fsub float %414, %428
  %430 = fsub float %425, %427
  %431 = fadd float %430, %429
  %432 = fadd float %431, %424
  %433 = bitcast float %426 to i32
  %434 = and i32 %433, -4096
  %435 = bitcast i32 %434 to float
  %436 = fsub float %426, %435
  %437 = fmul float %426, %131
  %438 = fmul float %368, %435
  %439 = fsub float %438, %437
  %440 = fmul float %436, %368
  %441 = fadd float %439, %440
  %442 = fmul float %369, %435
  %443 = fadd float %442, %441
  %444 = fmul float %369, %436
  %445 = fadd float %444, %443
  %446 = fmul float %432, %131
  %447 = fadd float %445, %446
  %448 = insertelement <2 x float> undef, float %437, i32 0
  %449 = insertelement <2 x float> %448, float %447, i32 1
  %450 = select i1 %27, <2 x float> %361, <2 x float> %449
  br i1 %27, label %451, label %461

; <label>:451:                                    ; preds = %127
  %452 = fadd float %370, 1.000000e+00
  %453 = fsub float %452, %370
  %454 = fsub float %452, %453
  %455 = fsub float %370, %454
  %456 = fsub float 1.000000e+00, %453
  %457 = fadd float %456, %455
  %458 = fadd float %457, %378
  %459 = insertelement <2 x float> undef, float %452, i32 0
  %460 = insertelement <2 x float> %459, float %458, i32 1
  br label %461

; <label>:461:                                    ; preds = %127, %451
  %462 = phi <2 x float> [ %460, %451 ], [ <float 1.000000e+00, float 0.000000e+00>, %127 ]
  br i1 %5, label %481, label %463

; <label>:463:                                    ; preds = %461
  br i1 %6, label %464, label %478

; <label>:464:                                    ; preds = %463
  %465 = extractelement <2 x float> %450, i32 0
  %466 = fsub float -0.000000e+00, %465
  %467 = extractelement <2 x float> %450, i32 1
  %468 = fsub float 0x3FF250D040000000, %465
  %469 = fadd float %468, 0xBFF250D040000000
  %470 = fsub float %468, %469
  %471 = fsub float 0x3FF250D040000000, %470
  %472 = fsub float %466, %469
  %473 = fadd float %472, %471
  %474 = fsub float 0x3E61CF4380000000, %467
  %475 = fadd float %474, %473
  %476 = insertelement <2 x float> undef, float %468, i32 0
  %477 = insertelement <2 x float> %476, float %475, i32 1
  br label %478

; <label>:478:                                    ; preds = %463, %464
  %479 = phi <2 x float> [ %450, %463 ], [ %477, %464 ]
  %480 = select i1 %6, <2 x float> %96, <2 x float> %462
  br label %481

; <label>:481:                                    ; preds = %461, %478
  %482 = phi <2 x float> [ %479, %478 ], [ <float 0x4044CB5EC0000000, float 0x3EBE152CA0000000>, %461 ]
  %483 = phi <2 x float> [ %480, %478 ], [ <float 1.000000e+00, float 0.000000e+00>, %461 ]
  br i1 %6, label %484, label %635

; <label>:484:                                    ; preds = %481
  %485 = fpext float %0 to double
  %486 = fmul double %485, 0x3F30000000000000
  %487 = fptosi double %486 to i32
  %488 = sitofp i32 %487 to float
  %489 = fmul float %488, 4.096000e+03
  %490 = fsub float %0, %489
  %491 = fmul float %490, 4.000000e+00
  %492 = fptosi float %491 to i32
  %493 = fcmp uge float %491, 0.000000e+00
  %494 = zext i1 %493 to i32
  %495 = add nsw i32 %494, %492
  %496 = and i32 %495, -2
  %497 = and i32 %495, 2
  %498 = icmp ne i32 %497, 0
  %499 = sitofp i32 %496 to float
  %500 = fsub float %491, %499
  %501 = fmul float %500, %500
  %502 = bitcast float %500 to i32
  %503 = and i32 %502, -4096
  %504 = bitcast i32 %503 to float
  %505 = fsub float %500, %504
  %506 = fmul float %504, %504
  %507 = fsub float %506, %501
  %508 = fmul float %505, %504
  %509 = fadd float %508, %507
  %510 = fadd float %508, %509
  %511 = fmul float %505, %505
  %512 = fadd float %511, %510
  %513 = insertelement <2 x float> undef, float %501, i32 0
  %514 = insertelement <2 x float> %513, float %512, i32 1
  %515 = select i1 %498, float 0xBE5A193700000000, float 0x3E94C32E20000000
  %516 = select i1 %498, float 0x3ECE1EB4A0000000, float 0xBF032CC140000000
  %517 = fmul float %515, %501
  %518 = fadd float %516, %517
  %519 = select i1 %498, float 0xBF355D3C00000000, float 0x3F6466BBE0000000
  %520 = fmul float %501, %518
  %521 = fadd float %519, %520
  %522 = fmul float %501, %521
  %523 = select i1 %498, <2 x float> <float 0x3F903C1F00000000, float 0x3DFEE1F000000000>, <2 x float> <float 0xBFB4ABBCE0000000, float 0xBE16F9CCE0000000>
  %524 = extractelement <2 x float> %523, i32 0
  %525 = fadd float %524, %522
  %526 = fsub float %525, %522
  %527 = fsub float %525, %526
  %528 = fsub float %522, %527
  %529 = fsub float %524, %526
  %530 = fadd float %529, %528
  %531 = extractelement <2 x float> %523, i32 1
  %532 = fadd float %531, %530
  %533 = bitcast float %501 to i32
  %534 = and i32 %533, -4096
  %535 = bitcast i32 %534 to float
  %536 = fsub float %501, %535
  %537 = bitcast float %525 to i32
  %538 = and i32 %537, -4096
  %539 = bitcast i32 %538 to float
  %540 = fsub float %525, %539
  %541 = fmul float %501, %525
  %542 = fmul float %535, %539
  %543 = fsub float %542, %541
  %544 = fmul float %536, %539
  %545 = fadd float %544, %543
  %546 = fmul float %540, %535
  %547 = fadd float %546, %545
  %548 = fmul float %536, %540
  %549 = fadd float %548, %547
  %550 = fmul float %501, %532
  %551 = fadd float %550, %549
  %552 = fmul float %525, %512
  %553 = fadd float %552, %551
  %554 = select i1 %498, <2 x float> <float 0xBFD3BD3CC0000000, float 0xBE437BD7E0000000>, <2 x float> <float 0x3FE921FB60000000, float 0xBE57781980000000>
  %555 = extractelement <2 x float> %554, i32 0
  %556 = fadd float %555, %541
  %557 = fsub float %556, %541
  %558 = fsub float %556, %557
  %559 = fsub float %541, %558
  %560 = fsub float %555, %557
  %561 = fadd float %560, %559
  %562 = extractelement <2 x float> %554, i32 1
  %563 = fadd float %562, %553
  %564 = fadd float %561, %563
  %565 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %500, i32 0
  %566 = select i1 %498, <2 x float> %514, <2 x float> %565
  %567 = bitcast float %556 to i32
  %568 = and i32 %567, -4096
  %569 = bitcast i32 %568 to float
  %570 = fsub float %556, %569
  %571 = extractelement <2 x float> %566, i32 0
  %572 = bitcast float %571 to i32
  %573 = and i32 %572, -4096
  %574 = bitcast i32 %573 to float
  %575 = fsub float %571, %574
  %576 = fmul float %556, %571
  %577 = fmul float %569, %574
  %578 = fsub float %577, %576
  %579 = fmul float %570, %574
  %580 = fadd float %579, %578
  %581 = fmul float %575, %569
  %582 = fadd float %581, %580
  %583 = fmul float %570, %575
  %584 = fadd float %583, %582
  %585 = extractelement <2 x float> %566, i32 1
  %586 = fmul float %556, %585
  %587 = fadd float %586, %584
  %588 = fmul float %571, %564
  %589 = fadd float %588, %587
  %590 = insertelement <2 x float> undef, float %576, i32 0
  %591 = insertelement <2 x float> %590, float %589, i32 1
  br i1 %498, label %592, label %602

; <label>:592:                                    ; preds = %484
  %593 = fadd float %576, 1.000000e+00
  %594 = fsub float %593, %576
  %595 = fsub float %593, %594
  %596 = fsub float %576, %595
  %597 = fsub float 1.000000e+00, %594
  %598 = fadd float %597, %596
  %599 = fadd float %598, %589
  %600 = insertelement <2 x float> undef, float %593, i32 0
  %601 = insertelement <2 x float> %600, float %599, i32 1
  br label %602

; <label>:602:                                    ; preds = %592, %484
  %603 = phi <2 x float> [ %601, %592 ], [ %591, %484 ]
  %604 = and i32 %495, 4
  %605 = icmp eq i32 %604, 0
  %606 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %603
  %607 = select i1 %605, <2 x float> %603, <2 x float> %606
  %608 = extractelement <2 x float> %462, i32 0
  %609 = bitcast float %608 to i32
  %610 = and i32 %609, -4096
  %611 = bitcast i32 %610 to float
  %612 = fsub float %608, %611
  %613 = extractelement <2 x float> %607, i32 0
  %614 = bitcast float %613 to i32
  %615 = and i32 %614, -4096
  %616 = bitcast i32 %615 to float
  %617 = fsub float %613, %616
  %618 = fmul float %608, %613
  %619 = fmul float %611, %616
  %620 = fsub float %619, %618
  %621 = fmul float %612, %616
  %622 = fadd float %621, %620
  %623 = fmul float %617, %611
  %624 = fadd float %623, %622
  %625 = fmul float %612, %617
  %626 = fadd float %625, %624
  %627 = extractelement <2 x float> %607, i32 1
  %628 = fmul float %608, %627
  %629 = fadd float %628, %626
  %630 = extractelement <2 x float> %462, i32 1
  %631 = fmul float %630, %613
  %632 = fadd float %631, %629
  %633 = insertelement <2 x float> undef, float %618, i32 0
  %634 = insertelement <2 x float> %633, float %632, i32 1
  br label %635

; <label>:635:                                    ; preds = %602, %481
  %636 = phi <2 x float> [ %634, %602 ], [ %108, %481 ]
  %637 = fmul float %0, 0x43B0000000000000
  %638 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %637, i32 0
  %639 = select i1 %6, <2 x float> %636, <2 x float> %96
  %640 = select i1 %5, <2 x float> %638, <2 x float> %639
  %641 = extractelement <2 x float> %640, i32 0
  %642 = fdiv float 1.000000e+00, %641
  %643 = bitcast float %641 to i32
  %644 = and i32 %643, -4096
  %645 = bitcast i32 %644 to float
  %646 = fsub float %641, %645
  %647 = bitcast float %642 to i32
  %648 = and i32 %647, -4096
  %649 = bitcast i32 %648 to float
  %650 = fsub float %642, %649
  %651 = extractelement <2 x float> %483, i32 0
  %652 = bitcast float %651 to i32
  %653 = and i32 %652, -4096
  %654 = bitcast i32 %653 to float
  %655 = fsub float %651, %654
  %656 = fmul float %651, %642
  %657 = fmul float %654, %649
  %658 = fsub float %657, %656
  %659 = fmul float %650, %654
  %660 = fadd float %658, %659
  %661 = fmul float %655, %649
  %662 = fadd float %661, %660
  %663 = fmul float %655, %650
  %664 = fadd float %663, %662
  %665 = fmul float %645, %649
  %666 = fsub float 1.000000e+00, %665
  %667 = fmul float %650, %645
  %668 = fsub float %666, %667
  %669 = fmul float %646, %649
  %670 = fsub float %668, %669
  %671 = extractelement <2 x float> %483, i32 1
  %672 = extractelement <2 x float> %640, i32 1
  %673 = insertelement <2 x float> undef, float %672, i32 0
  %674 = insertelement <2 x float> %673, float %646, i32 1
  %675 = insertelement <2 x float> undef, float %656, i32 0
  %676 = insertelement <2 x float> %675, float %650, i32 1
  %677 = fmul <2 x float> %674, %676
  %678 = insertelement <2 x float> undef, float %671, i32 0
  %679 = insertelement <2 x float> %678, float %670, i32 1
  %680 = fsub <2 x float> %679, %677
  %681 = insertelement <2 x float> undef, float %642, i32 0
  %682 = insertelement <2 x float> %681, float %656, i32 1
  %683 = fmul <2 x float> %682, %680
  %684 = extractelement <2 x float> %683, i32 1
  %685 = fadd float %664, %684
  %686 = extractelement <2 x float> %683, i32 0
  %687 = fadd float %686, %685
  %688 = insertelement <2 x float> %675, float %687, i32 1
  %689 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %482, 0
  %690 = insertvalue { <2 x float>, <2 x float> } %689, <2 x float> %688, 1
  ret { <2 x float>, <2 x float> } %690
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_lgammaf_u10(float) local_unnamed_addr #0 {
  %2 = tail call fastcc { <2 x float>, <2 x float> } @gammafk(float %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %4, i32 0
  %6 = fcmp olt float %5, 0.000000e+00
  %7 = fsub float -0.000000e+00, %5
  %8 = select i1 %6, float %7, float %5
  %9 = extractelement <2 x float> %4, i32 1
  %10 = fsub float -0.000000e+00, %9
  %11 = select i1 %6, float %10, float %9
  %12 = fmul float %8, 0x3FF5555560000000
  %13 = fcmp olt float %12, 0x3BF0000000000000
  %14 = fmul float %12, 0x43F0000000000000
  %15 = select i1 %13, float %14, float %12
  %16 = bitcast float %15 to i32
  %17 = lshr i32 %16, 23
  %18 = and i32 %17, 255
  %19 = select i1 %13, i32 -191, i32 -127
  %20 = add nsw i32 %18, %19
  %21 = shl i32 %20, 23
  %22 = sub i32 1065353216, %21
  %23 = bitcast i32 %22 to float
  %24 = fmul float %8, %23
  %25 = fmul float %11, %23
  %26 = fadd float %24, -1.000000e+00
  %27 = fsub float %26, %24
  %28 = fsub float %26, %27
  %29 = fsub float %24, %28
  %30 = fsub float -1.000000e+00, %27
  %31 = fadd float %30, %29
  %32 = fadd float %25, %31
  %33 = fadd float %24, 1.000000e+00
  %34 = fsub float %33, %24
  %35 = fsub float %33, %34
  %36 = fsub float %24, %35
  %37 = fsub float 1.000000e+00, %34
  %38 = fadd float %37, %36
  %39 = fadd float %25, %38
  %40 = fdiv float 1.000000e+00, %33
  %41 = bitcast float %33 to i32
  %42 = and i32 %41, -4096
  %43 = bitcast i32 %42 to float
  %44 = fsub float %33, %43
  %45 = bitcast float %40 to i32
  %46 = and i32 %45, -4096
  %47 = bitcast i32 %46 to float
  %48 = fsub float %40, %47
  %49 = bitcast float %26 to i32
  %50 = and i32 %49, -4096
  %51 = bitcast i32 %50 to float
  %52 = fsub float %26, %51
  %53 = fmul float %26, %40
  %54 = fmul float %51, %47
  %55 = fsub float %54, %53
  %56 = fmul float %48, %51
  %57 = fadd float %55, %56
  %58 = fmul float %52, %47
  %59 = fadd float %58, %57
  %60 = fmul float %52, %48
  %61 = fadd float %60, %59
  %62 = fmul float %43, %47
  %63 = fsub float 1.000000e+00, %62
  %64 = fmul float %48, %43
  %65 = fsub float %63, %64
  %66 = fmul float %44, %47
  %67 = fsub float %65, %66
  %68 = fmul float %44, %48
  %69 = fsub float %67, %68
  %70 = fmul float %53, %69
  %71 = fadd float %61, %70
  %72 = fmul float %53, %39
  %73 = fsub float %32, %72
  %74 = fmul float %40, %73
  %75 = fadd float %74, %71
  %76 = bitcast float %53 to i32
  %77 = and i32 %76, -4096
  %78 = bitcast i32 %77 to float
  %79 = fsub float %53, %78
  %80 = fmul float %53, %53
  %81 = fmul float %78, %78
  %82 = fsub float %81, %80
  %83 = fadd float %78, %78
  %84 = fmul float %83, %79
  %85 = fadd float %82, %84
  %86 = fmul float %79, %79
  %87 = fadd float %86, %85
  %88 = fadd float %75, %75
  %89 = fmul float %53, %88
  %90 = fadd float %87, %89
  %91 = fmul float %80, 0x3FCEA0D200000000
  %92 = fadd float %91, 0x3FD2406C80000000
  %93 = fmul float %80, %92
  %94 = fadd float %93, 0x3FD999B240000000
  %95 = fmul float %80, %94
  %96 = fadd float %95, 0x3FE5555560000000
  %97 = sitofp i32 %20 to float
  %98 = bitcast float %97 to i32
  %99 = and i32 %98, -4096
  %100 = bitcast i32 %99 to float
  %101 = fsub float %97, %100
  %102 = fmul float %97, 0x3FE62E4300000000
  %103 = fmul float %100, 0x3FE62E0000000000
  %104 = fsub float %103, %102
  %105 = fmul float %100, 0x3F00C00000000000
  %106 = fadd float %105, %104
  %107 = fmul float %101, 0x3FE62E0000000000
  %108 = fadd float %107, %106
  %109 = fmul float %101, 0x3F00C00000000000
  %110 = fadd float %109, %108
  %111 = fmul float %97, 0x3E205C6100000000
  %112 = fsub float %110, %111
  %113 = fmul float %53, 2.000000e+00
  %114 = fmul float %75, 2.000000e+00
  %115 = fadd float %102, %113
  %116 = fsub float %102, %115
  %117 = fadd float %113, %116
  %118 = fadd float %112, %117
  %119 = fadd float %118, %114
  %120 = bitcast float %80 to i32
  %121 = and i32 %120, -4096
  %122 = bitcast i32 %121 to float
  %123 = fsub float %80, %122
  %124 = fmul float %53, %80
  %125 = fmul float %78, %122
  %126 = fsub float %125, %124
  %127 = fmul float %123, %78
  %128 = fadd float %127, %126
  %129 = fmul float %79, %122
  %130 = fadd float %129, %128
  %131 = fmul float %79, %123
  %132 = fadd float %131, %130
  %133 = fmul float %80, %75
  %134 = fadd float %132, %133
  %135 = fmul float %53, %90
  %136 = fadd float %134, %135
  %137 = bitcast float %124 to i32
  %138 = and i32 %137, -4096
  %139 = bitcast i32 %138 to float
  %140 = fsub float %124, %139
  %141 = bitcast float %96 to i32
  %142 = and i32 %141, -4096
  %143 = bitcast i32 %142 to float
  %144 = fsub float %96, %143
  %145 = fmul float %124, %96
  %146 = fmul float %139, %143
  %147 = fsub float %146, %145
  %148 = fmul float %140, %143
  %149 = fadd float %148, %147
  %150 = fmul float %144, %139
  %151 = fadd float %150, %149
  %152 = fmul float %140, %144
  %153 = fadd float %152, %151
  %154 = fmul float %96, %136
  %155 = fadd float %153, %154
  %156 = fadd float %115, %145
  %157 = fsub float %115, %156
  %158 = fadd float %145, %157
  %159 = fadd float %158, %119
  %160 = fadd float %159, %155
  %161 = extractelement <2 x float> %3, i32 0
  %162 = fadd float %161, %156
  %163 = fsub float %162, %161
  %164 = fsub float %162, %163
  %165 = fsub float %161, %164
  %166 = fsub float %156, %163
  %167 = fadd float %166, %165
  %168 = extractelement <2 x float> %3, i32 1
  %169 = fadd float %168, %160
  %170 = fadd float %167, %169
  %171 = fadd float %162, %170
  %172 = fcmp une float %0, 0x7FF0000000000000
  %173 = fcmp une float %0, 0xFFF0000000000000
  %174 = and i1 %173, %172
  br i1 %174, label %175, label %186

; <label>:175:                                    ; preds = %1
  %176 = fcmp ugt float %0, 0.000000e+00
  br i1 %176, label %181, label %177

; <label>:177:                                    ; preds = %175
  %178 = fptosi float %0 to i32
  %179 = sitofp i32 %178 to float
  %180 = fcmp une float %179, %0
  br i1 %180, label %181, label %186

; <label>:181:                                    ; preds = %177, %175
  %182 = fcmp uno float %0, 0.000000e+00
  %183 = fcmp ord float %171, 0.000000e+00
  %184 = or i1 %183, %182
  %185 = select i1 %184, float %171, float 0x7FF0000000000000
  ret float %185

; <label>:186:                                    ; preds = %177, %1
  ret float 0x7FF0000000000000
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_erff_u10(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 0x3FF19999A0000000
  %6 = fcmp olt float %4, 0x4003333340000000
  %7 = fcmp olt float %4, 4.000000e+00
  %8 = fmul float %4, %4
  %9 = select i1 %5, float %8, float %4
  %10 = select i1 %6, float 0xBEF2CC2800000000, float 0xBEE3E9FF00000000
  %11 = select i1 %5, float 0x3F12958B20000000, float %10
  %12 = select i1 %6, float 0x3F39CE4080000000, float 0x3F30433580000000
  %13 = select i1 %5, float 0xBF49748820000000, float %12
  %14 = fmul float %9, %11
  %15 = fadd float %13, %14
  %16 = select i1 %6, float 0xBF702D0440000000, float 0xBF67E7DC40000000
  %17 = select i1 %5, float 0x3F75221700000000, float %16
  %18 = fmul float %9, %15
  %19 = fadd float %17, %18
  %20 = select i1 %6, float 0x3F990AAA40000000, float 0x3F951765C0000000
  %21 = select i1 %5, float 0xBF9B7B5F20000000, float %20
  %22 = fmul float %9, %19
  %23 = fadd float %21, %22
  %24 = select i1 %6, float 0xBFBB6AE160000000, float 0xBFB9594F20000000
  %25 = select i1 %5, float 0x3FBCE28B80000000, float %24
  %26 = fmul float %9, %23
  %27 = fadd float %25, %26
  %28 = bitcast float %27 to i32
  %29 = and i32 %28, -4096
  %30 = bitcast i32 %29 to float
  %31 = fsub float %27, %30
  %32 = bitcast float %9 to i32
  %33 = and i32 %32, -4096
  %34 = bitcast i32 %33 to float
  %35 = fsub float %9, %34
  %36 = fmul float %9, %27
  %37 = fmul float %34, %30
  %38 = fsub float %37, %36
  %39 = fmul float %31, %34
  %40 = fadd float %39, %38
  %41 = fmul float %35, %30
  %42 = fadd float %41, %40
  %43 = fmul float %35, %31
  %44 = fadd float %43, %42
  %45 = or i1 %5, %6
  %46 = select i1 %5, <2 x float> <float 0xBFD8127240000000, float 0xBE309A2820000000>, <2 x float> <float 0xBFE44E8D60000000, float 0xBE42A3F940000000>
  %47 = select i1 %45, <2 x float> %46, <2 x float> <float 0xBFE4985B00000000, float 0x3E5F482820000000>
  %48 = extractelement <2 x float> %47, i32 0
  %49 = fadd float %48, %36
  %50 = fsub float %49, %36
  %51 = fsub float %49, %50
  %52 = fsub float %36, %51
  %53 = fsub float %48, %50
  %54 = fadd float %53, %52
  %55 = extractelement <2 x float> %47, i32 1
  %56 = fadd float %55, %44
  %57 = fadd float %54, %56
  %58 = bitcast float %49 to i32
  %59 = and i32 %58, -4096
  %60 = bitcast i32 %59 to float
  %61 = fsub float %49, %60
  %62 = fmul float %9, %49
  %63 = fmul float %34, %60
  %64 = fsub float %63, %62
  %65 = fmul float %61, %34
  %66 = fadd float %64, %65
  %67 = fmul float %35, %60
  %68 = fadd float %67, %66
  %69 = fmul float %35, %61
  %70 = fadd float %69, %68
  %71 = fmul float %9, %57
  %72 = fadd float %70, %71
  %73 = select i1 %5, <2 x float> <float 0x3FF20DD740000000, float 0x3E6CD2F540000000>, <2 x float> <float 0xBFF20F8F20000000, float 0x3E688F16C0000000>
  %74 = select i1 %45, <2 x float> %73, <2 x float> <float 0xBFF1FE6C20000000, float 0xBE66E4CF00000000>
  %75 = extractelement <2 x float> %74, i32 0
  %76 = fadd float %75, %62
  %77 = fsub float %76, %62
  %78 = fsub float %76, %77
  %79 = fsub float %62, %78
  %80 = fsub float %75, %77
  %81 = fadd float %80, %79
  %82 = extractelement <2 x float> %74, i32 1
  %83 = fadd float %82, %72
  %84 = fadd float %81, %83
  %85 = bitcast float %76 to i32
  %86 = and i32 %85, -4096
  %87 = bitcast i32 %86 to float
  %88 = fsub float %76, %87
  %89 = and i32 %2, 2147479552
  %90 = bitcast i32 %89 to float
  %91 = fsub float %4, %90
  %92 = fmul float %76, %4
  %93 = fmul float %90, %87
  %94 = fsub float %93, %92
  %95 = fmul float %88, %90
  %96 = fadd float %94, %95
  %97 = fmul float %91, %87
  %98 = fadd float %97, %96
  %99 = fmul float %91, %88
  %100 = fadd float %99, %98
  %101 = fmul float %84, %4
  %102 = fadd float %100, %101
  %103 = insertelement <2 x float> undef, float %92, i32 0
  %104 = insertelement <2 x float> %103, float %102, i32 1
  br i1 %5, label %258, label %105

; <label>:105:                                    ; preds = %1
  %106 = fadd float %92, %102
  %107 = fmul float %106, 0x3FF7154760000000
  %108 = fcmp olt float %107, 0.000000e+00
  %109 = select i1 %108, float -5.000000e-01, float 5.000000e-01
  %110 = fadd float %107, %109
  %111 = fptosi float %110 to i32
  %112 = sitofp i32 %111 to float
  %113 = fptosi float %112 to i32
  %114 = sitofp i32 %113 to float
  %115 = fmul float %114, 0xBFE62E4000000000
  %116 = fadd float %92, %115
  %117 = fsub float %116, %92
  %118 = fsub float %116, %117
  %119 = fsub float %92, %118
  %120 = fsub float %115, %117
  %121 = fadd float %120, %119
  %122 = fadd float %102, %121
  %123 = fmul float %114, 0xBEB7F7D1C0000000
  %124 = fadd float %123, %116
  %125 = fsub float %124, %116
  %126 = fsub float %124, %125
  %127 = fsub float %116, %126
  %128 = fsub float %123, %125
  %129 = fadd float %128, %127
  %130 = fadd float %122, %129
  %131 = fmul float %124, 0x3F29F6FFE0000000
  %132 = fadd float %131, 0x3F56D7EF80000000
  %133 = fmul float %124, %132
  %134 = fadd float %133, 0x3F811121A0000000
  %135 = fmul float %124, %134
  %136 = fadd float %135, 0x3FA5554B80000000
  %137 = bitcast float %124 to i32
  %138 = and i32 %137, -4096
  %139 = bitcast i32 %138 to float
  %140 = fsub float %124, %139
  %141 = bitcast float %136 to i32
  %142 = and i32 %141, -4096
  %143 = bitcast i32 %142 to float
  %144 = fsub float %136, %143
  %145 = fmul float %124, %136
  %146 = fmul float %139, %143
  %147 = fsub float %146, %145
  %148 = fmul float %140, %143
  %149 = fadd float %148, %147
  %150 = fmul float %144, %139
  %151 = fadd float %150, %149
  %152 = fmul float %140, %144
  %153 = fadd float %152, %151
  %154 = fmul float %130, %136
  %155 = fadd float %154, %153
  %156 = fadd float %145, 0x3FC5555540000000
  %157 = fsub float %156, %145
  %158 = fsub float %156, %157
  %159 = fsub float %145, %158
  %160 = fsub float 0x3FC5555540000000, %157
  %161 = fadd float %160, %159
  %162 = fadd float %161, %155
  %163 = bitcast float %156 to i32
  %164 = and i32 %163, -4096
  %165 = bitcast i32 %164 to float
  %166 = fsub float %156, %165
  %167 = fmul float %124, %156
  %168 = fmul float %139, %165
  %169 = fsub float %168, %167
  %170 = fmul float %140, %165
  %171 = fadd float %170, %169
  %172 = fmul float %166, %139
  %173 = fadd float %172, %171
  %174 = fmul float %140, %166
  %175 = fadd float %174, %173
  %176 = fmul float %124, %162
  %177 = fadd float %175, %176
  %178 = fmul float %130, %156
  %179 = fadd float %178, %177
  %180 = fadd float %167, 5.000000e-01
  %181 = fsub float %180, %167
  %182 = fsub float %180, %181
  %183 = fsub float %167, %182
  %184 = fsub float 5.000000e-01, %181
  %185 = fadd float %184, %183
  %186 = fadd float %185, %179
  %187 = fmul float %124, %124
  %188 = fmul float %139, %139
  %189 = fsub float %188, %187
  %190 = fadd float %139, %139
  %191 = fmul float %190, %140
  %192 = fadd float %189, %191
  %193 = fmul float %140, %140
  %194 = fadd float %193, %192
  %195 = fadd float %130, %130
  %196 = fmul float %124, %195
  %197 = fadd float %196, %194
  %198 = bitcast float %187 to i32
  %199 = and i32 %198, -4096
  %200 = bitcast i32 %199 to float
  %201 = fsub float %187, %200
  %202 = bitcast float %180 to i32
  %203 = and i32 %202, -4096
  %204 = bitcast i32 %203 to float
  %205 = fsub float %180, %204
  %206 = fmul float %187, %180
  %207 = fmul float %200, %204
  %208 = fsub float %207, %206
  %209 = fmul float %201, %204
  %210 = fadd float %209, %208
  %211 = fmul float %205, %200
  %212 = fadd float %211, %210
  %213 = fmul float %201, %205
  %214 = fadd float %213, %212
  %215 = fmul float %187, %186
  %216 = fadd float %214, %215
  %217 = fmul float %197, %180
  %218 = fadd float %217, %216
  %219 = fadd float %124, %206
  %220 = fsub float %219, %124
  %221 = fsub float %219, %220
  %222 = fsub float %124, %221
  %223 = fsub float %206, %220
  %224 = fadd float %223, %222
  %225 = fadd float %130, %218
  %226 = fadd float %224, %225
  %227 = fadd float %219, 1.000000e+00
  %228 = fadd float %227, -1.000000e+00
  %229 = fsub float %227, %228
  %230 = fsub float 1.000000e+00, %229
  %231 = fsub float %219, %228
  %232 = fadd float %231, %230
  %233 = fadd float %232, %226
  %234 = ashr i32 %113, 1
  %235 = shl i32 %234, 23
  %236 = add i32 %235, 1065353216
  %237 = bitcast i32 %236 to float
  %238 = fmul float %227, %237
  %239 = sub nsw i32 %113, %234
  %240 = shl i32 %239, 23
  %241 = add i32 %240, 1065353216
  %242 = bitcast i32 %241 to float
  %243 = fmul float %238, %242
  %244 = fmul float %233, %237
  %245 = fmul float %244, %242
  %246 = fcmp olt float %92, -1.040000e+02
  %247 = insertelement <2 x float> undef, float %243, i32 0
  %248 = insertelement <2 x float> %247, float %245, i32 1
  %249 = select i1 %246, <2 x float> zeroinitializer, <2 x float> %248
  %250 = extractelement <2 x float> %249, i32 0
  %251 = extractelement <2 x float> %249, i32 1
  %252 = fsub float 1.000000e+00, %250
  %253 = fsub float 1.000000e+00, %252
  %254 = fsub float %253, %250
  %255 = fsub float %254, %251
  %256 = insertelement <2 x float> undef, float %252, i32 0
  %257 = insertelement <2 x float> %256, float %255, i32 1
  br label %258

; <label>:258:                                    ; preds = %1, %105
  %259 = phi <2 x float> [ %257, %105 ], [ %104, %1 ]
  br i1 %7, label %260, label %265

; <label>:260:                                    ; preds = %258
  %261 = extractelement <2 x float> %259, i32 0
  %262 = extractelement <2 x float> %259, i32 1
  %263 = fadd float %261, %262
  %264 = bitcast float %263 to i32
  br label %265

; <label>:265:                                    ; preds = %258, %260
  %266 = phi i32 [ %264, %260 ], [ 1065353216, %258 ]
  %267 = and i32 %2, -2147483648
  %268 = xor i32 %266, %267
  %269 = bitcast i32 %268 to float
  %270 = fcmp ord float %4, 0.000000e+00
  %271 = select i1 %270, float %269, float 0x7FF8000000000000
  ret float %271
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @Sleef_erfcf_u15(float) local_unnamed_addr #0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 2147483647
  %4 = bitcast i32 %3 to float
  %5 = fcmp olt float %4, 1.000000e+00
  %6 = fcmp olt float %4, 0x40019999A0000000
  %7 = fcmp olt float %4, 0x4011333340000000
  %8 = fcmp olt float %4, 0x4024333340000000
  br i1 %6, label %9, label %14

; <label>:9:                                      ; preds = %1
  %10 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %4, i32 0
  %11 = and i32 %2, 2147479552
  %12 = bitcast i32 %11 to float
  %13 = fsub float %4, %12
  br label %45

; <label>:14:                                     ; preds = %1
  %15 = fdiv float 1.000000e+00, %4
  %16 = and i32 %2, 2147479552
  %17 = bitcast i32 %16 to float
  %18 = fsub float %4, %17
  %19 = bitcast float %15 to i32
  %20 = and i32 %19, -4096
  %21 = bitcast i32 %20 to float
  %22 = fsub float %15, %21
  %23 = fsub float %21, %15
  %24 = fadd float %23, %22
  %25 = fmul float %21, 0.000000e+00
  %26 = fadd float %25, %24
  %27 = fmul float %22, 0.000000e+00
  %28 = fadd float %27, %26
  %29 = fmul float %17, %21
  %30 = fsub float 1.000000e+00, %29
  %31 = fmul float %22, %17
  %32 = fsub float %30, %31
  %33 = fmul float %18, %21
  %34 = fsub float %32, %33
  %35 = fmul float %18, %22
  %36 = fsub float %34, %35
  %37 = fmul float %15, %36
  %38 = fadd float %28, %37
  %39 = fmul float %15, 0.000000e+00
  %40 = fsub float 0.000000e+00, %39
  %41 = fmul float %15, %40
  %42 = fadd float %41, %38
  %43 = insertelement <2 x float> undef, float %15, i32 0
  %44 = insertelement <2 x float> %43, float %42, i32 1
  br label %45

; <label>:45:                                     ; preds = %9, %14
  %46 = phi float [ %13, %9 ], [ %18, %14 ]
  %47 = phi float [ %12, %9 ], [ %17, %14 ]
  %48 = phi <2 x float> [ %10, %9 ], [ %44, %14 ]
  %49 = or i1 %5, %6
  %50 = select i1 %5, float 0xBF16A4E440000000, float 0xBEDA28E740000000
  %51 = select i1 %7, float 0xBFD8C3CBA0000000, float 0x3FF1D87320000000
  %52 = select i1 %49, float %50, float %51
  %53 = extractelement <2 x float> %48, i32 0
  %54 = select i1 %5, float 0x3F43A94DE0000000, float 0x3F0E2547A0000000
  %55 = select i1 %7, float 0x3FF49BF6E0000000, float 0xBFEE417520000000
  %56 = select i1 %49, float %54, float %55
  %57 = fmul float %52, %53
  %58 = fadd float %56, %57
  %59 = select i1 %5, float 0xBF5B4A77A0000000, float 0x3ED92D8340000000
  %60 = select i1 %7, float 0xBFFD11A040000000, float 0xBFD7787020000000
  %61 = select i1 %49, float %59, float %60
  %62 = fmul float %53, %58
  %63 = fadd float %61, %62
  %64 = select i1 %5, float 0x3F27878B80000000, float 0xBF675B0E80000000
  %65 = select i1 %7, float 0x3FF3FC85A0000000, float 0x3FE6E5EB60000000
  %66 = select i1 %49, float %64, float %65
  %67 = fmul float %53, %63
  %68 = fadd float %66, %67
  %69 = select i1 %5, float 0x3F9399B6E0000000, float 0x3F9725D000000000
  %70 = select i1 %7, float 0xBFC10266E0000000, float 0xBF89DD7B20000000
  %71 = select i1 %49, float %69, float %70
  %72 = fmul float %53, %68
  %73 = fadd float %71, %72
  %74 = bitcast float %53 to i32
  %75 = and i32 %74, -4096
  %76 = bitcast i32 %75 to float
  %77 = fsub float %53, %76
  %78 = bitcast float %73 to i32
  %79 = and i32 %78, -4096
  %80 = bitcast i32 %79 to float
  %81 = fsub float %73, %80
  %82 = fmul float %53, %73
  %83 = fmul float %76, %80
  %84 = fsub float %83, %82
  %85 = fmul float %77, %80
  %86 = fadd float %85, %84
  %87 = fmul float %81, %76
  %88 = fadd float %87, %86
  %89 = fmul float %77, %81
  %90 = fadd float %89, %88
  %91 = extractelement <2 x float> %48, i32 1
  %92 = fmul float %91, %73
  %93 = fadd float %92, %90
  %94 = select i1 %5, <2 x float> <float 0xBFBA4F7C60000000, float 0xBE1CDE0840000000>, <2 x float> <float 0xBFBAF18180000000, float 0x3E2E1E43A0000000>
  %95 = or i1 %7, %49
  %96 = select i1 %49, <2 x float> %94, <2 x float> <float 0xBFDEDF12C0000000, float 0xBDE35EC900000000>
  %97 = select i1 %95, <2 x float> %96, <2 x float> <float 0xBFDFEEFC60000000, float 0xBE418FFA80000000>
  %98 = extractelement <2 x float> %97, i32 0
  %99 = fadd float %98, %82
  %100 = fsub float %99, %82
  %101 = fsub float %99, %100
  %102 = fsub float %82, %101
  %103 = fsub float %98, %100
  %104 = fadd float %103, %102
  %105 = extractelement <2 x float> %97, i32 1
  %106 = fadd float %105, %93
  %107 = fadd float %104, %106
  %108 = bitcast float %99 to i32
  %109 = and i32 %108, -4096
  %110 = bitcast i32 %109 to float
  %111 = fsub float %99, %110
  %112 = fmul float %53, %99
  %113 = fmul float %76, %110
  %114 = fsub float %113, %112
  %115 = fmul float %111, %76
  %116 = fadd float %115, %114
  %117 = fmul float %77, %110
  %118 = fadd float %117, %116
  %119 = fmul float %77, %111
  %120 = fadd float %119, %118
  %121 = fmul float %91, %99
  %122 = fadd float %121, %120
  %123 = fmul float %53, %107
  %124 = fadd float %122, %123
  %125 = select i1 %5, <2 x float> <float 0xBFE45F2FE0000000, float 0x3E5AE7E1A0000000>, <2 x float> <float 0xBFE456E9A0000000, float 0xBE50C52E80000000>
  %126 = select i1 %49, <2 x float> %125, <2 x float> <float 0xBF56074020000000, float 0x3DCEFD2820000000>
  %127 = select i1 %95, <2 x float> %126, <2 x float> <float 0xBF08B45540000000, float 0xBD7B31A100000000>
  %128 = extractelement <2 x float> %127, i32 0
  %129 = fadd float %128, %112
  %130 = fsub float %129, %112
  %131 = fsub float %129, %130
  %132 = fsub float %112, %131
  %133 = fsub float %128, %130
  %134 = fadd float %133, %132
  %135 = extractelement <2 x float> %127, i32 1
  %136 = fadd float %135, %124
  %137 = fadd float %134, %136
  %138 = bitcast float %129 to i32
  %139 = and i32 %138, -4096
  %140 = bitcast i32 %139 to float
  %141 = fsub float %129, %140
  %142 = fmul float %53, %129
  %143 = fmul float %76, %140
  %144 = fsub float %143, %142
  %145 = fmul float %141, %76
  %146 = fadd float %145, %144
  %147 = fmul float %77, %140
  %148 = fadd float %147, %146
  %149 = fmul float %77, %141
  %150 = fadd float %149, %148
  %151 = fmul float %91, %129
  %152 = fadd float %151, %150
  %153 = fmul float %53, %137
  %154 = fadd float %152, %153
  %155 = select i1 %5, <2 x float> <float 0xBFF20DD760000000, float 0x3E69AD1700000000>, <2 x float> <float 0xBFF20E94C0000000, float 0xBE68ACFC60000000>
  %156 = select i1 %49, <2 x float> %155, <2 x float> <float 0xBFE25071A0000000, float 0x3E5A46B5C0000000>
  %157 = select i1 %95, <2 x float> %156, <2 x float> <float 0xBFE250CE60000000, float 0x3E20AB5520000000>
  %158 = extractelement <2 x float> %157, i32 0
  %159 = fadd float %158, %142
  %160 = fsub float %159, %142
  %161 = fsub float %159, %160
  %162 = fsub float %142, %161
  %163 = fsub float %158, %160
  %164 = fadd float %163, %162
  %165 = extractelement <2 x float> %157, i32 1
  %166 = fadd float %165, %154
  %167 = fadd float %164, %166
  %168 = insertelement <2 x float> undef, float %159, i32 0
  %169 = insertelement <2 x float> %168, float %167, i32 1
  %170 = fsub float -0.000000e+00, %4
  %171 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %170, i32 0
  %172 = select i1 %6, <2 x float> %169, <2 x float> %171
  %173 = extractelement <2 x float> %172, i32 0
  %174 = bitcast float %173 to i32
  %175 = and i32 %174, -4096
  %176 = bitcast i32 %175 to float
  %177 = fsub float %173, %176
  %178 = fmul float %173, %4
  %179 = fmul float %47, %176
  %180 = fsub float %179, %178
  %181 = fmul float %177, %47
  %182 = fadd float %180, %181
  %183 = fmul float %46, %176
  %184 = fadd float %183, %182
  %185 = fmul float %46, %177
  %186 = fadd float %185, %184
  %187 = extractelement <2 x float> %172, i32 1
  %188 = fmul float %187, %4
  %189 = fadd float %188, %186
  %190 = insertelement <2 x float> undef, float %178, i32 0
  %191 = insertelement <2 x float> %190, float %189, i32 1
  br i1 %6, label %203, label %192

; <label>:192:                                    ; preds = %45
  %193 = fadd float %159, %178
  %194 = fsub float %193, %178
  %195 = fsub float %193, %194
  %196 = fsub float %178, %195
  %197 = fsub float %159, %194
  %198 = fadd float %197, %196
  %199 = fadd float %167, %189
  %200 = fadd float %198, %199
  %201 = insertelement <2 x float> undef, float %193, i32 0
  %202 = insertelement <2 x float> %201, float %200, i32 1
  br label %203

; <label>:203:                                    ; preds = %45, %192
  %204 = phi <2 x float> [ %202, %192 ], [ %191, %45 ]
  %205 = extractelement <2 x float> %204, i32 0
  %206 = extractelement <2 x float> %204, i32 1
  %207 = fadd float %205, %206
  %208 = fmul float %207, 0x3FF7154760000000
  %209 = fcmp olt float %208, 0.000000e+00
  %210 = select i1 %209, float -5.000000e-01, float 5.000000e-01
  %211 = fadd float %208, %210
  %212 = fptosi float %211 to i32
  %213 = sitofp i32 %212 to float
  %214 = fptosi float %213 to i32
  %215 = sitofp i32 %214 to float
  %216 = fmul float %215, 0xBFE62E4000000000
  %217 = fadd float %205, %216
  %218 = fsub float %217, %205
  %219 = fsub float %217, %218
  %220 = fsub float %205, %219
  %221 = fsub float %216, %218
  %222 = fadd float %221, %220
  %223 = fadd float %206, %222
  %224 = fmul float %215, 0xBEB7F7D1C0000000
  %225 = fadd float %224, %217
  %226 = fsub float %225, %217
  %227 = fsub float %225, %226
  %228 = fsub float %217, %227
  %229 = fsub float %224, %226
  %230 = fadd float %229, %228
  %231 = fadd float %223, %230
  %232 = fmul float %225, 0x3F29F6FFE0000000
  %233 = fadd float %232, 0x3F56D7EF80000000
  %234 = fmul float %225, %233
  %235 = fadd float %234, 0x3F811121A0000000
  %236 = fmul float %225, %235
  %237 = fadd float %236, 0x3FA5554B80000000
  %238 = bitcast float %225 to i32
  %239 = and i32 %238, -4096
  %240 = bitcast i32 %239 to float
  %241 = fsub float %225, %240
  %242 = bitcast float %237 to i32
  %243 = and i32 %242, -4096
  %244 = bitcast i32 %243 to float
  %245 = fsub float %237, %244
  %246 = fmul float %225, %237
  %247 = fmul float %240, %244
  %248 = fsub float %247, %246
  %249 = fmul float %241, %244
  %250 = fadd float %249, %248
  %251 = fmul float %245, %240
  %252 = fadd float %251, %250
  %253 = fmul float %241, %245
  %254 = fadd float %253, %252
  %255 = fmul float %231, %237
  %256 = fadd float %255, %254
  %257 = fadd float %246, 0x3FC5555540000000
  %258 = fsub float %257, %246
  %259 = fsub float %257, %258
  %260 = fsub float %246, %259
  %261 = fsub float 0x3FC5555540000000, %258
  %262 = fadd float %261, %260
  %263 = fadd float %262, %256
  %264 = bitcast float %257 to i32
  %265 = and i32 %264, -4096
  %266 = bitcast i32 %265 to float
  %267 = fsub float %257, %266
  %268 = fmul float %225, %257
  %269 = fmul float %240, %266
  %270 = fsub float %269, %268
  %271 = fmul float %241, %266
  %272 = fadd float %271, %270
  %273 = fmul float %267, %240
  %274 = fadd float %273, %272
  %275 = fmul float %241, %267
  %276 = fadd float %275, %274
  %277 = fmul float %225, %263
  %278 = fadd float %276, %277
  %279 = fmul float %231, %257
  %280 = fadd float %279, %278
  %281 = fadd float %268, 5.000000e-01
  %282 = fsub float %281, %268
  %283 = fsub float %281, %282
  %284 = fsub float %268, %283
  %285 = fsub float 5.000000e-01, %282
  %286 = fadd float %285, %284
  %287 = fadd float %286, %280
  %288 = fmul float %225, %225
  %289 = fmul float %240, %240
  %290 = fsub float %289, %288
  %291 = fadd float %240, %240
  %292 = fmul float %291, %241
  %293 = fadd float %290, %292
  %294 = fmul float %241, %241
  %295 = fadd float %294, %293
  %296 = fadd float %231, %231
  %297 = fmul float %225, %296
  %298 = fadd float %297, %295
  %299 = bitcast float %288 to i32
  %300 = and i32 %299, -4096
  %301 = bitcast i32 %300 to float
  %302 = fsub float %288, %301
  %303 = bitcast float %281 to i32
  %304 = and i32 %303, -4096
  %305 = bitcast i32 %304 to float
  %306 = fsub float %281, %305
  %307 = fmul float %288, %281
  %308 = fmul float %301, %305
  %309 = fsub float %308, %307
  %310 = fmul float %302, %305
  %311 = fadd float %310, %309
  %312 = fmul float %306, %301
  %313 = fadd float %312, %311
  %314 = fmul float %302, %306
  %315 = fadd float %314, %313
  %316 = fmul float %288, %287
  %317 = fadd float %315, %316
  %318 = fmul float %298, %281
  %319 = fadd float %318, %317
  %320 = fadd float %225, %307
  %321 = fsub float %320, %225
  %322 = fsub float %320, %321
  %323 = fsub float %225, %322
  %324 = fsub float %307, %321
  %325 = fadd float %324, %323
  %326 = fadd float %231, %319
  %327 = fadd float %325, %326
  %328 = fadd float %320, 1.000000e+00
  %329 = fadd float %328, -1.000000e+00
  %330 = fsub float %328, %329
  %331 = fsub float 1.000000e+00, %330
  %332 = fsub float %320, %329
  %333 = fadd float %332, %331
  %334 = fadd float %333, %327
  %335 = ashr i32 %214, 1
  %336 = shl i32 %335, 23
  %337 = add i32 %336, 1065353216
  %338 = bitcast i32 %337 to float
  %339 = fmul float %328, %338
  %340 = sub nsw i32 %214, %335
  %341 = shl i32 %340, 23
  %342 = add i32 %341, 1065353216
  %343 = bitcast i32 %342 to float
  %344 = fmul float %339, %343
  %345 = fmul float %334, %338
  %346 = fmul float %345, %343
  %347 = fcmp olt float %205, -1.040000e+02
  %348 = insertelement <2 x float> undef, float %344, i32 0
  %349 = insertelement <2 x float> %348, float %346, i32 1
  %350 = select i1 %347, <2 x float> zeroinitializer, <2 x float> %349
  br i1 %6, label %373, label %351

; <label>:351:                                    ; preds = %203
  %352 = extractelement <2 x float> %350, i32 0
  %353 = bitcast float %352 to i32
  %354 = and i32 %353, -4096
  %355 = bitcast i32 %354 to float
  %356 = fsub float %352, %355
  %357 = fmul float %53, %352
  %358 = fmul float %76, %355
  %359 = fsub float %358, %357
  %360 = fmul float %356, %76
  %361 = fadd float %360, %359
  %362 = fmul float %77, %355
  %363 = fadd float %362, %361
  %364 = fmul float %77, %356
  %365 = fadd float %364, %363
  %366 = fmul float %91, %352
  %367 = fadd float %366, %365
  %368 = extractelement <2 x float> %350, i32 1
  %369 = fmul float %53, %368
  %370 = fadd float %369, %367
  %371 = insertelement <2 x float> undef, float %357, i32 0
  %372 = insertelement <2 x float> %371, float %370, i32 1
  br label %373

; <label>:373:                                    ; preds = %203, %351
  %374 = phi <2 x float> [ %372, %351 ], [ %350, %203 ]
  br i1 %8, label %375, label %379

; <label>:375:                                    ; preds = %373
  %376 = extractelement <2 x float> %374, i32 0
  %377 = extractelement <2 x float> %374, i32 1
  %378 = fadd float %376, %377
  br label %379

; <label>:379:                                    ; preds = %373, %375
  %380 = phi float [ %378, %375 ], [ 0.000000e+00, %373 ]
  %381 = fcmp olt float %0, 0.000000e+00
  %382 = fsub float 2.000000e+00, %380
  %383 = select i1 %381, float %382, float %380
  %384 = fcmp ord float %0, 0.000000e+00
  %385 = select i1 %384, float %383, float 0x7FF8000000000000
  ret float %385
}

attributes #0 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"float", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!"branch_weights", i32 1, i32 2000}
